//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ImagingExchangeSiteServiceSoap", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
public partial class ImagingExchangeSiteService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getVISNOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSitesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getSiteOperationCompleted;
    
    private System.Threading.SendOrPostCallback getImagingExchangeSitesOperationCompleted;
    
    /// <remarks/>
    public ImagingExchangeSiteService() {
        this.Url = "http://siteserver.vista.med.va.gov/VistaWebSvcs/ImagingExchangeSiteService.asmx";
    }
    
    /// <remarks/>
    public event getVISNCompletedEventHandler getVISNCompleted;
    
    /// <remarks/>
    public event getSitesCompletedEventHandler getSitesCompleted;
    
    /// <remarks/>
    public event getSiteCompletedEventHandler getSiteCompleted;
    
    /// <remarks/>
    public event getImagingExchangeSitesCompletedEventHandler getImagingExchangeSitesCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getVISN", RequestNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", ResponseNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ImagingExchangeRegionTO getVISN(string regionID) {
        object[] results = this.Invoke("getVISN", new object[] {
                    regionID});
        return ((ImagingExchangeRegionTO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetVISN(string regionID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getVISN", new object[] {
                    regionID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ImagingExchangeRegionTO EndgetVISN(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ImagingExchangeRegionTO)(results[0]));
    }
    
    /// <remarks/>
    public void getVISNAsync(string regionID) {
        this.getVISNAsync(regionID, null);
    }
    
    /// <remarks/>
    public void getVISNAsync(string regionID, object userState) {
        if ((this.getVISNOperationCompleted == null)) {
            this.getVISNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVISNOperationCompleted);
        }
        this.InvokeAsync("getVISN", new object[] {
                    regionID}, this.getVISNOperationCompleted, userState);
    }
    
    private void OngetVISNOperationCompleted(object arg) {
        if ((this.getVISNCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getVISNCompleted(this, new getVISNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getSites", RequestNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", ResponseNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ImagingExchangeSiteTO[] getSites(string siteIDs) {
        object[] results = this.Invoke("getSites", new object[] {
                    siteIDs});
        return ((ImagingExchangeSiteTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSites(string siteIDs, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSites", new object[] {
                    siteIDs}, callback, asyncState);
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO[] EndgetSites(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ImagingExchangeSiteTO[])(results[0]));
    }
    
    /// <remarks/>
    public void getSitesAsync(string siteIDs) {
        this.getSitesAsync(siteIDs, null);
    }
    
    /// <remarks/>
    public void getSitesAsync(string siteIDs, object userState) {
        if ((this.getSitesOperationCompleted == null)) {
            this.getSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSitesOperationCompleted);
        }
        this.InvokeAsync("getSites", new object[] {
                    siteIDs}, this.getSitesOperationCompleted, userState);
    }
    
    private void OngetSitesOperationCompleted(object arg) {
        if ((this.getSitesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSitesCompleted(this, new getSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getSite", RequestNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", ResponseNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ImagingExchangeSiteTO getSite(string siteID) {
        object[] results = this.Invoke("getSite", new object[] {
                    siteID});
        return ((ImagingExchangeSiteTO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetSite(string siteID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getSite", new object[] {
                    siteID}, callback, asyncState);
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO EndgetSite(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ImagingExchangeSiteTO)(results[0]));
    }
    
    /// <remarks/>
    public void getSiteAsync(string siteID) {
        this.getSiteAsync(siteID, null);
    }
    
    /// <remarks/>
    public void getSiteAsync(string siteID, object userState) {
        if ((this.getSiteOperationCompleted == null)) {
            this.getSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSiteOperationCompleted);
        }
        this.InvokeAsync("getSite", new object[] {
                    siteID}, this.getSiteOperationCompleted, userState);
    }
    
    private void OngetSiteOperationCompleted(object arg) {
        if ((this.getSiteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getSiteCompleted(this, new getSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getImagingExcha" +
        "ngeSites", RequestNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", ResponseNamespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ImagingExchangeSiteTO[] getImagingExchangeSites() {
        object[] results = this.Invoke("getImagingExchangeSites", new object[0]);
        return ((ImagingExchangeSiteTO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetImagingExchangeSites(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getImagingExchangeSites", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO[] EndgetImagingExchangeSites(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ImagingExchangeSiteTO[])(results[0]));
    }
    
    /// <remarks/>
    public void getImagingExchangeSitesAsync() {
        this.getImagingExchangeSitesAsync(null);
    }
    
    /// <remarks/>
    public void getImagingExchangeSitesAsync(object userState) {
        if ((this.getImagingExchangeSitesOperationCompleted == null)) {
            this.getImagingExchangeSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetImagingExchangeSitesOperationCompleted);
        }
        this.InvokeAsync("getImagingExchangeSites", new object[0], this.getImagingExchangeSitesOperationCompleted, userState);
    }
    
    private void OngetImagingExchangeSitesOperationCompleted(object arg) {
        if ((this.getImagingExchangeSitesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getImagingExchangeSitesCompleted(this, new getImagingExchangeSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
public partial class ImagingExchangeRegionTO {
    
    private string nameField;
    
    private string idField;
    
    private ImagingExchangeSiteTO[] sitesField;
    
    private FaultTO faultTOField;
    
    /// <remarks/>
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public string ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO[] sites {
        get {
            return this.sitesField;
        }
        set {
            this.sitesField = value;
        }
    }
    
    /// <remarks/>
    public FaultTO faultTO {
        get {
            return this.faultTOField;
        }
        set {
            this.faultTOField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
public partial class ImagingExchangeSiteTO {
    
    private string siteNumberField;
    
    private string siteNameField;
    
    private string regionIDField;
    
    private string siteAbbrField;
    
    private string vistaServerField;
    
    private int vistaPortField;
    
    private string acceleratorServerField;
    
    private int acceleratorPortField;
    
    private FaultTO faultTOField;
    
    /// <remarks/>
    public string siteNumber {
        get {
            return this.siteNumberField;
        }
        set {
            this.siteNumberField = value;
        }
    }
    
    /// <remarks/>
    public string siteName {
        get {
            return this.siteNameField;
        }
        set {
            this.siteNameField = value;
        }
    }
    
    /// <remarks/>
    public string regionID {
        get {
            return this.regionIDField;
        }
        set {
            this.regionIDField = value;
        }
    }
    
    /// <remarks/>
    public string siteAbbr {
        get {
            return this.siteAbbrField;
        }
        set {
            this.siteAbbrField = value;
        }
    }
    
    /// <remarks/>
    public string vistaServer {
        get {
            return this.vistaServerField;
        }
        set {
            this.vistaServerField = value;
        }
    }
    
    /// <remarks/>
    public int vistaPort {
        get {
            return this.vistaPortField;
        }
        set {
            this.vistaPortField = value;
        }
    }
    
    /// <remarks/>
    public string acceleratorServer {
        get {
            return this.acceleratorServerField;
        }
        set {
            this.acceleratorServerField = value;
        }
    }
    
    /// <remarks/>
    public int acceleratorPort {
        get {
            return this.acceleratorPortField;
        }
        set {
            this.acceleratorPortField = value;
        }
    }
    
    /// <remarks/>
    public FaultTO faultTO {
        get {
            return this.faultTOField;
        }
        set {
            this.faultTOField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
public partial class FaultTO {
    
    private string typeField;
    
    private string messageField;
    
    private string[] stackTraceField;
    
    private string suggestionField;
    
    /// <remarks/>
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            return this.messageField;
        }
        set {
            this.messageField = value;
        }
    }
    
    /// <remarks/>
    public string[] stackTrace {
        get {
            return this.stackTraceField;
        }
        set {
            this.stackTraceField = value;
        }
    }
    
    /// <remarks/>
    public string suggestion {
        get {
            return this.suggestionField;
        }
        set {
            this.suggestionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getVISNCompletedEventHandler(object sender, getVISNCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getVISNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getVISNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ImagingExchangeRegionTO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ImagingExchangeRegionTO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getSitesCompletedEventHandler(object sender, getSitesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ImagingExchangeSiteTO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getSiteCompletedEventHandler(object sender, getSiteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ImagingExchangeSiteTO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void getImagingExchangeSitesCompletedEventHandler(object sender, getImagingExchangeSitesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getImagingExchangeSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getImagingExchangeSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ImagingExchangeSiteTO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ImagingExchangeSiteTO[])(this.results[0]));
        }
    }
}
