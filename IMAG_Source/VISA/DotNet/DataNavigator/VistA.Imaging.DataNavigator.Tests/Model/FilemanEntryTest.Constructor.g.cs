// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace VistA.Imaging.DataNavigator.Model
{
    public partial class FilemanEntryTest
    {
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException703()
{
    FilemanEntry filemanEntry;
    filemanEntry = this.Constructor((FilemanFile)null);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void Constructor727()
{
    FilemanEntry filemanEntry;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Fields = (FilemanField[])null;
    filemanEntry = this.Constructor(s0);
    Assert.IsNotNull((object)filemanEntry);
    Assert.AreEqual<string>((string)null, filemanEntry.Ien);
    Assert.IsNotNull(filemanEntry.File);
    Assert.AreEqual<string>((string)null, filemanEntry.File.Name);
    Assert.AreEqual<string>((string)null, filemanEntry.File.Number);
    Assert.IsNull(filemanEntry.File.Fields);
    Assert.IsNull(filemanEntry.Values);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void Constructor985()
{
    FilemanEntry filemanEntry;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[0];
    s0.Fields = filemanFields;
    filemanEntry = this.Constructor(s0);
    Assert.IsNotNull((object)filemanEntry);
    Assert.AreEqual<string>((string)null, filemanEntry.Ien);
    Assert.IsNotNull(filemanEntry.File);
    Assert.AreEqual<string>((string)null, filemanEntry.File.Name);
    Assert.AreEqual<string>((string)null, filemanEntry.File.Number);
    Assert.IsNotNull(filemanEntry.File.Fields);
    Assert.AreEqual<int>(0, filemanEntry.File.Fields.Length);
    Assert.IsNull(filemanEntry.Values);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void Constructor578()
{
    FilemanEntry filemanEntry;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[1];
    s0.Fields = filemanFields;
    filemanEntry = this.Constructor(s0);
    Assert.IsNotNull((object)filemanEntry);
    Assert.AreEqual<string>((string)null, filemanEntry.Ien);
    Assert.IsNotNull(filemanEntry.File);
    Assert.AreEqual<string>((string)null, filemanEntry.File.Name);
    Assert.AreEqual<string>((string)null, filemanEntry.File.Number);
    Assert.IsNotNull(filemanEntry.File.Fields);
    Assert.AreEqual<int>(1, filemanEntry.File.Fields.Length);
    Assert.IsNull((object)(filemanEntry.File.Fields[0]));
    Assert.IsNotNull(filemanEntry.Values);
    Assert.AreEqual<int>(1, filemanEntry.Values.Length);
    Assert.IsNull((object)(filemanEntry.Values[0]));
}
    }
}
