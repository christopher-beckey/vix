// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Framework.Moles;
using VistA.Imaging.DataNavigator.Model.Moles;
using Microsoft.Pex.Framework;

namespace VistA.Imaging.DataNavigator.Model
{
    public partial class FilemanEntryTest
    {
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01272()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    s0.Values = (FilemanFieldValue[])null;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNull(s0.Values);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01368()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[0];
    s0.Values = filemanFieldValues;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(0, s0.Values.Length);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01700()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[1];
    s0.Values = filemanFieldValues;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, ]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(1, s0.Values.Length);
    Assert.IsNull((object)(s0.Values[0]));
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString0117()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[1];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    s1.Field = (FilemanField)null;
    s1.FieldNumber = (string)null;
    s1.InternalValue = (string)null;
    s1.ExternalValue = (string)null;
    filemanFieldValues[0] = s1;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(1, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[0].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01542()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[2];
    s0.Values = filemanFieldValues;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, , ]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(2, s0.Values.Length);
    Assert.IsNull((object)(s0.Values[0]));
    Assert.IsNull((object)(s0.Values[1]));
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01594()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    FilemanFile s1 = new FilemanFile();
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Fields = (FilemanField[])null;
    s0.File = s1;
    s0.Values = (FilemanFieldValue[])null;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNotNull(s0.File);
    Assert.AreEqual<string>((string)null, s0.File.Name);
    Assert.AreEqual<string>((string)null, s0.File.Number);
    Assert.IsNull(s0.File.Fields);
    Assert.IsNull(s0.Values);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01480()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[1];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = (string)null;
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    s1.Field = s2;
    s1.FieldNumber = (string)null;
    s1.InternalValue = (string)null;
    s1.ExternalValue = (string)null;
    filemanFieldValues[0] = s1;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(1, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNotNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
    Assert.IsNull(s0.Values[0].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
    Assert.IsNull(s0.Values[0].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[0].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01149()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[1];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    s1.Field = (FilemanField)null;
    s1.FieldNumber = (string)null;
    s1.InternalValue = "\0";
    s1.ExternalValue = (string)null;
    filemanFieldValues[0] = s1;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =(\0)]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(1, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>("\0", s0.Values[0].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[0].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01872()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    FilemanFile s1 = new FilemanFile();
    s1.Name = "\0";
    s1.Number = (string)null;
    s1.Fields = (FilemanField[])null;
    s0.File = s1;
    s0.Values = (FilemanFieldValue[])null;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("\0 ()", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNotNull(s0.File);
    Assert.AreEqual<string>("\0", s0.File.Name);
    Assert.AreEqual<string>((string)null, s0.File.Number);
    Assert.IsNull(s0.File.Fields);
    Assert.IsNull(s0.Values);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01592()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[1];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    s1.Field = (FilemanField)null;
    s1.FieldNumber = (string)null;
    s1.InternalValue = (string)null;
    s1.ExternalValue = "\0";
    filemanFieldValues[0] = s1;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =\0]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(1, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].InternalValue);
    Assert.AreEqual<string>("\0", s0.Values[0].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01756()
{
    using (PexChooseBehavedBehavior.Setup())
    {
      SFilemanFieldValue sFilemanFieldValue;
      string s;
      sFilemanFieldValue = new SFilemanFieldValue();
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.NextSegment(1).DefaultSession
          .At(0, "ToString", "");
      FilemanEntry s0 = new FilemanEntry();
      s0.Ien = (string)null;
      s0.File = (FilemanFile)null;
      FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[1];
      s0.Values = filemanFieldValues;
      filemanFieldValues[0] = (FilemanFieldValue)sFilemanFieldValue;
      s = this.ToString01(s0);
      Assert.AreEqual<string>("[, ]", s);
      Assert.IsNotNull((object)s0);
      Assert.AreEqual<string>((string)null, s0.Ien);
      Assert.IsNull(s0.File);
      Assert.IsNotNull(s0.Values);
      Assert.AreEqual<int>(1, s0.Values.Length);
      Assert.IsNotNull((object)(s0.Values[0]));
      Assert.IsNull(s0.Values[0].Field);
      Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
      Assert.AreEqual<string>((string)null, s0.Values[0].InternalValue);
      Assert.AreEqual<string>((string)null, s0.Values[0].ExternalValue);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString017()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[2];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = "";
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    s1.Field = s2;
    s1.FieldNumber = (string)null;
    s1.InternalValue = (string)null;
    s1.ExternalValue = (string)null;
    filemanFieldValues[0] = s1;
    FilemanFieldValue s3 = new FilemanFieldValue();
    s3.Field = (FilemanField)null;
    s3.FieldNumber = (string)null;
    s3.InternalValue = (string)null;
    s3.ExternalValue = (string)null;
    filemanFieldValues[1] = s3;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =, =]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(2, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNotNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
    Assert.IsNull(s0.Values[0].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
    Assert.AreEqual<string>("", s0.Values[0].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
    Assert.IsNull(s0.Values[0].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[0].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[1]));
    Assert.IsNull(s0.Values[1].Field);
    Assert.AreEqual<string>((string)null, s0.Values[1].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[1].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[1].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString011701()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[3];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = "";
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    s1.Field = s2;
    s1.FieldNumber = (string)null;
    s1.InternalValue = "";
    s1.ExternalValue = "";
    filemanFieldValues[0] = s1;
    FilemanFieldValue s3 = new FilemanFieldValue();
    s3.Field = (FilemanField)null;
    s3.FieldNumber = (string)null;
    s3.InternalValue = "\0";
    s3.ExternalValue = (string)null;
    filemanFieldValues[1] = s3;
    FilemanFieldValue s4 = new FilemanFieldValue();
    s4.Field = (FilemanField)null;
    s4.FieldNumber = (string)null;
    s4.InternalValue = (string)null;
    s4.ExternalValue = (string)null;
    filemanFieldValues[2] = s4;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =, =(\0), =]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(3, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNotNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
    Assert.IsNull(s0.Values[0].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
    Assert.AreEqual<string>("", s0.Values[0].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
    Assert.IsNull(s0.Values[0].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>("", s0.Values[0].InternalValue);
    Assert.AreEqual<string>("", s0.Values[0].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[1]));
    Assert.IsNull(s0.Values[1].Field);
    Assert.AreEqual<string>((string)null, s0.Values[1].FieldNumber);
    Assert.AreEqual<string>("\0", s0.Values[1].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[1].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[2]));
    Assert.IsNull(s0.Values[2].Field);
    Assert.AreEqual<string>((string)null, s0.Values[2].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[2].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[2].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01679()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[3];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = "";
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    s1.Field = s2;
    s1.FieldNumber = (string)null;
    s1.InternalValue = "";
    s1.ExternalValue = "";
    filemanFieldValues[0] = s1;
    FilemanFieldValue s3 = new FilemanFieldValue();
    s3.Field = (FilemanField)null;
    s3.FieldNumber = (string)null;
    s3.InternalValue = "\0";
    s3.ExternalValue = (string)null;
    filemanFieldValues[1] = s3;
    FilemanFieldValue s4 = new FilemanFieldValue();
    FilemanField s5 = new FilemanField();
    s5.DataType = (string)null;
    s5.File = (FilemanFile)null;
    s5.IsIndexed = false;
    s5.Name = (string)null;
    s5.Number = (string)null;
    s5.Pointer = (FilemanFilePointer)null;
    s5.PointerFileNumber = (string)null;
    s4.Field = s5;
    s4.FieldNumber = (string)null;
    s4.InternalValue = (string)null;
    s4.ExternalValue = (string)null;
    filemanFieldValues[2] = s4;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =, =(\0), =]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(3, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNotNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
    Assert.IsNull(s0.Values[0].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
    Assert.AreEqual<string>("", s0.Values[0].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
    Assert.IsNull(s0.Values[0].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>("", s0.Values[0].InternalValue);
    Assert.AreEqual<string>("", s0.Values[0].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[1]));
    Assert.IsNull(s0.Values[1].Field);
    Assert.AreEqual<string>((string)null, s0.Values[1].FieldNumber);
    Assert.AreEqual<string>("\0", s0.Values[1].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[1].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[2]));
    Assert.IsNotNull(s0.Values[2].Field);
    Assert.AreEqual<string>((string)null, s0.Values[2].Field.DataType);
    Assert.IsNull(s0.Values[2].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[2].Field.IsIndexed);
    Assert.AreEqual<string>((string)null, s0.Values[2].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[2].Field.Number);
    Assert.IsNull(s0.Values[2].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[2].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[2].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[2].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[2].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01612()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[3];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = "";
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    s1.Field = s2;
    s1.FieldNumber = (string)null;
    s1.InternalValue = "";
    s1.ExternalValue = "";
    filemanFieldValues[0] = s1;
    FilemanFieldValue s3 = new FilemanFieldValue();
    s3.Field = (FilemanField)null;
    s3.FieldNumber = (string)null;
    s3.InternalValue = "\0";
    s3.ExternalValue = (string)null;
    filemanFieldValues[1] = s3;
    FilemanFieldValue s4 = new FilemanFieldValue();
    s4.Field = (FilemanField)null;
    s4.FieldNumber = (string)null;
    s4.InternalValue = "\0";
    s4.ExternalValue = "\0";
    filemanFieldValues[2] = s4;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =, =(\0), =\0(\0)]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(3, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNotNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
    Assert.IsNull(s0.Values[0].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
    Assert.AreEqual<string>("", s0.Values[0].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
    Assert.IsNull(s0.Values[0].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>("", s0.Values[0].InternalValue);
    Assert.AreEqual<string>("", s0.Values[0].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[1]));
    Assert.IsNull(s0.Values[1].Field);
    Assert.AreEqual<string>((string)null, s0.Values[1].FieldNumber);
    Assert.AreEqual<string>("\0", s0.Values[1].InternalValue);
    Assert.AreEqual<string>((string)null, s0.Values[1].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[2]));
    Assert.IsNull(s0.Values[2].Field);
    Assert.AreEqual<string>((string)null, s0.Values[2].FieldNumber);
    Assert.AreEqual<string>("\0", s0.Values[2].InternalValue);
    Assert.AreEqual<string>("\0", s0.Values[2].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01155()
{
    string s;
    FilemanEntry s0 = new FilemanEntry();
    s0.Ien = (string)null;
    s0.File = (FilemanFile)null;
    FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[4];
    s0.Values = filemanFieldValues;
    FilemanFieldValue s1 = new FilemanFieldValue();
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = "";
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    s1.Field = s2;
    s1.FieldNumber = (string)null;
    s1.InternalValue = "";
    s1.ExternalValue = "";
    filemanFieldValues[0] = s1;
    FilemanFieldValue s3 = new FilemanFieldValue();
    s3.Field = (FilemanField)null;
    s3.FieldNumber = (string)null;
    s3.InternalValue = "\0";
    s3.ExternalValue = "";
    filemanFieldValues[1] = s3;
    FilemanFieldValue s4 = new FilemanFieldValue();
    s4.Field = (FilemanField)null;
    s4.FieldNumber = (string)null;
    s4.InternalValue = (string)null;
    s4.ExternalValue = "\0";
    filemanFieldValues[2] = s4;
    FilemanFieldValue s5 = new FilemanFieldValue();
    s5.Field = (FilemanField)null;
    s5.FieldNumber = (string)null;
    s5.InternalValue = (string)null;
    s5.ExternalValue = "\0";
    filemanFieldValues[3] = s5;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("[, =, =(\0), =\0, =\0]", s);
    Assert.IsNotNull((object)s0);
    Assert.AreEqual<string>((string)null, s0.Ien);
    Assert.IsNull(s0.File);
    Assert.IsNotNull(s0.Values);
    Assert.AreEqual<int>(4, s0.Values.Length);
    Assert.IsNotNull((object)(s0.Values[0]));
    Assert.IsNotNull(s0.Values[0].Field);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
    Assert.IsNull(s0.Values[0].Field.File);
    Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
    Assert.AreEqual<string>("", s0.Values[0].Field.Name);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
    Assert.IsNull(s0.Values[0].Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
    Assert.AreEqual<string>("", s0.Values[0].InternalValue);
    Assert.AreEqual<string>("", s0.Values[0].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[1]));
    Assert.IsNull(s0.Values[1].Field);
    Assert.AreEqual<string>((string)null, s0.Values[1].FieldNumber);
    Assert.AreEqual<string>("\0", s0.Values[1].InternalValue);
    Assert.AreEqual<string>("", s0.Values[1].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[2]));
    Assert.IsNull(s0.Values[2].Field);
    Assert.AreEqual<string>((string)null, s0.Values[2].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[2].InternalValue);
    Assert.AreEqual<string>("\0", s0.Values[2].ExternalValue);
    Assert.IsNotNull((object)(s0.Values[3]));
    Assert.IsNull(s0.Values[3].Field);
    Assert.AreEqual<string>((string)null, s0.Values[3].FieldNumber);
    Assert.AreEqual<string>((string)null, s0.Values[3].InternalValue);
    Assert.AreEqual<string>("\0", s0.Values[3].ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanEntryTest))]
public void ToString01194()
{
    using (PexChooseBehavedBehavior.Setup())
    {
      SFilemanFieldValue sFilemanFieldValue;
      string s;
      sFilemanFieldValue = new SFilemanFieldValue();
      IPexChoiceRecorder choices = PexChoose.Replay.Setup();
      choices.NextSegment(1).DefaultSession
          .At(0, "ToString", "")
          .At(1, "ToString", "");
      FilemanEntry s0 = new FilemanEntry();
      s0.Ien = (string)null;
      s0.File = (FilemanFile)null;
      FilemanFieldValue[] filemanFieldValues = new FilemanFieldValue[6];
      s0.Values = filemanFieldValues;
      FilemanFieldValue s1 = new FilemanFieldValue();
      FilemanField s2 = new FilemanField();
      s2.DataType = (string)null;
      s2.File = (FilemanFile)null;
      s2.IsIndexed = false;
      s2.Name = "";
      s2.Number = (string)null;
      s2.Pointer = (FilemanFilePointer)null;
      s2.PointerFileNumber = (string)null;
      s1.Field = s2;
      s1.FieldNumber = (string)null;
      s1.InternalValue = "";
      s1.ExternalValue = (string)null;
      filemanFieldValues[0] = s1;
      FilemanFieldValue s3 = new FilemanFieldValue();
      s3.Field = (FilemanField)null;
      s3.FieldNumber = (string)null;
      s3.InternalValue = "\0";
      s3.ExternalValue = "";
      filemanFieldValues[1] = s3;
      FilemanFieldValue s4 = new FilemanFieldValue();
      s4.Field = (FilemanField)null;
      s4.FieldNumber = (string)null;
      s4.InternalValue = "";
      s4.ExternalValue = "";
      filemanFieldValues[2] = s4;
      FilemanFieldValue s5 = new FilemanFieldValue();
      s5.Field = (FilemanField)null;
      s5.FieldNumber = (string)null;
      s5.InternalValue = "\0\0";
      s5.ExternalValue = "";
      filemanFieldValues[3] = s5;
      filemanFieldValues[4] = (FilemanFieldValue)sFilemanFieldValue;
      filemanFieldValues[5] = (FilemanFieldValue)sFilemanFieldValue;
      s = this.ToString01(s0);
      Assert.AreEqual<string>("[, =, =(\0), =, =(\0\0), , ]", s);
      Assert.IsNotNull((object)s0);
      Assert.AreEqual<string>((string)null, s0.Ien);
      Assert.IsNull(s0.File);
      Assert.IsNotNull(s0.Values);
      Assert.AreEqual<int>(6, s0.Values.Length);
      Assert.IsNotNull((object)(s0.Values[0]));
      Assert.IsNotNull(s0.Values[0].Field);
      Assert.AreEqual<string>((string)null, s0.Values[0].Field.DataType);
      Assert.IsNull(s0.Values[0].Field.File);
      Assert.AreEqual<bool>(false, s0.Values[0].Field.IsIndexed);
      Assert.AreEqual<string>("", s0.Values[0].Field.Name);
      Assert.AreEqual<string>((string)null, s0.Values[0].Field.Number);
      Assert.IsNull(s0.Values[0].Field.Pointer);
      Assert.AreEqual<string>((string)null, s0.Values[0].Field.PointerFileNumber);
      Assert.AreEqual<string>((string)null, s0.Values[0].FieldNumber);
      Assert.AreEqual<string>("", s0.Values[0].InternalValue);
      Assert.AreEqual<string>((string)null, s0.Values[0].ExternalValue);
      Assert.IsNotNull((object)(s0.Values[1]));
      Assert.IsNull(s0.Values[1].Field);
      Assert.AreEqual<string>((string)null, s0.Values[1].FieldNumber);
      Assert.AreEqual<string>("\0", s0.Values[1].InternalValue);
      Assert.AreEqual<string>("", s0.Values[1].ExternalValue);
      Assert.IsNotNull((object)(s0.Values[2]));
      Assert.IsNull(s0.Values[2].Field);
      Assert.AreEqual<string>((string)null, s0.Values[2].FieldNumber);
      Assert.AreEqual<string>("", s0.Values[2].InternalValue);
      Assert.AreEqual<string>("", s0.Values[2].ExternalValue);
      Assert.IsNotNull((object)(s0.Values[3]));
      Assert.IsNull(s0.Values[3].Field);
      Assert.AreEqual<string>((string)null, s0.Values[3].FieldNumber);
      Assert.AreEqual<string>("\0\0", s0.Values[3].InternalValue);
      Assert.AreEqual<string>("", s0.Values[3].ExternalValue);
      Assert.IsNotNull((object)(s0.Values[4]));
      Assert.IsNull(s0.Values[4].Field);
      Assert.AreEqual<string>((string)null, s0.Values[4].FieldNumber);
      Assert.AreEqual<string>((string)null, s0.Values[4].InternalValue);
      Assert.AreEqual<string>((string)null, s0.Values[4].ExternalValue);
      Assert.IsNotNull((object)(s0.Values[5]));
      Assert.IsTrue
          (object.ReferenceEquals((object)(s0.Values[5]), (object)(s0.Values[4])));
    }
}
    }
}
