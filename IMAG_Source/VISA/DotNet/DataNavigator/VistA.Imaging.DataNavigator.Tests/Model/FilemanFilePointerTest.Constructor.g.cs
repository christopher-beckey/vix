// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using VistA.Imaging.DataNavigator.Repositories;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using VistA.Imaging.DataNavigator.Repositories.Moles;

namespace VistA.Imaging.DataNavigator.Model
{
    public partial class FilemanFilePointerTest
    {
[TestMethod]
[PexGeneratedBy(typeof(FilemanFilePointerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException992()
{
    FilemanFilePointer filemanFilePointer;
    filemanFilePointer = this.Constructor
                             ((IFilemanFileRepository)null, (FilemanField)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFilePointerTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException752()
{
    SIFilemanFileRepository sIFilemanFileRepository;
    FilemanFilePointer filemanFilePointer;
    sIFilemanFileRepository = new SIFilemanFileRepository();
    filemanFilePointer =
      this.Constructor((IFilemanFileRepository)sIFilemanFileRepository, 
                       (FilemanField)null, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFilePointerTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException571()
{
    SIFilemanFileRepository sIFilemanFileRepository;
    FilemanFilePointer filemanFilePointer;
    sIFilemanFileRepository = new SIFilemanFileRepository();
    FilemanField s0 = new FilemanField();
    s0.DataType = (string)null;
    s0.File = (FilemanFile)null;
    s0.IsIndexed = false;
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Pointer = (FilemanFilePointer)null;
    s0.PointerFileNumber = (string)null;
    filemanFilePointer = this.Constructor
                             ((IFilemanFileRepository)sIFilemanFileRepository, s0, (string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFilePointerTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException172()
{
    SIFilemanFileRepository sIFilemanFileRepository;
    FilemanFilePointer filemanFilePointer;
    sIFilemanFileRepository = new SIFilemanFileRepository();
    FilemanField s0 = new FilemanField();
    s0.DataType = (string)null;
    s0.File = (FilemanFile)null;
    s0.IsIndexed = false;
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Pointer = (FilemanFilePointer)null;
    s0.PointerFileNumber = (string)null;
    filemanFilePointer =
      this.Constructor((IFilemanFileRepository)sIFilemanFileRepository, s0, "");
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFilePointerTest))]
public void Constructor643()
{
    SIFilemanFileRepository sIFilemanFileRepository;
    FilemanFilePointer filemanFilePointer;
    sIFilemanFileRepository = new SIFilemanFileRepository();
    FilemanField s0 = new FilemanField();
    s0.DataType = (string)null;
    s0.File = (FilemanFile)null;
    s0.IsIndexed = false;
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Pointer = (FilemanFilePointer)null;
    s0.PointerFileNumber = (string)null;
    filemanFilePointer =
      this.Constructor((IFilemanFileRepository)sIFilemanFileRepository, s0, "\0");
    Assert.IsNotNull((object)filemanFilePointer);
    Assert.IsNotNull(filemanFilePointer.SourceField);
    Assert.AreEqual<string>((string)null, filemanFilePointer.SourceField.DataType);
    Assert.IsNull(filemanFilePointer.SourceField.File);
    Assert.AreEqual<bool>(false, filemanFilePointer.SourceField.IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFilePointer.SourceField.Name);
    Assert.AreEqual<string>((string)null, filemanFilePointer.SourceField.Number);
    Assert.IsNull(filemanFilePointer.SourceField.Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFilePointer.SourceField.PointerFileNumber);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFilePointerTest))]
[ExpectedException(typeof(ArgumentException))]
public void ConstructorThrowsArgumentException585()
{
    SIFilemanFileRepository sIFilemanFileRepository;
    FilemanFilePointer filemanFilePointer;
    sIFilemanFileRepository = new SIFilemanFileRepository();
    FilemanField s0 = new FilemanField();
    s0.DataType = (string)null;
    s0.File = (FilemanFile)null;
    s0.IsIndexed = false;
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Pointer = (FilemanFilePointer)null;
    s0.PointerFileNumber = (string)null;
    filemanFilePointer =
      this.Constructor((IFilemanFileRepository)sIFilemanFileRepository, s0, "\t\t");
}
    }
}
