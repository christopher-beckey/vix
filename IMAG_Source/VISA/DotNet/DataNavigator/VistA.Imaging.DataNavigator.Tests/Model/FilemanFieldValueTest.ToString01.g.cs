// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace VistA.Imaging.DataNavigator.Model
{
    public partial class FilemanFieldValueTest
    {
[TestMethod]
[PexGeneratedBy(typeof(FilemanFieldValueTest))]
public void ToString01772()
{
    string s;
    FilemanFieldValue s0 = new FilemanFieldValue();
    s0.Field = (FilemanField)null;
    s0.FieldNumber = (string)null;
    s0.InternalValue = (string)null;
    s0.ExternalValue = (string)null;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("=", s);
    Assert.IsNotNull((object)s0);
    Assert.IsNull(s0.Field);
    Assert.AreEqual<string>((string)null, s0.FieldNumber);
    Assert.AreEqual<string>((string)null, s0.InternalValue);
    Assert.AreEqual<string>((string)null, s0.ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFieldValueTest))]
public void ToString01363()
{
    string s;
    FilemanFieldValue s0 = new FilemanFieldValue();
    s0.Field = (FilemanField)null;
    s0.FieldNumber = (string)null;
    s0.InternalValue = (string)null;
    s0.ExternalValue = "\0";
    s = this.ToString01(s0);
    Assert.AreEqual<string>("=\0", s);
    Assert.IsNotNull((object)s0);
    Assert.IsNull(s0.Field);
    Assert.AreEqual<string>((string)null, s0.FieldNumber);
    Assert.AreEqual<string>((string)null, s0.InternalValue);
    Assert.AreEqual<string>("\0", s0.ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFieldValueTest))]
public void ToString01626()
{
    string s;
    FilemanFieldValue s0 = new FilemanFieldValue();
    s0.Field = (FilemanField)null;
    s0.FieldNumber = (string)null;
    s0.InternalValue = "\0";
    s0.ExternalValue = (string)null;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("=(\0)", s);
    Assert.IsNotNull((object)s0);
    Assert.IsNull(s0.Field);
    Assert.AreEqual<string>((string)null, s0.FieldNumber);
    Assert.AreEqual<string>("\0", s0.InternalValue);
    Assert.AreEqual<string>((string)null, s0.ExternalValue);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFieldValueTest))]
public void ToString01271()
{
    string s;
    FilemanFieldValue s0 = new FilemanFieldValue();
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = false;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    s0.Field = s1;
    s0.FieldNumber = (string)null;
    s0.InternalValue = (string)null;
    s0.ExternalValue = (string)null;
    s = this.ToString01(s0);
    Assert.AreEqual<string>("=", s);
    Assert.IsNotNull((object)s0);
    Assert.IsNotNull(s0.Field);
    Assert.AreEqual<string>((string)null, s0.Field.DataType);
    Assert.IsNull(s0.Field.File);
    Assert.AreEqual<bool>(false, s0.Field.IsIndexed);
    Assert.AreEqual<string>((string)null, s0.Field.Name);
    Assert.AreEqual<string>((string)null, s0.Field.Number);
    Assert.IsNull(s0.Field.Pointer);
    Assert.AreEqual<string>((string)null, s0.Field.PointerFileNumber);
    Assert.AreEqual<string>((string)null, s0.FieldNumber);
    Assert.AreEqual<string>((string)null, s0.InternalValue);
    Assert.AreEqual<string>((string)null, s0.ExternalValue);
}
    }
}
