// <copyright file="DataNavigatorModuleTest.Constructor.g.cs" company="Department of Veterans Affairs">Copyright © Department of Veterans Affairs 2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Practices.Unity;
using Microsoft.Practices.Prism.Regions;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Practices.ServiceLocation;

namespace VistA.Imaging.DataNavigator
{
    public partial class DataNavigatorModuleTest
    {
[TestMethod]
[PexGeneratedBy(typeof(DataNavigatorModuleTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException753()
{
    DataNavigatorModule dataNavigatorModule;
    dataNavigatorModule =
      this.Constructor((IUnityContainer)null, (IRegionManager)null);
}
[TestMethod]
[PexGeneratedBy(typeof(DataNavigatorModuleTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void ConstructorThrowsArgumentNullException961()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      UnityContainer unityContainer;
      DataNavigatorModule dataNavigatorModule;
      object s0 = new object();
      unityContainer = UnityContainerFactory.Create(s0);
      disposables.Add((IDisposable)unityContainer);
      dataNavigatorModule =
        this.Constructor((IUnityContainer)unityContainer, (IRegionManager)null);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(DataNavigatorModuleTest))]
[ExpectedException(typeof(ActivationException))]
public void ConstructorThrowsActivationException232()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      UnityContainer unityContainer;
      RegionManager regionManager;
      DataNavigatorModule dataNavigatorModule;
      object s0 = new object();
      unityContainer = UnityContainerFactory.Create(s0);
      disposables.Add((IDisposable)unityContainer);
      regionManager = RegionManagerFactory.Create();
      dataNavigatorModule = this.Constructor
                                ((IUnityContainer)unityContainer, (IRegionManager)regionManager);
      disposables.Dispose();
    }
}
    }
}
