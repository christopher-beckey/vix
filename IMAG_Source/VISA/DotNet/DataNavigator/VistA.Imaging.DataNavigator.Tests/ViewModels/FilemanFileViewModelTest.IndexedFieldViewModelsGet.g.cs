// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.ObjectModel;
using VistA.Imaging.DataNavigator.Model;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using ImagingClient.Infrastructure.Prism.Mvvm;
using System.Windows.Threading;
using Microsoft.ExtendedReflection.DataAccess;

namespace VistA.Imaging.DataNavigator.ViewModels
{
    public partial class FilemanFileViewModelTest
    {
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet583()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Fields = (FilemanField[])null;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet96501()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[0];
    s0.Fields = filemanFields;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(0, filemanFileViewModel.File.Fields.Length);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet737()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Fields = (FilemanField[])null;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = true;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(true, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet630()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[1];
    s0.Fields = filemanFields;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(1, filemanFileViewModel.File.Fields.Length);
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet119()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[1];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = false;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[0] = s1;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(1, filemanFileViewModel.File.Fields.Length);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].File);
    Assert.AreEqual<bool>(false, filemanFileViewModel.File.Fields[0].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[0].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].PointerFileNumber);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet624()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[1];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = true;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[0] = s1;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(1, filemanFileViewModel.File.Fields.Length);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[0].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[0].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].PointerFileNumber);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet293()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[2];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = false;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[1] = s1;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(2, filemanFileViewModel.File.Fields.Length);
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[1]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].File);
    Assert.AreEqual<bool>(false, filemanFileViewModel.File.Fields[1].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[1].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].PointerFileNumber);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet995()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[2];
    s0.Fields = filemanFields;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(2, filemanFileViewModel.File.Fields.Length);
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[1]));
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet996()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[2];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = true;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[0] = s1;
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = false;
    s2.Name = (string)null;
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    filemanFields[1] = s2;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = true;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(2, filemanFileViewModel.File.Fields.Length);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[0].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[0].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[1]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].File);
    Assert.AreEqual<bool>(false, filemanFileViewModel.File.Fields[1].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[1].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].PointerFileNumber);
    Assert.AreEqual<bool>(true, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet470()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[2];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = true;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[0] = s1;
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = true;
    s2.Name = (string)null;
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    filemanFields[1] = s2;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = true;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(2, filemanFileViewModel.File.Fields.Length);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[0].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[0].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[1]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[1].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[1].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].PointerFileNumber);
    Assert.AreEqual<bool>(true, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void IndexedFieldViewModelsGet439()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[4];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = true;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[0] = s1;
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = PexSafeHelpers.ByteToBoolean((byte)8);
    s2.Name = (string)null;
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    filemanFields[1] = s2;
    FilemanField s3 = new FilemanField();
    s3.DataType = (string)null;
    s3.File = (FilemanFile)null;
    s3.IsIndexed = true;
    s3.Name = (string)null;
    s3.Number = (string)null;
    s3.Pointer = (FilemanFilePointer)null;
    s3.PointerFileNumber = (string)null;
    filemanFields[2] = s3;
    FilemanField s4 = new FilemanField();
    s4.DataType = (string)null;
    s4.File = (FilemanFile)null;
    s4.IsIndexed = true;
    s4.Name = (string)null;
    s4.Number = (string)null;
    s4.Pointer = (FilemanFilePointer)null;
    s4.PointerFileNumber = (string)null;
    filemanFields[3] = s4;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = true;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(4, filemanFileViewModel.File.Fields.Length);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[0].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[0].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[1]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].File);
    Assert.AreEqual<bool>(PexSafeHelpers.ByteToBoolean((byte)8), 
                          filemanFileViewModel.File.Fields[1].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[1].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[2]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[2].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[2].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[2].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[2].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[2].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[2].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[2].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[3]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[3].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[3].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[3].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[3].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[3].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[3].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[3].PointerFileNumber);
    Assert.AreEqual<bool>(true, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
[PexRaisedException(typeof(TermDestructionException))]
public void IndexedFieldViewModelsGetThrowsTermDestructionException439()
{
    FilemanFileViewModel filemanFileViewModel;
    ObservableCollection<FilemanFieldViewModel> observableCollection;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    FilemanField[] filemanFields = new FilemanField[14];
    s0.Fields = filemanFields;
    FilemanField s1 = new FilemanField();
    s1.DataType = (string)null;
    s1.File = (FilemanFile)null;
    s1.IsIndexed = true;
    s1.Name = (string)null;
    s1.Number = (string)null;
    s1.Pointer = (FilemanFilePointer)null;
    s1.PointerFileNumber = (string)null;
    filemanFields[0] = s1;
    FilemanField s2 = new FilemanField();
    s2.DataType = (string)null;
    s2.File = (FilemanFile)null;
    s2.IsIndexed = true;
    s2.Name = (string)null;
    s2.Number = (string)null;
    s2.Pointer = (FilemanFilePointer)null;
    s2.PointerFileNumber = (string)null;
    filemanFields[1] = s2;
    FilemanField s3 = new FilemanField();
    s3.DataType = (string)null;
    s3.File = (FilemanFile)null;
    s3.IsIndexed = true;
    s3.Name = (string)null;
    s3.Number = (string)null;
    s3.Pointer = (FilemanFilePointer)null;
    s3.PointerFileNumber = (string)null;
    filemanFields[2] = s3;
    FilemanField s4 = new FilemanField();
    s4.DataType = (string)null;
    s4.File = (FilemanFile)null;
    s4.IsIndexed = true;
    s4.Name = (string)null;
    s4.Number = (string)null;
    s4.Pointer = (FilemanFilePointer)null;
    s4.PointerFileNumber = (string)null;
    filemanFields[3] = s4;
    FilemanField s5 = new FilemanField();
    s5.DataType = (string)null;
    s5.File = (FilemanFile)null;
    s5.IsIndexed = true;
    s5.Name = (string)null;
    s5.Number = (string)null;
    s5.Pointer = (FilemanFilePointer)null;
    s5.PointerFileNumber = (string)null;
    filemanFields[6] = s5;
    FilemanField s6 = new FilemanField();
    s6.DataType = (string)null;
    s6.File = (FilemanFile)null;
    s6.IsIndexed = false;
    s6.Name = (string)null;
    s6.Number = (string)null;
    s6.Pointer = (FilemanFilePointer)null;
    s6.PointerFileNumber = (string)null;
    filemanFields[7] = s6;
    FilemanField s7 = new FilemanField();
    s7.DataType = (string)null;
    s7.File = (FilemanFile)null;
    s7.IsIndexed = false;
    s7.Name = (string)null;
    s7.Number = (string)null;
    s7.Pointer = (FilemanFilePointer)null;
    s7.PointerFileNumber = (string)null;
    filemanFields[8] = s7;
    FilemanField s8 = new FilemanField();
    s8.DataType = (string)null;
    s8.File = (FilemanFile)null;
    s8.IsIndexed = true;
    s8.Name = (string)null;
    s8.Number = (string)null;
    s8.Pointer = (FilemanFilePointer)null;
    s8.PointerFileNumber = (string)null;
    filemanFields[11] = s8;
    FilemanField s9 = new FilemanField();
    s9.DataType = (string)null;
    s9.File = (FilemanFile)null;
    s9.IsIndexed = false;
    s9.Name = (string)null;
    s9.Number = (string)null;
    s9.Pointer = (FilemanFilePointer)null;
    s9.PointerFileNumber = (string)null;
    filemanFields[13] = s9;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = true;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    observableCollection = this.IndexedFieldViewModelsGet(filemanFileViewModel);
    Assert.IsNotNull((object)observableCollection);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNotNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<int>(14, filemanFileViewModel.File.Fields.Length);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[0]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[0].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[0].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[0].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[0].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[1]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[1].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[1].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[1].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[1].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[2]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[2].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[2].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[2].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[2].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[2].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[2].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[2].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[3]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[3].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[3].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[3].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[3].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[3].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[3].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[3].PointerFileNumber);
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[4]));
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[5]));
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[6]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[6].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[6].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[6].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[6].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[6].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[6].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[6].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[7]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[7].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[7].File);
    Assert.AreEqual<bool>(false, filemanFileViewModel.File.Fields[7].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[7].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[7].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[7].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[7].PointerFileNumber);
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[8]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[8].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[8].File);
    Assert.AreEqual<bool>(false, filemanFileViewModel.File.Fields[8].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[8].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[8].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[8].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[8].PointerFileNumber);
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[9]));
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[10]));
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[11]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[11].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[11].File);
    Assert.AreEqual<bool>(true, filemanFileViewModel.File.Fields[11].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[11].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[11].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[11].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[11].PointerFileNumber);
    Assert.IsNull((object)(filemanFileViewModel.File.Fields[12]));
    Assert.IsNotNull((object)(filemanFileViewModel.File.Fields[13]));
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[13].DataType);
    Assert.IsNull(filemanFileViewModel.File.Fields[13].File);
    Assert.AreEqual<bool>(false, filemanFileViewModel.File.Fields[13].IsIndexed);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Fields[13].Name);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[13].Number);
    Assert.IsNull(filemanFileViewModel.File.Fields[13].Pointer);
    Assert.AreEqual<string>
        ((string)null, filemanFileViewModel.File.Fields[13].PointerFileNumber);
    Assert.AreEqual<bool>(true, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
    }
}
