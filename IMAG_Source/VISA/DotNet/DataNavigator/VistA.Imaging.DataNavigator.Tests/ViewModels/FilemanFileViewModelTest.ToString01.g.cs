// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using VistA.Imaging.DataNavigator.Model;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using ImagingClient.Infrastructure.Prism.Mvvm;
using System.Windows.Threading;

namespace VistA.Imaging.DataNavigator.ViewModels
{
    public partial class FilemanFileViewModelTest
    {
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void ToString01363()
{
    FilemanFileViewModel filemanFileViewModel;
    string s;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Fields = (FilemanField[])null;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = false;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    s = this.ToString01(filemanFileViewModel);
    Assert.AreEqual<string>(": ", s);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(false, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
[TestMethod]
[PexGeneratedBy(typeof(FilemanFileViewModelTest))]
public void ToString01245()
{
    FilemanFileViewModel filemanFileViewModel;
    string s;
    FilemanFile s0 = new FilemanFile();
    s0.Name = (string)null;
    s0.Number = (string)null;
    s0.Fields = (FilemanField[])null;
    filemanFileViewModel = new FilemanFileViewModel(s0);
    filemanFileViewModel.IsSelected = false;
    ((ViewModel)filemanFileViewModel).IsActive = true;
    ((ViewModel)filemanFileViewModel).UIDispatcher = (Dispatcher)null;
    s = this.ToString01(filemanFileViewModel);
    Assert.AreEqual<string>(": ", s);
    Assert.IsNotNull((object)filemanFileViewModel);
    Assert.IsNotNull(filemanFileViewModel.File);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Name);
    Assert.AreEqual<string>((string)null, filemanFileViewModel.File.Number);
    Assert.IsNull(filemanFileViewModel.File.Fields);
    Assert.AreEqual<bool>(false, filemanFileViewModel.IsSelected);
    Assert.AreEqual<bool>(true, ((ViewModel)filemanFileViewModel).IsActive);
    Assert.IsNull(((ViewModel)filemanFileViewModel).UIDispatcher);
}
    }
}
