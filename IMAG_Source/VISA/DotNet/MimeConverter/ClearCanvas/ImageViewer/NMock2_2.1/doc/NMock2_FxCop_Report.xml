<?xml version="1.0" encoding="utf-8"?><html xmlns="http://www.w3.org/TR/xhtml1/strict"><head><title>Analysis Report</title></head><style>
        #Title {font-family: Verdana; font-size: 14pt; color: black; font-weight: bold}
        .ColumnHeader {font-family: Verdana; font-size: 8pt; background-color:white; color: black}
        .CriticalError {font-family: Verdana; font-size: 8pt; color: darkred; font-weight: bold; vertical-align: middle; }
        .Error {font-family: Verdana; font-size: 8pt; color: royalblue; font-weight: bold; vertical-align: middle; }
        .CriticalWarning {font-family: Verdana; font-size: 8pt; color: darkorange; font-weight: bold; vertical-align: middle; }
        .Warning {font-family: Verdana; font-size: 8pt; color: darkgray; font-weight: bold; vertical-align: middle; }
        .Information {font-family: Verdana; font-size: 8pt; color: black; font-weight: bold; vertical-align: middle; }

        .PropertyName {font-family: Verdana; font-size: 8pt; color: black; font-weight: bold}
        .PropertyContent {font-family: Verdana; font-size: 8pt; color: black}
        .NodeIcon { font-family: WebDings; font-size: 12pt; color: navy; padding-right: 5;}
        .MessagesIcon { font-family: WebDings; font-size: 12pt; color: red;}
        .RuleDetails { padding-top: 10;}
        .SourceCode { background-color:#DDDDFF; }
        .RuleBlock { background-color:#EEEEFF; }
        .MessageNumber { font-family: Verdana; font-size: 10pt; color: darkred; }
        .MessageBlock { font-family: Verdana; font-size: 10pt; color: darkred; }
        .Resolution {font-family: Verdana; font-size: 8pt; color: black; }        
        .NodeLine { font-family: Verdana; font-size: 9pt;}
        .Note { font-family: Verdana; font-size: 9pt; color:black; background-color: #DDDDFF; }
        .NoteUser { font-family: Verdana; font-size: 9pt; font-weight: bold; }
        .NoteTime { font-family: Verdana; font-size: 8pt; font-style: italic; }
        .Button { font-family: Verdana; font-size: 9pt; color: blue; background-color: #EEEEEE; border-style: outset;}
        a:link { color: blue; text-decoration: none; }
        a:visited { color: blue; text-decoration: none; }
        a:active { color: blue; text-decoration: none; }
    </style><script>
        function ViewState(blockId) 
        { 
           var block = document.getElementById(blockId); 
           if (block.style.display=='none')
           { 
              block.style.display='block'; 
              if (block.className == 'MessageDiv')
              {
                var toggle = document.getElementById(blockId + "Toggle");                
                toggle.innerHTML = "6";
              }              
           }
           else
           { 
              block.style.display='none'; 
              if (block.className=='MessageDiv')
              {
                var toggle = document.getElementById(blockId + "Toggle");                
                toggle.innerHTML = "4";
              }            
           }            
        } 
       
        function SwitchAll(how)
        {          
           var nodes = document.getElementsByTagName("div"); 
           for (i = 0; i != nodes.length;i++)
           {    
              var block = nodes[i]; 
              if (block != null)
              { 
                 if (block.className == 'NodeDiv' || block.className == 'MessageBlockDiv' || IsMessageDivWithActionNone(block, how))
                 { 
                    block.style.display=how; 
                 }                
              } 
           } 
        } 
        
        function IsMessageDivWithActionNone(block, how)
        {
          if (block.className != 'MessageDiv') return false;
          if (how != 'none') return false;
          
          //as we're collapsing the tree, set the correct toggle icon
          var toggle = document.getElementById(block.id + "Toggle");                
          toggle.innerHTML = "4";         
          return true;
        }

        function ExpandAll()
        { 
           SwitchAll('block'); 
        } 
       
        function CollapseAll() 
        { 
           SwitchAll('none'); 
        } 
        
        function DoNothing() {}
        
        function ButtonState(blockId) 
        { 
           var block = document.getElementById(blockId); 
           if (block.style.borderStyle=='inset')
           { 
              block.style.borderStyle='outset'; 
           }
           else
           { 
              block.style.borderStyle='inset'; 
           } 
        } 
    </script><body bgcolor="white" alink="Black" vlink="Black" link="Black"><div id="Title">
        FxCop 1.36 Analysis Report
    </div><br /><table><tr><td class="Button" Id="ExpandAllButton" OnMouseOver="ButtonState('ExpandAllButton');" OnMouseOut="ButtonState('ExpandAllButton');"><a href="javascript:ExpandAll()">Expand All</a></td><td class="Button" Id="CollapseAllButton" OnMouseOver="ButtonState('CollapseAllButton');" OnMouseOut="ButtonState('CollapseAllButton');"><a href="javascript:CollapseAll();">Collapse All</a></td></tr></table><br /><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">2</nobr></a>$(ProjectDir)/../bin/Debug/NMock2.dll<nobr class="MessageNumber">
                        (127)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">1</nobr></a>nmock2.dll<nobr class="MessageNumber">
                        (127)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            nmock2.dll</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBBAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBBAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Add an AssemblyVersion attribute to 'NMock2.dll'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBBAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark assemblies with AssemblyVersionAttribute</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1016</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Assemblies should use version numbers. The version number is considered part of an assembly's identity. Versioning is applied by means of the AssemblyVersion attribute.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182155(VS.90).aspx">http://msdn2.microsoft.com/ms182155(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Mark 'NMock2.dll' with CLSCompliant(true) because it exposes externally visible types.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark assemblies with CLSCompliantAttribute</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1014</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182156(VS.90).aspx">http://msdn2.microsoft.com/ms182156(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr style="color: navy;">{} </nobr></a>NMock2<nobr class="MessageNumber">
                        (35)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ELAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Expect<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ELAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EALAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Expect</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EALAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAALAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAALAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Expect'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAALAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EKAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Fire<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EKAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAKAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Fire</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAKAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAKAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAKAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Fire'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAKAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EJAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Has<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EJAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAJAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Has</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAJAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAJAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAJAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Has'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAJAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EIAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Is<nobr class="MessageNumber">
                        (7)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EIAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBIAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            Is</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBIAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBBIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBBIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename type 'Is' so that it no longer conflicts with the reserved language keyword 'Is'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBBIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Is'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAIAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Anything<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAIAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAEAIAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Anything</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAEAIAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEAIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEAIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'Is.Anything' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAEAIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAIAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Nothing<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAIAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADAIAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Nothing</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADAIAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADAIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADAIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'Is.Nothing' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADAIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAIAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#NotNull<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAIAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAIAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #NotNull</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAIAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'Is.NotNull' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAIAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Null<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAIAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAIAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Null</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAIAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'Is.Null' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAIAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Out<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAIAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAIAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Out</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAIAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAIAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAIAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'Is.Out' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAIAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Matcher<nobr class="MessageNumber">
                        (7)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHAFAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAHAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAHAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADAHAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADAHAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADAHAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'Matcher.Matches(object)', consider providing a more meaningful name than parameter name 'o'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAHAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#op_BitwiseAnd(NMock2.Matcher,NMock2.Matcher)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAHAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAHAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #op_BitwiseAnd(NMock2.Matcher,NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAHAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBACAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBACAHAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'Matcher.operator &amp;(Matcher, Matcher)', correct the spelling of 'm' in parameter name 'm1' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 45)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBACAHAFAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBACAHAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'Matcher.operator &amp;(Matcher, Matcher)', correct the spelling of 'm' in parameter name 'm2' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 45)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBACAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAHAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">50</td><td class="Resolution" valign="top">Provide a method named 'BitwiseAnd' as a friendly alternate for operator 'Matcher.operator &amp;(Matcher, Matcher)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 45)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Operator overloads have named alternates</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2225</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">When redefining operators, implement named methods to provide access to the operator functionality from languages that do not support operator overloading. For example, the functionality of the '+' operator should also be accessible using an 'Add' method.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182355(VS.90).aspx">http://msdn2.microsoft.com/ms182355(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAHAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#op_BitwiseOr(NMock2.Matcher,NMock2.Matcher)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAHAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAHAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #op_BitwiseOr(NMock2.Matcher,NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAHAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBABAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBABAHAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'Matcher.operator |(Matcher, Matcher)', correct the spelling of 'm' in parameter name 'm1' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 56)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBABAHAFAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBABAHAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'Matcher.operator |(Matcher, Matcher)', correct the spelling of 'm' in parameter name 'm2' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 56)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBABAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAHAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">50</td><td class="Resolution" valign="top">Provide a method named 'BitwiseOr' as a friendly alternate for operator 'Matcher.operator |(Matcher, Matcher)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 56)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Operator overloads have named alternates</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2225</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">When redefining operators, implement named methods to provide access to the operator functionality from languages that do not support operator overloading. For example, the functionality of the '+' operator should also be accessible using an 'Add' method.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182355(VS.90).aspx">http://msdn2.microsoft.com/ms182355(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAHAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#op_LogicalNot(NMock2.Matcher)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAHAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAHAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #op_LogicalNot(NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAHAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAAHAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'Matcher.operator !(Matcher)', consider providing a more meaningful name than parameter name 'm'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 66)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAHAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAHAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">50</td><td class="Resolution" valign="top">Provide a method named 'LogicalNot' as a friendly alternate for operator 'Matcher.operator !(Matcher)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matcher.cs</a>
            (Line 66)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAHAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Operator overloads have named alternates</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2225</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">When redefining operators, implement named methods to provide access to the operator functionality from languages that do not support operator overloading. For example, the functionality of the '+' operator should also be accessible using an 'Add' method.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182355(VS.90).aspx">http://msdn2.microsoft.com/ms182355(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Mockery<nobr class="MessageNumber">
                        (9)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBGAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Mockery</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBGAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABGAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Provide an overridable implementation of Dispose(bool) on 'Mockery' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Implement IDisposable correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1063</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">All IDisposable types should implement the Dispose pattern correctly.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms244737(VS.90).aspx">http://msdn2.microsoft.com/ms244737(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAGAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#DefaultNameFor(System.Type)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAGAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAEAGAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #DefaultNameFor(System.Type)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAEAGAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEAGAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Mockery.DefaultNameFor(Type)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 219)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEAGAFAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEAGAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.ToLower()' could vary based on the current user's locale settings, replace this call in 'Mockery.DefaultNameFor(Type)' with a call to 'string.ToLower(CultureInfo)'. If the result of 'string.ToLower(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 223)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAEAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify CultureInfo</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1304</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182189(VS.90).aspx">http://msdn2.microsoft.com/ms182189(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAGAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Dispose()<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAGAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADAGAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #Dispose()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADAGAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBADAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBADAGAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Change 'Mockery.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 203)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBADAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Call GC.SuppressFinalize correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1816</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182269(VS.90).aspx">http://msdn2.microsoft.com/ms182269(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADAGAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Modify 'Mockery.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 203)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Implement IDisposable correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1063</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">All IDisposable types should implement the Dispose pattern correctly.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms244737(VS.90).aspx">http://msdn2.microsoft.com/ms244737(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAGAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#FirstLowerCaseChar(System.String)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAGAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAGAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #FirstLowerCaseChar(System.String)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAGAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAGAFAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'Mockery.FirstLowerCaseChar(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 228)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAGAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#NewMock`1()<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAGAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAGAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #NewMock`1()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAGAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBABAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBABAGAFAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">75</td><td class="Resolution" valign="top">Consider a design where 'Mockery.NewMock&lt;InterfaceOfMock&gt;()' doesn't require explicit type parameter 'InterfaceOfMock' in any call to it.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 54)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBABAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Generic methods should provide type parameter</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1004</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182150(VS.90).aspx">http://msdn2.microsoft.com/ms182150(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAGAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">On method 'Mockery.NewMock&lt;InterfaceOfMock&gt;()', prefix generic type parameter name 'InterfaceOfMock' with 'T'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 54)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should have correct prefix</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1715</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182243(VS.90).aspx">http://msdn2.microsoft.com/ms182243(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAGAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#NewMock`1(System.String)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAGAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAGAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #NewMock`1(System.String)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAGAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAAGAFAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">75</td><td class="Resolution" valign="top">Consider a design where 'Mockery.NewMock&lt;InterfaceOfMock&gt;(string)' doesn't require explicit type parameter 'InterfaceOfMock' in any call to it.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 65)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Generic methods should provide type parameter</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1004</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods where the type parameter cannot be inferred from the parameters and therefore has to be defined in the method call are too difficult to understand. Methods with a formal parameter typed as the generic method type parameter support inference. Methods with no formal parameter typed as the generic method type parameter don't support inference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182150(VS.90).aspx">http://msdn2.microsoft.com/ms182150(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAGAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAGAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">On method 'Mockery.NewMock&lt;InterfaceOfMock&gt;(string)', prefix generic type parameter name 'InterfaceOfMock' with 'T'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 65)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAGAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should have correct prefix</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1715</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Prefix interface names with the letter 'I' to indicate that the type is an interface, as in IFormattable. Prefix generic type parameter names with the letter 'T' and provide them with descriptive names, as in Dictionary&lt;TKey, TValue&gt;, unless a single 'T' is completely self-explanatory, as in Collection&lt;T&gt;. Use Pascal casing for both interface and type parameter names. Use abbreviations sparingly. Do not use the underscore character. Do use similar names when defining a class/interface pair where the class is a standard implementation of the interface. The names should differ only by the letter I prefixed on the interface name, as with Component and IComponent.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182243(VS.90).aspx">http://msdn2.microsoft.com/ms182243(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Mockery+Popper<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFAFAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAFAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Dispose()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAFAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAFAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Dispose()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAFAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAFAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAFAFAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Change 'Mockery.Popper.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Mockery.cs</a>
            (Line 246)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAFAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Call GC.SuppressFinalize correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1816</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182269(VS.90).aspx">http://msdn2.microsoft.com/ms182269(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Return<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAEAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            Return</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAEAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAEAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAEAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename type 'Return' so that it no longer conflicts with the reserved language keyword 'Return'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAEAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Return'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAEAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Signal<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Signal</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Signal'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Stub<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Stub</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Stub'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Throw<nobr class="MessageNumber">
                        (3)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBBAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            Throw</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBBAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBBBAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBBBAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename type 'Throw' so that it no longer conflicts with the reserved language keyword 'Throw'. Using a reserved keyword as the name of a type makes it harder for consumers in other languages to use the type.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBBBAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABBAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABBAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Throw'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABBAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Exception(System.Exception)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAABAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Exception(System.Exception)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAABAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAABAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAABAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Change either member or parameter name 'exception' so that one differs from the other.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Throw.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Throw.cs</a>
            (Line 16)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAABAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should not match member names</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1719</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Parameter names should be distinct from member names.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182252(VS.90).aspx">http://msdn2.microsoft.com/ms182252(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAFAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Verify<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAFAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAFAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            Verify</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAFAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAFAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAFAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Remove the public constructors from 'Verify'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAFAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Static holder types should not have constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1053</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182169(VS.90).aspx">http://msdn2.microsoft.com/ms182169(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr style="color: navy;">{} </nobr></a>NMock2.Actions<nobr class="MessageNumber">
                        (3)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAEAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>CollectAction<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAEAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABAEAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABAEAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAABAEAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAABAEAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAABAEAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAABAEAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'CollectAction.CollectAction(int)' initializes field 'CollectAction.collectedArgumentValue' of type 'object' to null. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Actions\CollectAction.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Actions\CollectAction.cs</a>
            (Line 13)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAABAEAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not initialize unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1805</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not make initializations that have already been done by the runtime.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182274(VS.90).aspx">http://msdn2.microsoft.com/ms182274(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAEAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ResultSynthesizer<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAEAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAAEAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.cctor()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAAEAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAAAEAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.cctor()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAAAEAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAAAEAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAAAEAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">90</td><td class="Resolution" valign="top">Initialize all static fields in 'ResultSynthesizer' when those fields are declared and remove the explicit static constructor.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Actions\ResultSynthesizer.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Actions\ResultSynthesizer.cs</a>
            (Line 10)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAAAEAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Initialize reference type static fields inline</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1810</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182275(VS.90).aspx">http://msdn2.microsoft.com/ms182275(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAAEAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#GetAction(System.Type,System.Collections.Hashtable)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAAEAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAEAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #GetAction(System.Type,System.Collections.Hashtable)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAAAEAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAAEAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAAAEAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'ResultSynthesizer.GetAction(Type, Hashtable)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Actions\ResultSynthesizer.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Actions\ResultSynthesizer.cs</a>
            (Line 54)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAAAEAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr style="color: navy;">{} </nobr></a>NMock2.Internal<nobr class="MessageNumber">
                        (26)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EIADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>BuildableExpectation<nobr class="MessageNumber">
                        (4)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EIADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBIADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            BuildableExpectation</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBIADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABIADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABIADAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Correct the spelling of 'Buildable' in type name 'BuildableExpectation'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABIADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAIADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.String,NMock2.Matcher,NMock2.Matcher)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAIADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAIADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.String,NMock2.Matcher,NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAIADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAIADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAIADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'BuildableExpectation.BuildableExpectation(string, Matcher, Matcher)' initializes field 'BuildableExpectation.callCount' of type 'int' to 0. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs</a>
            (Line 13)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAIADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not initialize unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1805</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not make initializations that have already been done by the runtime.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182274(VS.90).aspx">http://msdn2.microsoft.com/ms182274(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAIADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#IsEventAccessorMethod(NMock2.Monitoring.Invocation)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAIADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAIADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #IsEventAccessorMethod(NMock2.Monitoring.Invocation)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAIADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAIADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAIADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'BuildableExpectation.IsEventAccessorMethod(Invocation)' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs</a>
            (Line 136)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAIADAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAIADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'BuildableExpectation.IsEventAccessorMethod(Invocation)' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs</a>
            (Line 136)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAIADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify StringComparison</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1307</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386080(VS.90).aspx">http://msdn2.microsoft.com/bb386080(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAIADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#MockEventHandler(NMock2.Monitoring.Invocation,NMock2.Internal.IMockObject)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAIADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAIADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #MockEventHandler(NMock2.Monitoring.Invocation,NMock2.Internal.IMockObject)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAIADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAIADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAIADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'BuildableExpectation.MockEventHandler(Invocation, IMockObject)' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs</a>
            (Line 120)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAIADAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAIADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'BuildableExpectation.MockEventHandler(Invocation, IMockObject)' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\BuildableExpectation.cs</a>
            (Line 126)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAIADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify StringComparison</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1307</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386080(VS.90).aspx">http://msdn2.microsoft.com/bb386080(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>DescriptionWriter<nobr class="MessageNumber">
                        (3)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAHADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAHADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAHADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAHADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAHADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAHADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'StringWriter.StringWriter()' could vary based on the current user's locale settings, replace this call in 'DescriptionWriter.DescriptionWriter()' with a call to 'StringWriter.StringWriter(IFormatProvider)'. If the result of 'StringWriter.StringWriter(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\DescriptionWriter.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\DescriptionWriter.cs</a>
            (Line 7)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAHADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAHADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#FormatString(System.String)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAHADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAHADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #FormatString(System.String)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAHADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAHADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAHADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'DescriptionWriter.FormatString(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\DescriptionWriter.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\DescriptionWriter.cs</a>
            (Line 33)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAHADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAHADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#FormatValue(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAHADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAHADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #FormatValue(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAHADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAHADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAHADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'value', a parameter, is cast to type 'string' multiple times in method 'DescriptionWriter.FormatValue(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\DescriptionWriter.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\DescriptionWriter.cs</a>
            (Line 24)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAHADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>EventInvocationBuilder<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAGADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#On(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAGADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAGADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #On(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAGADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAGADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAGADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o', a parameter, is cast to type 'IMockObject' multiple times in method 'EventInvocationBuilder.On(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant isint instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\EventInvocationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\EventInvocationBuilder.cs</a>
            (Line 33)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAGADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ExpectationBuilder<nobr class="MessageNumber">
                        (10)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EIAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.String,NMock2.Matcher,NMock2.Matcher)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EIAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAIAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.String,NMock2.Matcher,NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAIAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAIAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAIAFADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'ExpectationBuilder.ExpectationBuilder(string, Matcher, Matcher)' initializes field 'ExpectationBuilder.mockObject' of type 'IMockObject' to null. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 14)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAIAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not initialize unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1805</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not make initializations that have already been done by the runtime.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182274(VS.90).aspx">http://msdn2.microsoft.com/ms182274(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#ArgumentMatchers(System.Object[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAHAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #ArgumentMatchers(System.Object[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAHAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAHAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAHAFADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o', a variable, is cast to type 'Matcher' multiple times in method 'ExpectationBuilder.ArgumentMatchers(object[])'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 280)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAHAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Get<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGAFADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAGAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()">
                            [Accessor]    
                        </a>#get_Get()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAGAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAGAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #get_Get()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAGAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAGAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAGAFADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'ExpectationBuilder.Get.get()' creates an exception of type 'ArgumentException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 134)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAGAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not raise exceptions in unexpected locations</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1065</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386039(VS.90).aspx">http://msdn2.microsoft.com/bb386039(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#GetProperty(System.String)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAFAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #GetProperty(System.String)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAFAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAFAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAFAFADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'ExpectationBuilder.GetProperty(string)', change parameter name 'propertyName' to 'name' in order to match the identifier as it has been declared in 'IMethodSyntax.GetProperty(string)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 82)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAFAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Method(NMock2.Matcher,System.Type[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAEAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Method(NMock2.Matcher,System.Type[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAEAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEAFADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'ExpectationBuilder.Method(Matcher, params Type[])', change parameter name 'methodMatcher' to 'nameMatcher' in order to match the identifier as it has been declared in 'IMethodSyntax.Method(Matcher, params Type[])'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 51)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAEAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Method(System.String,System.Type[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Method(System.String,System.Type[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADAFADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'ExpectationBuilder.Method(string, params Type[])', change parameter name 'methodName' to 'name' in order to match the identifier as it has been declared in 'IMethodSyntax.Method(string, params Type[])'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 41)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#On(System.Object)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #On(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBACAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBACAFADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'receiver', a parameter, is cast to type 'IMockObject' multiple times in method 'ExpectationBuilder.On(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 27)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBACAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAFADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'ExpectationBuilder.On(object)', change parameter name 'receiver' to 'o' in order to match the identifier as it has been declared in 'IReceiverSyntax.On(object)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 24)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Set<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAFADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()">
                            [Accessor]    
                        </a>#get_Set()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAABAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #get_Set()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAABAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAABAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAABAFADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'ExpectationBuilder.Set.get()' creates an exception of type 'ArgumentException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 171)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAABAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not raise exceptions in unexpected locations</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1065</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386039(VS.90).aspx">http://msdn2.microsoft.com/bb386039(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAFADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#SetProperty(System.String)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAFADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAFADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #SetProperty(System.String)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAFADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAFADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAFADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'ExpectationBuilder.SetProperty(string)', change parameter name 'propertyName' to 'name' in order to match the identifier as it has been declared in 'IMethodSyntax.SetProperty(string)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</a>
            (Line 96)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAFADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ExpectationException<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAEADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAEADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAEADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAEADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAEADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAEADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Change the accessibility of 'ExpectationException.ExpectationException(SerializationInfo, StreamingContext)' to protected.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationException.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationException.cs</a>
            (Line 21)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAEADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Implement standard exception constructors</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1032</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Multiple constructors are required to correctly implement a custom exception. Missing constructors can make your exception unusable in certain scenarios. For example, the serialization constructor is required for handling exceptions in XML Web services.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182151(VS.90).aspx">http://msdn2.microsoft.com/ms182151(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IMockObject<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAADADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#RaiseEvent(System.String,System.Object[])<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAADADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAADADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #RaiseEvent(System.String,System.Object[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAADADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAADADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAADADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IMockObject.RaiseEvent(string, params object[])' so that it no longer conflicts with the reserved language keyword 'RaiseEvent'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAADADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAADADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAADADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">75</td><td class="Resolution" valign="top">Consider making 'IMockObject.RaiseEvent(string, params object[])' an event.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAADADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Use events where appropriate</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1030</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A method name suggestive of event functionality was encountered.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182177(VS.90).aspx">http://msdn2.microsoft.com/ms182177(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>MockObject<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAACADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#RaiseEvent(System.String,System.Object[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAACADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAACADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #RaiseEvent(System.String,System.Object[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAACADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAACADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAACADAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'MockObject.RaiseEvent(string, params object[])' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\MockObject.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\MockObject.cs</a>
            (Line 69)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAACADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>OrderedExpectations<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBABADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBABADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABABADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABABADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABABADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABABADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'OrderedExpectations.OrderedExpectations(int)' initializes field 'OrderedExpectations.current' of type 'int' to 0. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\OrderedExpectations.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\OrderedExpectations.cs</a>
            (Line 11)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABABADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not initialize unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1805</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not make initializations that have already been done by the runtime.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182274(VS.90).aspx">http://msdn2.microsoft.com/ms182274(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Indent(System.IO.TextWriter,System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAABADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Indent(System.IO.TextWriter,System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAABADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAABADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAABADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'OrderedExpectations.Indent(TextWriter, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\OrderedExpectations.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\OrderedExpectations.cs</a>
            (Line 114)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAABADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>UnorderedExpectations<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAADAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAAADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAAADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAAADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAAADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'UnorderedExpectations.UnorderedExpectations()' initializes field 'UnorderedExpectations.depth' of type 'int' to 0. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\UnorderedExpectations.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\UnorderedExpectations.cs</a>
            (Line 16)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAAADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not initialize unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1805</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not make initializations that have already been done by the runtime.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182274(VS.90).aspx">http://msdn2.microsoft.com/ms182274(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAADAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Indent(System.IO.TextWriter,System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAADAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAADAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Indent(System.IO.TextWriter,System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAAADAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAADAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAAADAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'UnorderedExpectations.Indent(TextWriter, int)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\UnorderedExpectations.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\UnorderedExpectations.cs</a>
            (Line 102)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAAADAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr style="color: navy;">{} </nobr></a>NMock2.Matchers<nobr class="MessageNumber">
                        (18)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EKACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ArgumentsMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EKACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAKACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAKACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAKACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAKACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAKACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAKACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o', a parameter, is cast to type 'Invocation' multiple times in method 'ArgumentsMatcher.Matches(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\ArgumentsMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\ArgumentsMatcher.cs</a>
            (Line 32)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAKACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EJACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ArgumentsMatcher+OutMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EJACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAJACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            ArgumentsMatcher+OutMatcher</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAJACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAJACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAJACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Do not nest type 'ArgumentsMatcher.OutMatcher'. Alternatively, change its accessibility so that it is not externally visible.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAJACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Nested types should not be visible</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1034</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182162(VS.90).aspx">http://msdn2.microsoft.com/ms182162(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EIACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>BinaryOperator<nobr class="MessageNumber">
                        (4)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EIACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAIACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#left<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAIACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAIACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #left</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAIACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBABAIACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBABAIACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'BinaryOperator.left' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBABAIACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAIACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAIACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Because field 'BinaryOperator.left' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAIACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare visible instance fields</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1051</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182141(VS.90).aspx">http://msdn2.microsoft.com/ms182141(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAIACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#right<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAIACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAIACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #right</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAIACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAAIACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAAIACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'BinaryOperator.right' or change the field to one that is an immutable reference type. If the reference type 'Matcher' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAAIACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAIACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAIACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Because field 'BinaryOperator.right' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAIACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare visible instance fields</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1051</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182141(VS.90).aspx">http://msdn2.microsoft.com/ms182141(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ComparisonMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAHACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.IComparable,System.Int32,System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAHACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAHACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.IComparable,System.Int32,System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAHACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAHACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAHACAAAACAToggle">4</nobr></a></td><td class="CriticalError">CriticalError</td><td valign="top" style=" text-align: center; " class="CriticalError">95</td><td class="Resolution" valign="top">Method 'ComparisonMatcher.ComparisonMatcher(IComparable, int, int)' passes 'comparisonResult1, comparisonResult2' as the 'paramName' argument to a 'ArgumentException' constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\ComparisonMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\ComparisonMatcher.cs</a>
            (Line 29)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAHACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Instantiate argument exceptions correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2208</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">String arguments passed to constructors of ArgumentException and its derived types should be correct. Types derived from ArgumentException have inconsistent constructor overloads with respect to the message and paramName parameters as compared to ArgumentException.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182347(VS.90).aspx">http://msdn2.microsoft.com/ms182347(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ElementMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAGACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAGACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAGACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAGACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAGACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAGACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'ElementMatcher.Matches(object)', change parameter name 'actual' to 'o' in order to match the identifier as it has been declared in 'Matcher.Matches(object)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\ElementMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\ElementMatcher.cs</a>
            (Line 29)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAGACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>EqualMatcher<nobr class="MessageNumber">
                        (3)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAFACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#AreEqual(System.Object,System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAFACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAFACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #AreEqual(System.Object,System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAFACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAFACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAFACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o1', a parameter, is cast to type 'Array' multiple times in method 'EqualMatcher.AreEqual(object, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs</a>
            (Line 38)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAFACAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAFACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o1', a parameter, is cast to type 'IList' multiple times in method 'EqualMatcher.AreEqual(object, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs</a>
            (Line 42)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAFACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAFACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o2', a parameter, is cast to type 'Array' multiple times in method 'EqualMatcher.AreEqual(object, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs</a>
            (Line 38)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAFACAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAFACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o2', a parameter, is cast to type 'IList' multiple times in method 'EqualMatcher.AreEqual(object, object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs</a>
            (Line 42)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAFACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAFACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#ArrayDimensionsEqual(System.Array,System.Array)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAFACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAFACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #ArrayDimensionsEqual(System.Array,System.Array)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAFACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAFACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAFACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'EqualMatcher.ArrayDimensionsEqual(Array, Array)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs</a>
            (Line 58)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAFACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAFACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAFACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAFACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAFACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAFACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAFACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">In member 'EqualMatcher.Matches(object)', change parameter name 'actual' to 'o' in order to match the identifier as it has been declared in 'Matcher.Matches(object)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\EqualMatcher.cs</a>
            (Line 30)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAFACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should match base declaration</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1725</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">For usability reasons, parameter names in overridden methods should match those of the base declaration.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182251(VS.90).aspx">http://msdn2.microsoft.com/ms182251(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>FieldMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAEACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#DescribeTo(System.IO.TextWriter)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAEACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAEACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #DescribeTo(System.IO.TextWriter)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAEACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAEACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAEACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FieldMatcher.DescribeTo(TextWriter)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\FieldMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\FieldMatcher.cs</a>
            (Line 48)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAEACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>GenericMethodTypeParametersMatcher<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBADACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBADACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABADACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABADACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABADACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABADACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o', a parameter, is cast to type 'Invocation' multiple times in method 'GenericMethodTypeParametersMatcher.Matches(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\GenericMethodTypeParametersMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\GenericMethodTypeParametersMatcher.cs</a>
            (Line 33)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABADACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAADACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#OutParameter<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAADACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAADACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #OutParameter</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAADACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAADACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAADACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">75</td><td class="Resolution" valign="top">It appears that field 'GenericMethodTypeParametersMatcher.OutParameter' is never used or is only ever assigned to. Use this field or remove it.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAADACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Avoid unused private fields</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1823</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245042(VS.90).aspx">http://msdn2.microsoft.com/ms245042(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>MethodNameMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAACACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAACACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAACACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAACACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAACACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAACACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o', a parameter, is cast to type 'MethodInfo' multiple times in method 'MethodNameMatcher.Matches(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\MethodNameMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\MethodNameMatcher.cs</a>
            (Line 29)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAACACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>PropertyMatcher<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#DescribeTo(System.IO.TextWriter)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAABACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #DescribeTo(System.IO.TextWriter)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAABACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAABACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAABACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'PropertyMatcher.DescribeTo(TextWriter)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\PropertyMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\PropertyMatcher.cs</a>
            (Line 50)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAABACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>StringContainsMatcher<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAACAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAACAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Matches(System.Object)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAACAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAACAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #Matches(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAAACAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAAAACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAAAACAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'o', a parameter, is cast to type 'string' multiple times in method 'StringContainsMatcher.Matches(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\StringContainsMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\StringContainsMatcher.cs</a>
            (Line 28)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAAAACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAACAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAAACAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'StringContainsMatcher.Matches(object)' makes a call to 'string.IndexOf(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.IndexOf(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\StringContainsMatcher.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Matchers\StringContainsMatcher.cs</a>
            (Line 28)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAAACAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify StringComparison</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1307</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386080(VS.90).aspx">http://msdn2.microsoft.com/bb386080(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr style="color: navy;">{} </nobr></a>NMock2.Monitoring<nobr class="MessageNumber">
                        (25)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EIABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IInvokable<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EIABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAIABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            IInvokable</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAIABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAIABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAIABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Correct the spelling of 'Invokable' in type name 'IInvokable'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAIABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>Invocation<nobr class="MessageNumber">
                        (9)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHABAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.Object,System.Reflection.MethodInfo,System.Object[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAHAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.Object,System.Reflection.MethodInfo,System.Object[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAHAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAHAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAHAHABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'Invocation.Invocation(object, MethodInfo, object[])' initializes field 'Invocation.exception' of type 'Exception' to null. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 18)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAHAHABAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAHAHABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">90</td><td class="Resolution" valign="top">'Invocation.Invocation(object, MethodInfo, object[])' initializes field 'Invocation.isThrowing' of type 'bool' to false. Remove this initialization because it will be done automatically by the runtime.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 19)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAHAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not initialize unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1805</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Do not make initializations that have already been done by the runtime.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182274(VS.90).aspx">http://msdn2.microsoft.com/ms182274(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#DescribeType(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAGAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #DescribeType(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAGAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAGAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAGAHABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'Invocation.DescribeType(object)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 288)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAGAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Method<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAFAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Method</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAFAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAFAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAFAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Because field 'Invocation.Method' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAFAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare visible instance fields</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1051</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182141(VS.90).aspx">http://msdn2.microsoft.com/ms182141(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#MethodIsEventAdder()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAEAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #MethodIsEventAdder()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAEAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'Invocation.MethodIsEventAdder()' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 184)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAEAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify StringComparison</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1307</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386080(VS.90).aspx">http://msdn2.microsoft.com/bb386080(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#MethodIsEventRemover()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #MethodIsEventRemover()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'Invocation.MethodIsEventRemover()' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 192)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify StringComparison</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1307</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386080(VS.90).aspx">http://msdn2.microsoft.com/bb386080(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#MethodIsProperty()<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #MethodIsProperty()</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'Invocation.MethodIsProperty()' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 163)
        </td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACAHABAAAACA');&#xD;&#xA;        " bgcolor="white"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">'Invocation.MethodIsProperty()' makes a call to 'string.StartsWith(string)' that does not explicitly provide a StringComparison. This should be replaced with a call to 'string.StartsWith(string, StringComparison)'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\Invocation.cs</a>
            (Line 163)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify StringComparison</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1307</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb386080(VS.90).aspx">http://msdn2.microsoft.com/bb386080(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Parameters<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #Parameters</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBABAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBABAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">25</td><td class="Resolution" valign="top">Remove the read-only designation from 'Invocation.Parameters' or change the field to one that is an immutable reference type. If the reference type 'ParameterList' is, in fact, immutable, exclude this message.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBABAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare read only mutable reference types</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2104</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182302(VS.90).aspx">http://msdn2.microsoft.com/ms182302(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Because field 'Invocation.Parameters' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare visible instance fields</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1051</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182141(VS.90).aspx">http://msdn2.microsoft.com/ms182141(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAHABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">ë</nobr></a>#Receiver<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAHABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAHABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Receiver</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAHABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAHABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAHABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">90</td><td class="Resolution" valign="top">Because field 'Invocation.Receiver' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAHABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not declare visible instance fields</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1051</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182141(VS.90).aspx">http://msdn2.microsoft.com/ms182141(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>MockObjectFactory<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGABAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAGABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#DefineMethod(System.Reflection.Emit.TypeBuilder,System.Reflection.MethodInfo,System.Boolean)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAGABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAGABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #DefineMethod(System.Reflection.Emit.TypeBuilder,System.Reflection.MethodInfo,System.Boolean)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAGABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAGABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAGABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">Parameter 'explicitImplementation' of 'MockObjectFactory.DefineMethod(TypeBuilder, MethodInfo, bool)' is never used. Remove the parameter or use it in the method body.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectFactory.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectFactory.cs</a>
            (Line 168)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAGABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Review unused parameters</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Usage</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1801</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">UsageRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182268(VS.90).aspx">http://msdn2.microsoft.com/ms182268(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAGABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#DefineParameters(System.Reflection.Emit.MethodBuilder,System.Reflection.MethodInfo)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAGABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAGABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #DefineParameters(System.Reflection.Emit.MethodBuilder,System.Reflection.MethodInfo)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAGABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAGABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAGABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'MockObjectFactory.DefineParameters(MethodBuilder, MethodInfo)' declares a variable, 'pb', of type 'ParameterBuilder', which is never used or is only assigned to. Use this variable or remove it.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectFactory.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectFactory.cs</a>
            (Line 221)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAGABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Remove unused locals</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1804</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Remove locals that are not used or are only assigned to in method implementations.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182278(VS.90).aspx">http://msdn2.microsoft.com/ms182278(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>MockObjectFactory+TypeId<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFABAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAFABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Equals(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAFABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAFABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Equals(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAFABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAFABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAFABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'obj', a parameter, is cast to type 'MockObjectFactory.TypeId' multiple times in method 'MockObjectFactory.TypeId.Equals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectFactory.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectFactory.cs</a>
            (Line 290)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAFABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>MultiInterfaceFactory<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBEABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            MultiInterfaceFactory</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBEABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABEABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABEABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Correct the spelling of 'Multi' in type name 'MultiInterfaceFactory'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABEABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAEABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Id(System.Type[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAEABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAEABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Id(System.Type[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAEABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAEABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAEABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">The 'this' parameter (or 'Me' in Visual Basic) of 'MultiInterfaceFactory.Id(params Type[])' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MultiInterfaceFactory.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MultiInterfaceFactory.cs</a>
            (Line 51)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAEABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Mark members as static</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1822</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms245046(VS.90).aspx">http://msdn2.microsoft.com/ms245046(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>MultiInterfaceFactory+TypeId<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDABAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAADABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Equals(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAADABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAADABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Equals(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAADABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAADABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAADABAAAACAToggle">4</nobr></a></td><td class="Warning">Warning</td><td valign="top" style=" text-align: center; " class="Warning">95</td><td class="Resolution" valign="top">'obj', a parameter, is cast to type 'MultiInterfaceFactory.TypeId' multiple times in method 'MultiInterfaceFactory.TypeId.Equals(object)'. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant castclass instruction.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MultiInterfaceFactory.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MultiInterfaceFactory.cs</a>
            (Line 76)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAADABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Do not cast unnecessarily</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Performance</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1800</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Avoid duplicate casts where possible, since there is a cost associated with them.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">PerformanceRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182271(VS.90).aspx">http://msdn2.microsoft.com/ms182271(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ParameterList<nobr class="MessageNumber">
                        (4)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECABAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBACABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#IsValueSet(System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBACABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABACABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #IsValueSet(System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABACABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABACABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABACABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'ParameterList.IsValueSet(int)', consider providing a more meaningful name than parameter name 'i'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs</a>
            (Line 74)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABACABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAACABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Item[System.Int32]<nobr class="MessageNumber">
                        (3)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAACABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAACABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Item[System.Int32]</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBAACABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAACABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABAACABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'ParameterList.this[int]', consider providing a more meaningful name than parameter name 'i'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs</a>
            (Line 34)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABAACABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAACABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()">
                            [Accessor]    
                        </a>#get_Item(System.Int32)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAACABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAAACABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #get_Item(System.Int32)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAAACABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAAACABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAAACABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ParameterList.this.get(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs</a>
            (Line 41)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAAACABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAACABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()">
                            [Accessor]    
                        </a>#set_Item(System.Int32,System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAACABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAACABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #set_Item(System.Int32,System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAAACABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAACABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAAACABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ParameterList.this.set(int, object)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ParameterList.cs</a>
            (Line 53)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAAACABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ProxiedObjectIdentity<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            ProxiedObjectIdentity</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Correct the spelling of 'Proxied' in type name 'ProxiedObjectIdentity'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ProxyInvokableAdapter<nobr class="MessageNumber">
                        (4)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            ProxyInvokableAdapter</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EBAABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EABAABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">Correct the spelling of 'Invokable' in type name 'ProxyInvokableAdapter'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EABAABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#.ctor(System.Type,NMock2.Monitoring.IInvokable)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAAABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #.ctor(System.Type,NMock2.Monitoring.IInvokable)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAAABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAAABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAAABAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'ProxyInvokableAdapter.ProxyInvokableAdapter(Type, IInvokable)', correct the spelling of 'invokable' in parameter name 'invokable' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ProxyInvokableAdapter.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ProxyInvokableAdapter.cs</a>
            (Line 13)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAAABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAABAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Invoke(System.Runtime.Remoting.Messaging.IMessage)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAABAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAABAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #Invoke(System.Runtime.Remoting.Messaging.IMessage)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAAABAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAAAABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAAAABAAAACAToggle">4</nobr></a></td><td class="CriticalError">CriticalError</td><td valign="top" style=" text-align: center; " class="CriticalError">33</td><td class="Resolution" valign="top">Add the following security attribute to 'ProxyInvokableAdapter.Invoke(IMessage)' in order to match a LinkDemand on base method 'RealProxy.Invoke(IMessage)':  [SecurityPermission(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.Infrastructure)].</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ProxyInvokableAdapter.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ProxyInvokableAdapter.cs</a>
            (Line 20)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAAAABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Override link demands should be identical to base</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Security</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA2123</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If a virtual method has a LinkDemand, in many cases, so should any override of it, and if an override has a LinkDemand, so should the overridden virtual method. Because it is possible to call any of the overrides of a virtual method explicitly, they should all have the same LinkDemand status or, if not, should be reviewed. This also applies to LinkDemand security checks for methods that part of an interface implementation, because the caller might use an interface-typed reference to access the method.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">SecurityRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182305(VS.90).aspx">http://msdn2.microsoft.com/ms182305(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAABAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAAABAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ProxyInvokableAdapter.Invoke(IMessage)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</td></tr><tr class="SourceCode"><td /><td class="PropertyName">Source:</td><td class="PropertyContent" colspan="2"><a href="d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ProxyInvokableAdapter.cs">d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\ProxyInvokableAdapter.cs</a>
            (Line 42)
        </td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAAABAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Specify IFormatProvider</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Globalization</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1305</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">GlobalizationRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182190(VS.90).aspx">http://msdn2.microsoft.com/ms182190(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr style="color: navy;">{} </nobr></a>NMock2.Syntax<nobr class="MessageNumber">
                        (18)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EIAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IArgumentSyntax<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EIAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAIAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#With(System.Object[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAIAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAIAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #With(System.Object[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAIAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAIAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAIAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IArgumentSyntax.With(params object[])' so that it no longer conflicts with the reserved language keyword 'With'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAIAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EHAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ICommentSyntax<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EHAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAHAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Comment(System.String)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAHAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAHAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Comment(System.String)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAHAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAHAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAHAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Change either member or parameter name 'comment' so that one differs from the other.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAHAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should not match member names</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1719</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Parameter names should be distinct from member names.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182252(VS.90).aspx">http://msdn2.microsoft.com/ms182252(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EGAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IEventArgumentSyntax<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EGAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAGAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#With(System.Object[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAGAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAGAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #With(System.Object[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAGAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAGAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAGAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IEventArgumentSyntax.With(params object[])' so that it no longer conflicts with the reserved language keyword 'With'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAGAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IEventSyntax<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAFAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#On(System.Object)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAFAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAFAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #On(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAFAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAAFAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAAFAAAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'IEventSyntax.On(object)', consider providing a more meaningful name than parameter name 'o'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAAFAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAFAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAFAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IEventSyntax.On(object)' so that it no longer conflicts with the reserved language keyword 'On'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAFAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IGetIndexerSyntax<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAEAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Item[System.Object[]]<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAEAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAEAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Item[System.Object[]]</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAEAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAEAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAEAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Use an integral value or string as the parameter to indexer 'IGetIndexerSyntax.this[params object[]]'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAEAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Use integral or string argument for indexers</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1043</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Indexers (indexed properties) should use either integer or string types for indexing values. These types are easy to use and commonly used for indexing data structures; using other types can significantly reduce the usability of the library. For example, public char this [int index] is the C# signature for the String type's indexer.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182180(VS.90).aspx">http://msdn2.microsoft.com/ms182180(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IMethodSyntax<nobr class="MessageNumber">
                        (7)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EFADAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Get<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EFADAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAFADAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Get</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAFADAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAFADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAFADAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IMethodSyntax.Get' so that it no longer conflicts with the reserved language keyword 'Get'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAFADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EEADAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Method(NMock2.Matcher,NMock2.Matcher)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EEADAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAEADAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Method(NMock2.Matcher,NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAEADAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAEADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAEADAAAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'IMethodSyntax.Method(Matcher, Matcher)', correct the spelling of 'Params' in parameter name 'typeParamsMatcher' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAEADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EDADAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Method(NMock2.Matcher,System.Type[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EDADAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EADADAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Method(NMock2.Matcher,System.Type[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EADADAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAADADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAADADAAAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'IMethodSyntax.Method(Matcher, params Type[])', correct the spelling of 'Params' in parameter name 'typeParams' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAADADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECADAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Method(System.Reflection.MethodInfo,System.Type[])<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECADAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EACADAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #Method(System.Reflection.MethodInfo,System.Type[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EACADAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBACADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBACADAAAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'IMethodSyntax.Method(MethodInfo, params Type[])', correct the spelling of 'Params' in parameter name 'typeParams' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBACADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAACADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAACADAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Change either member or parameter name 'method' so that one differs from the other.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAACADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Parameter names should not match member names</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1719</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Parameter names should be distinct from member names.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182252(VS.90).aspx">http://msdn2.microsoft.com/ms182252(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBADAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#Method(System.String,System.Type[])<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBADAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABADAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Method(System.String,System.Type[])</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABADAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABADAAAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'IMethodSyntax.Method(string, params Type[])', correct the spelling of 'Params' in parameter name 'typeParams' or remove it entirely if it represents any sort of Hungarian notation.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAADAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Set<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAADAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAADAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Set</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAADAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAADAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAADAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IMethodSyntax.Set' so that it no longer conflicts with the reserved language keyword 'Set'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAADAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0ECAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IReceiverSyntax<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0ECAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAACAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#On(System.Object)<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAACAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAACAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>2
            Messages
            for 
            #On(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAACAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EBAAACAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EBAAACAAAAAACAToggle">4</nobr></a></td><td class="CriticalWarning">CriticalWarning</td><td valign="top" style=" text-align: center; " class="CriticalWarning">75</td><td class="Resolution" valign="top">In method 'IReceiverSyntax.On(object)', consider providing a more meaningful name than parameter name 'o'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EBAAACAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should be spelled correctly</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1704</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/bb264492(VS.90).aspx">http://msdn2.microsoft.com/bb264492(VS.90).aspx</a></td></tr></table></div></td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAACAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAACAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IReceiverSyntax.On(object)' so that it no longer conflicts with the reserved language keyword 'On'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAACAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>ISetIndexerSyntax<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAABAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon"></nobr></a>#Item[System.Object[]]<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAABAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAABAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #Item[System.Object[]]</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAABAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAABAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAABAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Use an integral value or string as the parameter to indexer 'ISetIndexerSyntax.this[params object[]]'.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAABAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Use integral or string argument for indexers</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Design</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1043</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Indexers (indexed properties) should use either integer or string types for indexing values. These types are easy to use and commonly used for indexing data structures; using other types can significantly reduce the usability of the library. For example, public char this [int index] is the C# signature for the String type's indexer.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">DesignRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182180(VS.90).aspx">http://msdn2.microsoft.com/ms182180(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">&lt;</nobr></a>IValueSyntax<nobr class="MessageNumber">
                        (2)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAAAAACA"><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EBAAAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#To(NMock2.Matcher)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EBAAAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EABAAAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #To(NMock2.Matcher)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EABAAAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAABAAAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAABAAAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IValueSyntax.To(Matcher)' so that it no longer conflicts with the reserved language keyword 'To'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAABAAAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div><div class="NodeLine" onClick="&#xD;&#xA;                        javascript:ViewState('ID0EAAAAAAAAACA');&#xD;&#xA;                    "><a href="javascript:DoNothing()"><nobr class="NodeIcon">L</nobr></a>#To(System.Object)<nobr class="MessageNumber">
                        (1)
                    </nobr></div><div class="NodeDiv" style="display: none; position: relative; padding-left: 11;" id="ID0EAAAAAAAAACA"><div class="MessageBlock" onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAAAAAACA');&#xD;&#xA;        "><a href="javascript:DoNothing()"><nobr class="MessagesIcon">]</nobr></a>1
            Message
            for 
            #To(System.Object)</div><div class="MessageBlockDiv" style="display: none; position: relative; padding-left: 5;" id="ID0EAAAAAAAAAACA"><table width="100%"><tr><td class="ColumnHeader" /><td class="ColumnHeader">Message Level</td><td class="ColumnHeader">Certainty</td><td class="ColumnHeader" width="100%">Resolution</td></tr><tr onClick="&#xD;&#xA;            javascript:ViewState('ID0EAAAAAAAAAAACA');&#xD;&#xA;        " bgcolor="#EEEEEE"><td valign="top"><a href="javascript:DoNothing();"><nobr class="NodeIcon" id="ID0EAAAAAAAAAAACAToggle">4</nobr></a></td><td class="Error">Error</td><td valign="top" style=" text-align: center; " class="Error">95</td><td class="Resolution" valign="top">Rename virtual/interface member 'IValueSyntax.To(object)' so that it no longer conflicts with the reserved language keyword 'To'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</td></tr><tr><td /><td colspan="3"><div class="MessageDiv" style="display: none" id="ID0EAAAAAAAAAAACA"><table width="100%" class="RuleBlock"><tr><td class="PropertyName">Rule:</td><td class="PropertyContent">Identifiers should not match keywords</td></tr><tr><td class="PropertyName">Category:</td><td class="PropertyContent">Microsoft.Naming</td></tr><tr><td class="PropertyName">Check Id:</td><td class="PropertyContent">CA1716</td></tr><tr><td class="PropertyName">Rule Description:</td><td class="PropertyContent">Identifiers which conflict with reserved language keywords should be avoided. Using a reserved keyword as an identifier makes it harder for consumers in other languages to use your API.</td></tr><tr><td class="PropertyName">Rule File:</td><td class="PropertyContent">NamingRules.dll [9.0.0.0]</td></tr><tr><td class="PropertyName">Help:</td><td class="PropertyContent"><a href="http://msdn2.microsoft.com/ms182248(VS.90).aspx">http://msdn2.microsoft.com/ms182248(VS.90).aspx</a></td></tr></table></div></td></tr></table></div></div></div></div></div></div></body></html>