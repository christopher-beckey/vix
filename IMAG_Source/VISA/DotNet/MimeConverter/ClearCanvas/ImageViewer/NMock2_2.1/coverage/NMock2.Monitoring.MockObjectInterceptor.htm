<!DOCTYPE html PUBLIC "-// W3C// DTD XHTML 1.0 Strict// EN" "http:// www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html><head><title>Coverage Report</title><style type="text/css">html {font-family: sans-serif; margin: 20px; font-size: 0.9em; background-color: #f5f5f5;} h1 {font-size: 1.2em; font-weight: bold; margin: 20px 0px 15px 0px; padding: 0px;} h2 {font-size: 1.0em; font-weight: bold; margin: 10px 0px 15px 0px;padding: 0px;} th {text-align: left;} a {color: #cc0000; text-decoration: none;} a:hover {color: #000000; text-decoration: none;} .container {margin: auto; width: 960px; border: solid 1px #a7bac5; padding: 0px 20px 20px 20px; background-color: #ffffff;} .overview { border: solid 1px #a7bac5; border-collapse: collapse;} .overview th { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px; background-color: #d2dbe1;} .overview td { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px;} .coverage { border: solid 1px #a7bac5; border-collapse: collapse; font-size: 5px;} .coverage td { padding: 0px; } .right {text-align: right; padding-right: 8px;} .light {color: #888888;} .green {background-color: #00ff21;} .red {background-color: #ff0000;} .gray {background-color: #dcdcdc;} .footer {font-size: 0.7em; text-align: center; margin-top: 35px;} </style></head><body><div class="container"><h1>Summary</h1><table class="overview"><tr><th>Assembly:</th><td>NMock2</td></tr><tr><th>Class:</th><td>NMock2.Monitoring.MockObjectInterceptor</td></tr><tr><th valign="top">File(s):</th><td>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectInterceptor.cs<br /></td></tr><tr><th>Coverage:</th><td>100 %</td></tr><tr><th>Covered lines:</th><td>33</td></tr><tr><th>Coverable lines:</th><td>33</td></tr><tr><th>Total lines:</th><td>149</td></tr></table><h1>File(s)</h1><h2>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Monitoring\MockObjectInterceptor.cs</h2><table><tr><th></th><th class="right">&nbsp;#</th><th class="right">Line</th><th>Content</th></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>1</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>2</code></td><td class="light"><code>//&nbsp;&lt;copyright&nbsp;file="MockObjectInterceptor.cs"&nbsp;company="NMock2"&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>3</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>4</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;http://www.sourceforge.net/projects/NMock2</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>5</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>6</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;"License");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>7</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>8</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>9</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>10</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>11</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>12</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>13</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;"AS&nbsp;IS"&nbsp;BASIS,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>14</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>15</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>16</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>17</code></td><td class="light"><code>//&nbsp;&lt;/copyright&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>18</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>19</code></td><td class="light"><code>namespace&nbsp;NMock2.Monitoring</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>20</code></td><td class="light"><code>{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>22</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Collections.Generic;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Reflection;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>24</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Text;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>25</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;Castle.Core.Interceptor;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;NMock2.Internal;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>27</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>28</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;internal&nbsp;class&nbsp;MockObjectInterceptor&nbsp;:&nbsp;MockObject,&nbsp;IInterceptor</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>30</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;readonly&nbsp;Dictionary&lt;MethodInfo,&nbsp;object&gt;&nbsp;mockObjectMethods&nbsp;=&nbsp;new&nbsp;Dictionary&lt;MethodInfo,&nbsp;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>31</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>32</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;static&nbsp;members&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="MockObjectInterceptor"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>34</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>35</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;MockObjectInterceptor()</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>36</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>37</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;We&nbsp;want&nbsp;to&nbsp;be&nbsp;able&nbsp;to&nbsp;quickly&nbsp;recognize&nbsp;any&nbsp;later&nbsp;invocations</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>38</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;on&nbsp;methods&nbsp;that&nbsp;belong&nbsp;to&nbsp;IMockObject&nbsp;or&nbsp;IInvokable,&nbsp;so&nbsp;we&nbsp;cache</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>39</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;their&nbsp;definitions&nbsp;here.</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">32</td><td class="right"><code>40</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(MethodInfo&nbsp;methodInfo&nbsp;in&nbsp;typeof(IMockObject).GetMethods())</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>41</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">14</td><td class="right"><code>42</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mockObjectMethods.Add(methodInfo,&nbsp;null);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>43</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>44</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">8</td><td class="right"><code>45</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(MethodInfo&nbsp;methodInfo&nbsp;in&nbsp;typeof(IInvokable).GetMethods())</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>46</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>47</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mockObjectMethods.Add(methodInfo,&nbsp;null);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>48</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>49</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>50</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>51</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>52</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="MockObjectInterceptor"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>53</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>54</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockery"&gt;The&nbsp;mockery.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>55</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockedType"&gt;Type&nbsp;of&nbsp;the&nbsp;mocked.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>56</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="name"&gt;The&nbsp;name.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>57</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockStyle"&gt;The&nbsp;mock&nbsp;style.&lt;/param&gt;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>58</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;MockObjectInterceptor(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>59</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mockery&nbsp;mockery,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>60</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CompositeType&nbsp;mockedType,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>61</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>62</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;MockStyle&nbsp;mockStyle)&nbsp;:&nbsp;base(mockery,&nbsp;mockedType,&nbsp;name,&nbsp;mockStyle)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>63</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>64</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>65</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>66</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#region&nbsp;IInterceptor&nbsp;Members</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>67</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>68</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Intercept(IInvocation&nbsp;interceptedInvocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>69</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>70</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Check&nbsp;for&nbsp;calls&nbsp;to&nbsp;basic&nbsp;NMock2&nbsp;infrastructure</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1171</td><td class="right"><code>71</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(mockObjectMethods.ContainsKey(interceptedInvocation.Method))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>72</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>73</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>74</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">790</td><td class="right"><code>75</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interceptedInvocation.ReturnValue&nbsp;=&nbsp;interceptedInvocation.Method.Invoke(this,&nbsp;interceptedI</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">9</td><td class="right"><code>77</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(TargetInvocationException&nbsp;tie)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>78</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>79</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;replace&nbsp;stack&nbsp;trace&nbsp;with&nbsp;original&nbsp;stack&nbsp;trace</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">9</td><td class="right"><code>80</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FieldInfo&nbsp;remoteStackTraceString&nbsp;=&nbsp;typeof(Exception).GetField("_remoteStackTraceString",&nbsp;B</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">9</td><td class="right"><code>81</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remoteStackTraceString.SetValue(tie.InnerException,&nbsp;tie.InnerException.StackTrace&nbsp;+&nbsp;Enviro</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">9</td><td class="right"><code>82</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;tie.InnerException;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>83</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>84</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">781</td><td class="right"><code>85</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>86</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>87</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>88</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Ok,&nbsp;this&nbsp;call&nbsp;is&nbsp;targeting&nbsp;a&nbsp;member&nbsp;of&nbsp;the&nbsp;mocked&nbsp;class</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">381</td><td class="right"><code>89</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;invocationTarget&nbsp;=&nbsp;MockedTypes.PrimaryType.IsInterface&nbsp;?&nbsp;interceptedInvocation.Proxy&nbsp;:&nbsp;inte</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">381</td><td class="right"><code>90</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Invocation&nbsp;invocationForMock&nbsp;=&nbsp;new&nbsp;Invocation(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>91</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invocationTarget,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>92</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interceptedInvocation.Method,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>93</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interceptedInvocation.Arguments);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>94</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">381</td><td class="right"><code>95</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.ShouldCallInvokeImplementation(invocationForMock))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>96</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>97</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interceptedInvocation.Proceed();</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>98</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>99</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>100</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">378</td><td class="right"><code>101</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interceptedInvocation.ReturnValue&nbsp;=&nbsp;this.ProcessCallAgainstExpectations(invocationForMock);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">336</td><td class="right"><code>102</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>103</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>104</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#endregion</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>105</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>106</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;bool&nbsp;ShouldCallInvokeImplementation(Invocation&nbsp;invocationForMock)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>107</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>108</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Only&nbsp;transparent&nbsp;mocks&nbsp;of&nbsp;classes&nbsp;can&nbsp;have&nbsp;their&nbsp;implemenation&nbsp;invoked</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">381</td><td class="right"><code>109</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.MockStyle&nbsp;==&nbsp;MockStyle.Transparent</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>110</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&&&nbsp;!MockedTypes.PrimaryType.IsInterface)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>112</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;The&nbsp;implementation&nbsp;should&nbsp;only&nbsp;be&nbsp;invoked&nbsp;if&nbsp;no&nbsp;expectations</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>113</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;have&nbsp;been&nbsp;set&nbsp;for&nbsp;this&nbsp;method</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>114</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!Mockery.HasExpectationFor(invocationForMock))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>115</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>116</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;As&nbsp;classes&nbsp;and&nbsp;interfaces&nbsp;can&nbsp;be&nbsp;combined&nbsp;into&nbsp;a&nbsp;single&nbsp;mock,&nbsp;we&nbsp;have</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>117</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;to&nbsp;be&nbsp;sure&nbsp;that&nbsp;the&nbsp;target&nbsp;method&nbsp;actually&nbsp;belongs&nbsp;to&nbsp;a&nbsp;class</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>118</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!invocationForMock.Method.DeclaringType.IsInterface)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>119</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>120</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>121</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>122</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>123</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>124</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">378</td><td class="right"><code>125</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>126</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>127</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>128</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;object&nbsp;ProcessCallAgainstExpectations(Invocation&nbsp;invocationForMock)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>129</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">378</td><td class="right"><code>130</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Invoke(invocationForMock);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>131</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">339</td><td class="right"><code>132</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(invocationForMock.IsThrowing)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>133</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>134</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;invocationForMock.Exception;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>135</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>136</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">338</td><td class="right"><code>137</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(invocationForMock.Result&nbsp;==&nbsp;Missing.Value&nbsp;&&&nbsp;invocationForMock.Method.ReturnType&nbsp;!=&nbsp;typeof(voi</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>138</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>139</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;InvalidOperationException(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>140</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string.Format(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>141</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"You&nbsp;have&nbsp;to&nbsp;set&nbsp;the&nbsp;return&nbsp;value&nbsp;for&nbsp;method&nbsp;'{0}'&nbsp;on&nbsp;'{1}'&nbsp;mock.",</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>142</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invocationForMock.Method.Name,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>143</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invocationForMock.Method.DeclaringType.Name));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>144</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>145</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">336</td><td class="right"><code>146</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;invocationForMock.Result;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>147</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>148</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>149</code></td><td class="light"><code>}</code></td></tr></table><div class="footer">Generated by: ReportGenerator 0.5.0.0<br />20.12.2009 - 15:19:00<br /><a href="http:// www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>