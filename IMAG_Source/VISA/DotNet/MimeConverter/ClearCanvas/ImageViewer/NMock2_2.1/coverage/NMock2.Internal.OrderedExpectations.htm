<!DOCTYPE html PUBLIC "-// W3C// DTD XHTML 1.0 Strict// EN" "http:// www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html><head><title>Coverage Report</title><style type="text/css">html {font-family: sans-serif; margin: 20px; font-size: 0.9em; background-color: #f5f5f5;} h1 {font-size: 1.2em; font-weight: bold; margin: 20px 0px 15px 0px; padding: 0px;} h2 {font-size: 1.0em; font-weight: bold; margin: 10px 0px 15px 0px;padding: 0px;} th {text-align: left;} a {color: #cc0000; text-decoration: none;} a:hover {color: #000000; text-decoration: none;} .container {margin: auto; width: 960px; border: solid 1px #a7bac5; padding: 0px 20px 20px 20px; background-color: #ffffff;} .overview { border: solid 1px #a7bac5; border-collapse: collapse;} .overview th { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px; background-color: #d2dbe1;} .overview td { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px;} .coverage { border: solid 1px #a7bac5; border-collapse: collapse; font-size: 5px;} .coverage td { padding: 0px; } .right {text-align: right; padding-right: 8px;} .light {color: #888888;} .green {background-color: #00ff21;} .red {background-color: #ff0000;} .gray {background-color: #dcdcdc;} .footer {font-size: 0.7em; text-align: center; margin-top: 35px;} </style></head><body><div class="container"><h1>Summary</h1><table class="overview"><tr><th>Assembly:</th><td>NMock2</td></tr><tr><th>Class:</th><td>NMock2.Internal.OrderedExpectations</td></tr><tr><th valign="top">File(s):</th><td>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\OrderedExpectations.cs<br /></td></tr><tr><th>Coverage:</th><td>88.4 %</td></tr><tr><th>Covered lines:</th><td>38</td></tr><tr><th>Coverable lines:</th><td>43</td></tr><tr><th>Total lines:</th><td>201</td></tr></table><h1>File(s)</h1><h2>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\OrderedExpectations.cs</h2><table><tr><th></th><th class="right">&nbsp;#</th><th class="right">Line</th><th>Content</th></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>1</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>2</code></td><td class="light"><code>//&nbsp;&lt;copyright&nbsp;file="OrderedExpectations.cs"&nbsp;company="NMock2"&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>3</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>4</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;http://www.sourceforge.net/projects/NMock2</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>5</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>6</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;"License");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>7</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>8</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>9</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>10</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>11</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>12</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>13</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;"AS&nbsp;IS"&nbsp;BASIS,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>14</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>15</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>16</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>17</code></td><td class="light"><code>//&nbsp;&lt;/copyright&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>18</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>19</code></td><td class="light"><code>namespace&nbsp;NMock2.Internal</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>20</code></td><td class="light"><code>{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Collections.Generic;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>22</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.IO;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;NMock2.Monitoring;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>24</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>25</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;OrderedExpectations&nbsp;:&nbsp;IExpectationOrdering</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>27</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;List&lt;IExpectation&gt;&nbsp;expectations&nbsp;=&nbsp;new&nbsp;List&lt;IExpectation&gt;();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>28</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;current&nbsp;=&nbsp;0;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;depth;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>30</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>32</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="OrderedExpectations"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>34</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="depth"&gt;The&nbsp;depth.&lt;/param&gt;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>35</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;OrderedExpectations(int&nbsp;depth)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>36</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>37</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.depth&nbsp;=&nbsp;depth;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>38</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>39</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>40</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>41</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;a&nbsp;value&nbsp;indicating&nbsp;whether&nbsp;this&nbsp;instance&nbsp;is&nbsp;active.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>42</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>43</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;&lt;c&gt;true&lt;/c&gt;&nbsp;if&nbsp;this&nbsp;instance&nbsp;is&nbsp;active;&nbsp;otherwise,&nbsp;&lt;c&gt;false&lt;/c&gt;.&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>44</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;IsActive</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>45</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>46</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.expectations.Count&nbsp;&gt;&nbsp;0&nbsp;&&&nbsp;this.CurrentExpectation.IsActive;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>47</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>48</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>49</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>50</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;a&nbsp;value&nbsp;indicating&nbsp;whether&nbsp;this&nbsp;instance&nbsp;has&nbsp;been&nbsp;met.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>51</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>52</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>53</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;c&gt;true&lt;/c&gt;&nbsp;if&nbsp;this&nbsp;instance&nbsp;has&nbsp;been&nbsp;met;&nbsp;otherwise,&nbsp;&lt;c&gt;false&lt;/c&gt;.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>54</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>55</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;HasBeenMet</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>56</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>57</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>58</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>59</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Count&nbsp;==&nbsp;0&nbsp;fixes&nbsp;issue&nbsp;1912662&nbsp;of&nbsp;NMock</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>60</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;(http://sourceforge.net/tracker/index.php?func=detail&aid=1912662&group_id=66591&atid=51501</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">10</td><td class="right"><code>61</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.expectations.Count&nbsp;==&nbsp;0</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>62</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;||&nbsp;(this.CurrentExpectation.HasBeenMet&nbsp;&&&nbsp;this.NextExpectationHasBeenMet());</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>63</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>64</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>65</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>66</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>67</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;the&nbsp;current&nbsp;expectation.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>68</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>69</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;The&nbsp;current&nbsp;expectation.&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>70</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IExpectation&nbsp;CurrentExpectation</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>71</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">173</td><td class="right"><code>72</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.expectations[this.current];&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>73</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>74</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>75</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;a&nbsp;value&nbsp;indicating&nbsp;whether&nbsp;this&nbsp;instance&nbsp;has&nbsp;next&nbsp;expectation.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>77</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>78</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>79</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;c&gt;true&lt;/c&gt;&nbsp;if&nbsp;this&nbsp;instance&nbsp;has&nbsp;next&nbsp;expectation;&nbsp;otherwise,&nbsp;&lt;c&gt;false&lt;/c&gt;.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>80</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>81</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;bool&nbsp;HasNextExpectation</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>82</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">29</td><td class="right"><code>83</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.current&nbsp;&lt;&nbsp;this.expectations.Count&nbsp;-&nbsp;1;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>84</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>85</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>86</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>87</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;the&nbsp;next&nbsp;expectation.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>88</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>89</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;The&nbsp;next&nbsp;expectation.&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>90</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IExpectation&nbsp;NextExpectation</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>91</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">22</td><td class="right"><code>92</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.expectations[this.current&nbsp;+&nbsp;1];&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>93</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>94</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>95</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>96</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Checks&nbsp;whether&nbsp;stored&nbsp;expectations&nbsp;matches&nbsp;the&nbsp;specified&nbsp;invocation.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>97</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>98</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="invocation"&gt;The&nbsp;invocation&nbsp;to&nbsp;check.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>99</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;Returns&nbsp;whether&nbsp;one&nbsp;of&nbsp;the&nbsp;stored&nbsp;expectations&nbsp;has&nbsp;met&nbsp;the&nbsp;specified&nbsp;invocation.&lt;/returns</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>100</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;Matches(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>101</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">69</td><td class="right"><code>102</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.expectations.Count&nbsp;!=&nbsp;0&nbsp;&&</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>103</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.CurrentExpectation.Matches(invocation)&nbsp;||</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>104</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.CurrentExpectation.HasBeenMet&nbsp;&&&nbsp;this.NextExpectationMatches(invocation)));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>105</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>106</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>107</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;MatchesIgnoringIsActive(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>108</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>109</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.expectations.Count&nbsp;!=&nbsp;0&nbsp;&&</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>110</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.CurrentExpectation.MatchesIgnoringIsActive(invocation)&nbsp;||</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(this.CurrentExpectation.HasBeenMet&nbsp;&&&nbsp;this.NextExpectationMatchesIgnoringIsActive(invo</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>112</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>113</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>114</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;AddExpectation(IExpectation&nbsp;expectation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>115</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>116</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectations.Add(expectation);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>117</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>118</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>119</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;RemoveExpectation(IExpectation&nbsp;expectation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>120</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>121</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectations.Remove(expectation);</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>122</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>123</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>124</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Perform(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>125</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>126</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;If&nbsp;the&nbsp;current&nbsp;expectation&nbsp;doesn't&nbsp;match,&nbsp;it&nbsp;must&nbsp;have&nbsp;been&nbsp;met,&nbsp;by&nbsp;the&nbsp;contract</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>127</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;the&nbsp;IExpectation&nbsp;interface&nbsp;and&nbsp;due&nbsp;to&nbsp;the&nbsp;implementation&nbsp;of&nbsp;this.Matches</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">33</td><td class="right"><code>128</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!this.CurrentExpectation.Matches(invocation))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>129</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">10</td><td class="right"><code>130</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.current++;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>131</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>132</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">33</td><td class="right"><code>133</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.CurrentExpectation.Perform(invocation);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">33</td><td class="right"><code>134</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>135</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>136</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;DescribeActiveExpectationsTo(TextWriter&nbsp;writer)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>137</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>138</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine("Ordered:");</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">22</td><td class="right"><code>139</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;this.expectations.Count;&nbsp;i++)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>140</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">8</td><td class="right"><code>141</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IExpectation&nbsp;expectation&nbsp;=&nbsp;(IExpectation)this.expectations[i];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>142</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">8</td><td class="right"><code>143</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(expectation.IsActive)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>144</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>145</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Indent(writer,&nbsp;this.depth&nbsp;+&nbsp;1);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>146</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectation.DescribeActiveExpectationsTo(writer);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>147</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>148</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>149</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">3</td><td class="right"><code>150</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>151</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>152</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;DescribeUnmetExpectationsTo(TextWriter&nbsp;writer)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>153</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>154</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine("Ordered:");</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">6</td><td class="right"><code>155</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;this.expectations.Count;&nbsp;i++)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>156</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>157</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IExpectation&nbsp;expectation&nbsp;=&nbsp;(IExpectation)this.expectations[i];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>158</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>159</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!expectation.HasBeenMet)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>160</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>161</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.Indent(writer,&nbsp;this.depth&nbsp;+&nbsp;1);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>162</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;expectation.DescribeUnmetExpectationsTo(writer);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>163</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.WriteLine();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>164</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>165</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>166</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>167</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>168</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>169</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Adds&nbsp;all&nbsp;expectations&nbsp;to&nbsp;&lt;paramref&nbsp;name="result"/&gt;&nbsp;that&nbsp;are&nbsp;associated&nbsp;to&nbsp;&lt;paramref&nbsp;name="mock"/&gt;.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>170</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>171</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mock"&gt;The&nbsp;mock&nbsp;for&nbsp;which&nbsp;expectations&nbsp;are&nbsp;queried.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>172</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="result"&gt;The&nbsp;result&nbsp;to&nbsp;add&nbsp;matching&nbsp;expectations&nbsp;to.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>173</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;QueryExpectationsBelongingTo(IMockObject&nbsp;mock,&nbsp;IList&lt;IExpectation&gt;&nbsp;result)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>174</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>175</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectations.ForEach(expectation&nbsp;=&gt;&nbsp;expectation.QueryExpectationsBelongingTo(mock,&nbsp;result));</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>176</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>177</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>178</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;bool&nbsp;NextExpectationHasBeenMet()</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>179</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">9</td><td class="right"><code>180</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(!this.HasNextExpectation)&nbsp;||&nbsp;this.NextExpectation.HasBeenMet;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>181</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>182</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>183</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;bool&nbsp;NextExpectationMatches(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>184</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">20</td><td class="right"><code>185</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.HasNextExpectation&nbsp;&&&nbsp;this.NextExpectation.Matches(invocation);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>186</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>187</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>188</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;bool&nbsp;NextExpectationMatchesIgnoringIsActive(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>189</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>190</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.HasNextExpectation&nbsp;&&&nbsp;this.NextExpectation.MatchesIgnoringIsActive(invocation);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>191</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>192</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>193</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;Indent(TextWriter&nbsp;writer,&nbsp;int&nbsp;n)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>194</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">48</td><td class="right"><code>195</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;i++)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>196</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">16</td><td class="right"><code>197</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;writer.Write("&nbsp;&nbsp;");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>198</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">8</td><td class="right"><code>199</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>200</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>201</code></td><td class="light"><code>}</code></td></tr></table><div class="footer">Generated by: ReportGenerator 0.5.0.0<br />20.12.2009 - 15:18:59<br /><a href="http:// www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>