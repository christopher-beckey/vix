<!DOCTYPE html PUBLIC "-// W3C// DTD XHTML 1.0 Strict// EN" "http:// www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html><head><title>Coverage Report</title><style type="text/css">html {font-family: sans-serif; margin: 20px; font-size: 0.9em; background-color: #f5f5f5;} h1 {font-size: 1.2em; font-weight: bold; margin: 20px 0px 15px 0px; padding: 0px;} h2 {font-size: 1.0em; font-weight: bold; margin: 10px 0px 15px 0px;padding: 0px;} th {text-align: left;} a {color: #cc0000; text-decoration: none;} a:hover {color: #000000; text-decoration: none;} .container {margin: auto; width: 960px; border: solid 1px #a7bac5; padding: 0px 20px 20px 20px; background-color: #ffffff;} .overview { border: solid 1px #a7bac5; border-collapse: collapse;} .overview th { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px; background-color: #d2dbe1;} .overview td { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px;} .coverage { border: solid 1px #a7bac5; border-collapse: collapse; font-size: 5px;} .coverage td { padding: 0px; } .right {text-align: right; padding-right: 8px;} .light {color: #888888;} .green {background-color: #00ff21;} .red {background-color: #ff0000;} .gray {background-color: #dcdcdc;} .footer {font-size: 0.7em; text-align: center; margin-top: 35px;} </style></head><body><div class="container"><h1>Summary</h1><table class="overview"><tr><th>Assembly:</th><td>NMock2</td></tr><tr><th>Class:</th><td>NMock2.Internal.MockObject</td></tr><tr><th valign="top">File(s):</th><td>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\MockObject.cs<br /></td></tr><tr><th>Coverage:</th><td>95.5 %</td></tr><tr><th>Covered lines:</th><td>85</td></tr><tr><th>Coverable lines:</th><td>89</td></tr><tr><th>Total lines:</th><td>342</td></tr></table><h1>File(s)</h1><h2>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\MockObject.cs</h2><table><tr><th></th><th class="right">&nbsp;#</th><th class="right">Line</th><th>Content</th></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>1</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>2</code></td><td class="light"><code>//&nbsp;&lt;copyright&nbsp;file="MockObject.cs"&nbsp;company="NMock2"&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>3</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>4</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;http://www.sourceforge.net/projects/NMock2</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>5</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>6</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;"License");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>7</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>8</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>9</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>10</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>11</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>12</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>13</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;"AS&nbsp;IS"&nbsp;BASIS,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>14</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>15</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>16</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>17</code></td><td class="light"><code>//&nbsp;&lt;/copyright&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>18</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>19</code></td><td class="light"><code>namespace&nbsp;NMock2.Internal</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>20</code></td><td class="light"><code>{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>22</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Collections;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Collections.Generic;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>24</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.IO;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>25</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Reflection;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>26</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;Monitoring;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>27</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;NMock2.Matchers;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>28</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;MockObject&nbsp;:&nbsp;IInvokable,&nbsp;IMockObject</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>30</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>32</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Stores&nbsp;the&nbsp;backlink&nbsp;to&nbsp;the&nbsp;mockery&nbsp;which&nbsp;created&nbsp;this&nbsp;mock&nbsp;object.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>34</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;Mockery&nbsp;mockery;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>35</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>36</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>37</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Stores&nbsp;the&nbsp;mocked&nbsp;type(s).</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>38</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>39</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;CompositeType&nbsp;mockedTypes;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>40</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>41</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>42</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Stores&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;mock&nbsp;object.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>43</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>44</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;string&nbsp;name;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>45</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>46</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>47</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Stores&nbsp;the&nbsp;event&nbsp;handlers&nbsp;that&nbsp;could&nbsp;be&nbsp;added&nbsp;to&nbsp;the&nbsp;mock&nbsp;object.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>48</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>49</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;IDictionary&nbsp;eventHandlers;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>50</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>51</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>52</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Results&nbsp;that&nbsp;have&nbsp;been&nbsp;explicitly&nbsp;assigned&nbsp;via&nbsp;a&nbsp;call&nbsp;to&nbsp;a&nbsp;property&nbsp;setter.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>53</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;These&nbsp;will&nbsp;be&nbsp;returned&nbsp;for&nbsp;all&nbsp;subsequent&nbsp;calls&nbsp;to&nbsp;the&nbsp;matching&nbsp;property&nbsp;getter.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>54</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>55</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;Dictionary&lt;string,&nbsp;object&gt;&nbsp;assignedPropertyResults&nbsp;=&nbsp;new&nbsp;Dictionary&lt;string,&nbsp;object&gt;()</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>56</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>57</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>58</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Results&nbsp;that&nbsp;have&nbsp;been&nbsp;generated&nbsp;for&nbsp;methods&nbsp;or&nbsp;property&nbsp;getters.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>59</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;These&nbsp;will&nbsp;be&nbsp;returned&nbsp;for&nbsp;all&nbsp;subsequent&nbsp;calls&nbsp;to&nbsp;the&nbsp;same&nbsp;member.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>60</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>61</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;Dictionary&lt;MethodInfo,&nbsp;object&gt;&nbsp;rememberedMethodResults&nbsp;=&nbsp;new&nbsp;Dictionary&lt;MethodInfo,&nbsp;o</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>62</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>63</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>64</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="MockObject"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>65</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;This&nbsp;constructor&nbsp;is&nbsp;needed&nbsp;by&nbsp;the&nbsp;&lt;see&nbsp;cref="InterfaceOnlyMockObjectFactory"/&gt;&nbsp;(the&nbsp;IL&nbsp;generation&nbsp;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>66</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>67</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockery"&gt;The&nbsp;mockery.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>68</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockedType"&gt;Type&nbsp;of&nbsp;the&nbsp;mocked.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>69</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="name"&gt;The&nbsp;name.&lt;/param&gt;</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>70</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;MockObject(Mockery&nbsp;mockery,&nbsp;Type&nbsp;mockedType,&nbsp;string&nbsp;name)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>71</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;this(mockery,&nbsp;new&nbsp;CompositeType(new&nbsp;Type[]&nbsp;{&nbsp;mockedType&nbsp;}),&nbsp;name,&nbsp;MockStyle.Default)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>72</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>73</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>74</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>75</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="MockObject"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>77</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>78</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockery"&gt;The&nbsp;mockery.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>79</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockedType"&gt;Type&nbsp;of&nbsp;the&nbsp;mocked.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>80</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="name"&gt;The&nbsp;name.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>81</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="mockStyle"&gt;The&nbsp;mock&nbsp;style.&lt;/param&gt;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>82</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;MockObject(Mockery&nbsp;mockery,&nbsp;CompositeType&nbsp;mockedType,&nbsp;string&nbsp;name,&nbsp;MockStyle&nbsp;mockStyle)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>83</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>84</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockery&nbsp;=&nbsp;mockery;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>85</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.MockStyle&nbsp;=&nbsp;mockStyle;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>86</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>87</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.eventHandlers&nbsp;=&nbsp;new&nbsp;Hashtable();</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>88</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockedTypes&nbsp;=&nbsp;mockedType;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">327</td><td class="right"><code>89</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>90</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>91</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;string&nbsp;MockName</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>92</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">125</td><td class="right"><code>93</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.name;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>94</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>95</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>96</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;CompositeType&nbsp;MockedTypes</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>97</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">388</td><td class="right"><code>98</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.mockedTypes;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>99</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>100</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>101</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;Mockery&nbsp;Mockery</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>102</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>103</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get&nbsp;{&nbsp;return&nbsp;this.mockery;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>104</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>105</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>106</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>107</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;the&nbsp;mock&nbsp;style&nbsp;of&nbsp;this&nbsp;mock.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>108</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>109</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;MockStyle&nbsp;MockStyle&nbsp;{&nbsp;get;&nbsp;private&nbsp;set;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>110</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;string&nbsp;ToString()</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>112</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>113</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.name;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>114</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>115</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>116</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Invoke(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>117</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">378</td><td class="right"><code>118</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch&nbsp;(this.MockStyle)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>119</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>120</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;MockStyle.Default:</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>121</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;MockStyle.Transparent:</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">317</td><td class="right"><code>122</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockery.Dispatch(invocation);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">278</td><td class="right"><code>123</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>124</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>125</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;MockStyle.Stub:</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>126</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">68</td><td class="right"><code>127</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.mockery.HasExpectationForIgnoringIsActive(invocation))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>128</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>129</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto&nbsp;case&nbsp;MockStyle.Default;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>130</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>131</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>132</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;remember&nbsp;values&nbsp;set&nbsp;in&nbsp;a&nbsp;property&nbsp;setter</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">61</td><td class="right"><code>133</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(invocation.Method.Name.StartsWith("set_"))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>134</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>135</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;getter&nbsp;=&nbsp;"get_"&nbsp;+&nbsp;invocation.Method.Name.Substring(4);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>136</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.assignedPropertyResults.ContainsKey(getter))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>137</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>138</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.assignedPropertyResults[getter]&nbsp;=&nbsp;invocation.Parameters[0];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>139</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>140</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>141</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>142</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.assignedPropertyResults.Add(getter,&nbsp;invocation.Parameters[0]);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>143</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>144</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>145</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>146</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>147</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">57</td><td class="right"><code>148</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(invocation.Method.Name.StartsWith("add_"))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>149</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>150</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.AddEventHandler(invocation.Method.Name.Substring(4),&nbsp;(Delegate)invocation.Par</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>151</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>152</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>153</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">55</td><td class="right"><code>154</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(invocation.Method.Name.StartsWith("remove_"))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>155</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>156</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.RemoveEventHandler(invocation.Method.Name.Substring(7),&nbsp;(Delegate)invocation.</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">1</td><td class="right"><code>157</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>158</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>159</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>160</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;check&nbsp;whether&nbsp;we&nbsp;already&nbsp;have&nbsp;a&nbsp;value&nbsp;for&nbsp;this&nbsp;call</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>161</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;result;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>162</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">54</td><td class="right"><code>163</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(this.assignedPropertyResults.ContainsKey(invocation.Method.Name))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>164</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>165</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;this.assignedPropertyResults[invocation.Method.Name];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>166</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">50</td><td class="right"><code>167</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(this.rememberedMethodResults.ContainsKey(invocation.Method))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>168</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>169</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;this.rememberedMethodResults[invocation.Method];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>170</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>171</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>172</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">43</td><td class="right"><code>173</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;this.GetStubResult(invocation);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">43</td><td class="right"><code>174</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.rememberedMethodResults.Add(invocation.Method,&nbsp;result);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>175</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>176</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">54</td><td class="right"><code>177</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result&nbsp;!=&nbsp;Missing.Value)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>178</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">52</td><td class="right"><code>179</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invocation.Result&nbsp;=&nbsp;result;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>180</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>181</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>182</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>183</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>184</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">54</td><td class="right"><code>185</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>186</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>187</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;bool&nbsp;HasMethodMatching(Matcher&nbsp;methodMatcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>188</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">15</td><td class="right"><code>189</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.mockedTypes.GetMatchingMethods(methodMatcher,&nbsp;true).Count&nbsp;&gt;&nbsp;0;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>190</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>191</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>192</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IList&lt;MethodInfo&gt;&nbsp;GetMethodsMatching(Matcher&nbsp;methodMatcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>193</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">286</td><td class="right"><code>194</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.mockedTypes.GetMatchingMethods(methodMatcher,&nbsp;false);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>195</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>196</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>197</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;AddExpectation(IExpectation&nbsp;expectation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>198</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">304</td><td class="right"><code>199</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockery.AddExpectation(expectation);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">304</td><td class="right"><code>200</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>201</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>202</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;AddEventHandler(string&nbsp;eventName,&nbsp;Delegate&nbsp;handler)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>203</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>204</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&nbsp;handlers&nbsp;=&nbsp;(ArrayList)this.eventHandlers[eventName];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>205</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>206</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(handlers&nbsp;==&nbsp;null)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>207</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>208</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers&nbsp;=&nbsp;new&nbsp;ArrayList();</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>209</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.eventHandlers.Add(eventName,&nbsp;handlers);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>210</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>211</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>212</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!&nbsp;handlers.Contains(handler))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>213</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>214</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers.Add(handler);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>215</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">26</td><td class="right"><code>216</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>217</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>218</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;RaiseEvent(string&nbsp;eventName,&nbsp;params&nbsp;object[]&nbsp;args)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>219</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">37</td><td class="right"><code>220</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IEnumerable&nbsp;handlers&nbsp;=&nbsp;(IEnumerable)this.eventHandlers[eventName];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>221</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">37</td><td class="right"><code>222</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(handlers&nbsp;!=&nbsp;null)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>223</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>224</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;copy&nbsp;handlers&nbsp;before&nbsp;invocation&nbsp;to&nbsp;prevent&nbsp;colection&nbsp;modified&nbsp;exception&nbsp;if&nbsp;event&nbsp;handler&nbsp;is</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">22</td><td class="right"><code>225</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;Delegate&gt;&nbsp;delegates&nbsp;=&nbsp;new&nbsp;List&lt;Delegate&gt;();</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">88</td><td class="right"><code>226</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(Delegate&nbsp;handler&nbsp;in&nbsp;handlers)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>227</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">22</td><td class="right"><code>228</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delegates.Add(handler);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>229</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>230</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">83</td><td class="right"><code>231</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(Delegate&nbsp;d&nbsp;in&nbsp;delegates)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>232</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>233</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>234</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">22</td><td class="right"><code>235</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d.DynamicInvoke(args);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>236</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">5</td><td class="right"><code>237</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch&nbsp;(TargetInvocationException&nbsp;tie)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>238</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>239</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;replace&nbsp;stack&nbsp;trace&nbsp;with&nbsp;original&nbsp;stack&nbsp;trace</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">5</td><td class="right"><code>240</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FieldInfo&nbsp;remoteStackTraceString&nbsp;=&nbsp;typeof(Exception).GetField("_remoteStackTraceString</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">5</td><td class="right"><code>241</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remoteStackTraceString.SetValue(tie.InnerException,&nbsp;tie.InnerException.StackTrace&nbsp;+&nbsp;En</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">5</td><td class="right"><code>242</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;tie.InnerException;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>243</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>244</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>245</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>246</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>247</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>248</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;check&nbsp;whether&nbsp;the&nbsp;mocked&nbsp;type&nbsp;has&nbsp;this&nbsp;event</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">15</td><td class="right"><code>249</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!this.HasMethodMatching(new&nbsp;MethodNameMatcher("add_"&nbsp;+&nbsp;eventName)))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>250</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>251</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;ArgumentException(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>252</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string.Format(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>253</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Event&nbsp;with&nbsp;name&nbsp;{0}&nbsp;does&nbsp;not&nbsp;exist&nbsp;on&nbsp;type(s)&nbsp;{1}.",</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>254</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eventName,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>255</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockedTypes.ToString()),</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>256</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"eventName");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>257</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>258</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">28</td><td class="right"><code>259</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>260</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>261</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;RemoveEventHandler(string&nbsp;eventName,&nbsp;Delegate&nbsp;handler)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>262</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">15</td><td class="right"><code>263</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&nbsp;handlers&nbsp;=&nbsp;(ArrayList)this.eventHandlers[eventName];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>264</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">15</td><td class="right"><code>265</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(handlers&nbsp;!=&nbsp;null)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>266</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">11</td><td class="right"><code>267</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;handlers.Remove(handler);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">11</td><td class="right"><code>268</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(handlers.Count&nbsp;==&nbsp;0)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>269</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">11</td><td class="right"><code>270</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.eventHandlers.Remove(eventName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>271</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>272</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">15</td><td class="right"><code>273</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>274</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>275</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>276</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;the&nbsp;default&nbsp;result&nbsp;for&nbsp;an&nbsp;invocation.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>277</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>278</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="invocation"&gt;The&nbsp;invocation.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>279</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;The&nbsp;default&nbsp;value&nbsp;to&nbsp;return&nbsp;as&nbsp;result&nbsp;of&nbsp;the&nbsp;invocation.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>280</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;see&nbsp;cref="Missing.Value"/&gt;&nbsp;if&nbsp;no&nbsp;default&nbsp;value&nbsp;was&nbsp;provided.&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>281</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;object&nbsp;GetStubResult(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>282</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">43</td><td class="right"><code>283</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type&nbsp;returnType&nbsp;=&nbsp;invocation.Method.ReturnType;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>284</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>285</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;void&nbsp;method</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">43</td><td class="right"><code>286</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(returnType&nbsp;==&nbsp;typeof(void))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>287</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>288</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Missing.Value;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>289</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>290</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>291</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;see&nbsp;if&nbsp;developer&nbsp;provides&nbsp;a&nbsp;return&nbsp;value</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">41</td><td class="right"><code>292</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;returnValue&nbsp;=&nbsp;this.mockery.ResolveType(invocation.Receiver,&nbsp;returnType);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>293</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">41</td><td class="right"><code>294</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(returnValue&nbsp;!=&nbsp;Missing.Value)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>295</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">2</td><td class="right"><code>296</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;returnValue;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>297</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>298</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">39</td><td class="right"><code>299</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(returnType.IsValueType)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>300</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>301</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;use&nbsp;default&nbsp;contructor&nbsp;for&nbsp;value&nbsp;types</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">6</td><td class="right"><code>302</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Activator.CreateInstance(returnType);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>303</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>304</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">33</td><td class="right"><code>305</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(returnType&nbsp;==&nbsp;typeof(string))</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>306</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>307</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;string&nbsp;empty&nbsp;for&nbsp;strings</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>308</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;string.Empty;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>309</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>310</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">29</td><td class="right"><code>311</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(returnType.IsClass&nbsp;&&&nbsp;returnType.GetInterface("IEnumerable")&nbsp;!=&nbsp;null)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>312</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>313</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;for&nbsp;enumerables&nbsp;(List,&nbsp;Dictionary)&nbsp;we&nbsp;create&nbsp;an&nbsp;empty&nbsp;object</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">4</td><td class="right"><code>314</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;Activator.CreateInstance(returnType);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>315</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>316</code></td><td class="light"></td></tr><tr><td class="green">&nbsp;</td><td class="right">25</td><td class="right"><code>317</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(returnType.IsSealed)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>318</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>319</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;null&nbsp;for&nbsp;sealed&nbsp;classes</code></td></tr><tr><td class="red">&nbsp;</td><td class="right">0</td><td class="right"><code>320</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>321</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>322</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>323</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;a&nbsp;mock&nbsp;for&nbsp;interfaces&nbsp;and&nbsp;all&nbsp;cases&nbsp;no&nbsp;covered&nbsp;above</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">25</td><td class="right"><code>324</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.mockery.NewNamedMock(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>325</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;returnType,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>326</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.GetMemberName(invocation),</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>327</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockery.GetDependencyMockStyle(invocation.Receiver,&nbsp;returnType)&nbsp;??&nbsp;this.MockStyle);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>328</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>329</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>330</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>331</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;member&nbsp;to&nbsp;be&nbsp;used&nbsp;as&nbsp;the&nbsp;name&nbsp;for&nbsp;a&nbsp;mock&nbsp;returned&nbsp;an&nbsp;a&nbsp;call&nbsp;to&nbsp;a&nbsp;stub.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>332</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>333</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="invocation"&gt;The&nbsp;invocation.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>334</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;Name&nbsp;of&nbsp;the&nbsp;mock&nbsp;created&nbsp;as&nbsp;a&nbsp;result&nbsp;value&nbsp;on&nbsp;a&nbsp;call&nbsp;to&nbsp;a&nbsp;stub.&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>335</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;string&nbsp;GetMemberName(Invocation&nbsp;invocation)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>336</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">25</td><td class="right"><code>337</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StringWriter&nbsp;writer&nbsp;=&nbsp;new&nbsp;StringWriter();</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">25</td><td class="right"><code>338</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;invocation.DescribeTo(writer);</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">25</td><td class="right"><code>339</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;writer.ToString();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>340</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>341</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>342</code></td><td class="light"><code>}</code></td></tr></table><div class="footer">Generated by: ReportGenerator 0.5.0.0<br />20.12.2009 - 15:18:59<br /><a href="http:// www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>