<!DOCTYPE html PUBLIC "-// W3C// DTD XHTML 1.0 Strict// EN" "http:// www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html><head><title>Coverage Report</title><style type="text/css">html {font-family: sans-serif; margin: 20px; font-size: 0.9em; background-color: #f5f5f5;} h1 {font-size: 1.2em; font-weight: bold; margin: 20px 0px 15px 0px; padding: 0px;} h2 {font-size: 1.0em; font-weight: bold; margin: 10px 0px 15px 0px;padding: 0px;} th {text-align: left;} a {color: #cc0000; text-decoration: none;} a:hover {color: #000000; text-decoration: none;} .container {margin: auto; width: 960px; border: solid 1px #a7bac5; padding: 0px 20px 20px 20px; background-color: #ffffff;} .overview { border: solid 1px #a7bac5; border-collapse: collapse;} .overview th { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px; background-color: #d2dbe1;} .overview td { border: solid 1px #a7bac5; border-collapse: collapse; padding: 2px 5px 2px 5px;} .coverage { border: solid 1px #a7bac5; border-collapse: collapse; font-size: 5px;} .coverage td { padding: 0px; } .right {text-align: right; padding-right: 8px;} .light {color: #888888;} .green {background-color: #00ff21;} .red {background-color: #ff0000;} .gray {background-color: #dcdcdc;} .footer {font-size: 0.7em; text-align: center; margin-top: 35px;} </style></head><body><div class="container"><h1>Summary</h1><table class="overview"><tr><th>Assembly:</th><td>NMock2</td></tr><tr><th>Class:</th><td>NMock2.Internal.ExpectationBuilderPropertyValueBuilder</td></tr><tr><th valign="top">File(s):</th><td>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs<br /></td></tr><tr><th>Coverage:</th><td>100 %</td></tr><tr><th>Covered lines:</th><td>5</td></tr><tr><th>Coverable lines:</th><td>5</td></tr><tr><th>Total lines:</th><td>514</td></tr></table><h1>File(s)</h1><h2>d:\Projects\NMockXP\SF_SVN\trunk\src\NMock2\Internal\ExpectationBuilder.cs</h2><table><tr><th></th><th class="right">&nbsp;#</th><th class="right">Line</th><th>Content</th></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>1</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>2</code></td><td class="light"><code>//&nbsp;&lt;copyright&nbsp;file="ExpectationBuilder.cs"&nbsp;company="NMock2"&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>3</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>4</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;http://www.sourceforge.net/projects/NMock2</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>5</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>6</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Licensed&nbsp;under&nbsp;the&nbsp;Apache&nbsp;License,&nbsp;Version&nbsp;2.0&nbsp;(the&nbsp;"License");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>7</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;you&nbsp;may&nbsp;not&nbsp;use&nbsp;this&nbsp;file&nbsp;except&nbsp;in&nbsp;compliance&nbsp;with&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>8</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;You&nbsp;may&nbsp;obtain&nbsp;a&nbsp;copy&nbsp;of&nbsp;the&nbsp;License&nbsp;at</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>9</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>10</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.apache.org/licenses/LICENSE-2.0</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>11</code></td><td class="light"><code>//</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>12</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;Unless&nbsp;required&nbsp;by&nbsp;applicable&nbsp;law&nbsp;or&nbsp;agreed&nbsp;to&nbsp;in&nbsp;writing,&nbsp;software</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>13</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;distributed&nbsp;under&nbsp;the&nbsp;License&nbsp;is&nbsp;distributed&nbsp;on&nbsp;an&nbsp;"AS&nbsp;IS"&nbsp;BASIS,</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>14</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;WITHOUT&nbsp;WARRANTIES&nbsp;OR&nbsp;CONDITIONS&nbsp;OF&nbsp;ANY&nbsp;KIND,&nbsp;either&nbsp;express&nbsp;or&nbsp;implied.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>15</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;See&nbsp;the&nbsp;License&nbsp;for&nbsp;the&nbsp;specific&nbsp;language&nbsp;governing&nbsp;permissions&nbsp;and</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>16</code></td><td class="light"><code>//&nbsp;&nbsp;&nbsp;limitations&nbsp;under&nbsp;the&nbsp;License.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>17</code></td><td class="light"><code>//&nbsp;&lt;/copyright&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>18</code></td><td class="light"><code>//-----------------------------------------------------------------------</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>19</code></td><td class="light"><code>namespace&nbsp;NMock2.Internal</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>20</code></td><td class="light"><code>{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>21</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>22</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Collections.Generic;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>23</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;System.Reflection;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>24</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;Matchers;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>25</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;using&nbsp;Syntax;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>26</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>27</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;ExpectationBuilder&nbsp;:</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>28</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IReceiverSyntax,&nbsp;IMethodSyntax,&nbsp;IArgumentSyntax</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>29</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>30</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;BuildableExpectation&nbsp;expectation;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>31</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;IMockObject&nbsp;mockObject;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>32</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>33</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>34</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="ExpectationBuilder"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>35</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>36</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="description"&gt;The&nbsp;description.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>37</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="requiredCountMatcher"&gt;The&nbsp;required&nbsp;count&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>38</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="acceptedCountMatcher"&gt;The&nbsp;accepted&nbsp;count&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>39</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ExpectationBuilder(string&nbsp;description,&nbsp;Matcher&nbsp;requiredCountMatcher,&nbsp;Matcher&nbsp;acceptedCountMatch</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>40</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>41</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation&nbsp;=&nbsp;new&nbsp;BuildableExpectation(description,&nbsp;requiredCountMatcher,&nbsp;acceptedCountMatche</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>42</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>43</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>44</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>45</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;an&nbsp;indexer&nbsp;(get&nbsp;operation).</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>46</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>47</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;Get&nbsp;indexer&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;value&nbsp;returned&nbsp;by&nbsp;the&nbsp;indexer.&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>48</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IGetIndexerSyntax&nbsp;Get</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>49</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>50</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>51</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>52</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;methodMatcher&nbsp;=&nbsp;NewMethodNameMatcher(string.Empty,&nbsp;"get_Item");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>53</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"an&nbsp;indexed&nbsp;getter");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>54</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>55</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.DescribeAsIndexer();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>56</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>57</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;IndexGetterBuilder(this.expectation,&nbsp;this);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>58</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>59</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>60</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>61</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>62</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;an&nbsp;indexer&nbsp;(set&nbsp;operation).</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>63</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>64</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;value&gt;Set&nbsp;indexer&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;value&nbsp;the&nbsp;indexer&nbsp;is&nbsp;set&nbsp;to.&lt;/value&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>65</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ISetIndexerSyntax&nbsp;Set</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>66</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>67</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>68</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>69</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;methodMatcher&nbsp;=&nbsp;NewMethodNameMatcher(string.Empty,&nbsp;"set_Item");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>70</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"an&nbsp;indexed&nbsp;getter");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>71</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>72</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.DescribeAsIndexer();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>73</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>74</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;IndexSetterBuilder(this.expectation,&nbsp;this);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>75</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>76</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>77</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>78</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>79</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;the&nbsp;receiver.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>80</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>81</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="receiver"&gt;The&nbsp;dynamic&nbsp;mock&nbsp;on&nbsp;which&nbsp;the&nbsp;expectation&nbsp;or&nbsp;stub&nbsp;is&nbsp;applied.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>82</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;Method&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;method,&nbsp;property&nbsp;or&nbsp;event.&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>83</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMethodSyntax&nbsp;On(object&nbsp;receiver)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>84</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>85</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(receiver&nbsp;is&nbsp;IMockObject)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>86</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>87</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockObject&nbsp;=&nbsp;(IMockObject)receiver;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>88</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>89</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.Receiver&nbsp;=&nbsp;this.mockObject;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>90</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.mockObject.AddExpectation(this.expectation);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>91</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>92</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>93</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>94</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;ArgumentException("not&nbsp;a&nbsp;mock&nbsp;object",&nbsp;"receiver");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>95</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>96</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>97</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>98</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>99</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>100</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>101</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Methods&nbsp;the&nbsp;specified&nbsp;method&nbsp;name.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>102</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>103</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="methodName"&gt;Name&nbsp;of&nbsp;the&nbsp;method.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>104</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="typeParams"&gt;The&nbsp;type&nbsp;params.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>105</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>106</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IArgumentSyntax&nbsp;Method(string&nbsp;methodName,&nbsp;params&nbsp;Type[]&nbsp;typeParams)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>107</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>108</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.Method(new&nbsp;MethodNameMatcher(methodName),&nbsp;typeParams);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>109</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>110</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>111</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>112</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;a&nbsp;method.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>113</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>114</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="method"&gt;The&nbsp;method.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>115</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="typeParams"&gt;The&nbsp;generic&nbsp;type&nbsp;params&nbsp;to&nbsp;match.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>116</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>117</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Argument&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;arguments&nbsp;of&nbsp;the&nbsp;method.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>118</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>119</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IArgumentSyntax&nbsp;Method(MethodInfo&nbsp;method,&nbsp;params&nbsp;Type[]&nbsp;typeParams)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>120</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>121</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.Method(new&nbsp;DescriptionOverride(method.Name,&nbsp;Is.Same(method)),&nbsp;typeParams);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>122</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>123</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>124</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>125</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Methods&nbsp;the&nbsp;specified&nbsp;method&nbsp;matcher.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>126</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>127</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="methodMatcher"&gt;The&nbsp;method&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>128</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="typeParams"&gt;The&nbsp;type&nbsp;params.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>129</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>130</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IArgumentSyntax&nbsp;Method(Matcher&nbsp;methodMatcher,&nbsp;params&nbsp;Type[]&nbsp;typeParams)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>131</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>132</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(typeParams&nbsp;!=&nbsp;null&nbsp;&&&nbsp;typeParams.Length&nbsp;&gt;&nbsp;0)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>133</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>134</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;Matcher&gt;&nbsp;typeMatchers&nbsp;=&nbsp;new&nbsp;List&lt;Matcher&gt;();</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>135</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(Type&nbsp;type&nbsp;in&nbsp;typeParams)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>136</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>137</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;typeMatchers.Add(new&nbsp;DescriptionOverride(type.FullName,&nbsp;new&nbsp;SameMatcher(type)));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>138</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>139</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>140</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.Method(</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>141</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;methodMatcher,&nbsp;new&nbsp;GenericMethodTypeParametersMatcher(typeMatchers.ToArray()));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>142</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>143</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>144</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>145</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.Method(methodMatcher,&nbsp;new&nbsp;AlwaysMatcher(true,&nbsp;string.Empty));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>146</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>147</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>148</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>149</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>150</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;a&nbsp;method.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>151</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>152</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="methodMatcher"&gt;Matcher&nbsp;for&nbsp;matching&nbsp;the&nbsp;method&nbsp;on&nbsp;an&nbsp;invocation.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>153</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="typeParamsMatcher"&gt;Matchers&nbsp;for&nbsp;matching&nbsp;type&nbsp;parameters.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>154</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>155</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Argument&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;arguments&nbsp;of&nbsp;the&nbsp;method.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>156</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>157</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IArgumentSyntax&nbsp;Method(Matcher&nbsp;methodMatcher,&nbsp;Matcher&nbsp;typeParamsMatcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>158</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>159</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"a&nbsp;method&nbsp;matching&nbsp;"&nbsp;+&nbsp;methodMatcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>160</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>161</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>162</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.GenericMethodTypeMatcher&nbsp;=&nbsp;typeParamsMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>163</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>164</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>165</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>166</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>167</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>168</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Gets&nbsp;the&nbsp;property.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>169</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>170</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="propertyName"&gt;Name&nbsp;of&nbsp;the&nbsp;property.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>171</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>172</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;GetProperty(string&nbsp;propertyName)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>173</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>174</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;methodMatcher&nbsp;=&nbsp;NewMethodNameMatcher(propertyName,&nbsp;"get_"&nbsp;+&nbsp;propertyName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>175</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>176</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"a&nbsp;getter&nbsp;for&nbsp;property&nbsp;"&nbsp;+&nbsp;propertyName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>177</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>178</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>179</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;DescriptionOverride(string.Empty,&nbsp;new&nbsp;ArgumentsMatcher());</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>180</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>181</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>182</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>183</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>184</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>185</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Sets&nbsp;the&nbsp;property.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>186</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>187</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="propertyName"&gt;Name&nbsp;of&nbsp;the&nbsp;property.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>188</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>189</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IValueSyntax&nbsp;SetProperty(string&nbsp;propertyName)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>190</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>191</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;methodMatcher&nbsp;=&nbsp;NewMethodNameMatcher(propertyName&nbsp;+&nbsp;"&nbsp;=&nbsp;",&nbsp;"set_"&nbsp;+&nbsp;propertyName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>192</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>193</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"a&nbsp;setter&nbsp;for&nbsp;property&nbsp;"&nbsp;+&nbsp;propertyName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>194</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>195</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>196</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;PropertyValueBuilder(this);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>197</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>198</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>199</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>200</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;an&nbsp;event&nbsp;registration.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>201</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>202</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="eventName"&gt;Name&nbsp;of&nbsp;the&nbsp;event.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>203</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>204</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Match&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;event&nbsp;adder.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>205</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>206</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;EventAdd(string&nbsp;eventName)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>207</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>208</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.EventAdd(eventName,&nbsp;Is.Anything);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>209</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>210</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>211</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>212</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;an&nbsp;event&nbsp;registration.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>213</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>214</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="eventName"&gt;Name&nbsp;of&nbsp;the&nbsp;event.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>215</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="listenerMatcher"&gt;The&nbsp;listener&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>216</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>217</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Match&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;event&nbsp;adder.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>218</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>219</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;EventAdd(string&nbsp;eventName,&nbsp;Matcher&nbsp;listenerMatcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>220</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>221</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;methodMatcher&nbsp;=&nbsp;NewMethodNameMatcher(eventName&nbsp;+&nbsp;"&nbsp;+=&nbsp;",&nbsp;"add_"&nbsp;+&nbsp;eventName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>222</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>223</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"an&nbsp;event&nbsp;named&nbsp;"&nbsp;+&nbsp;eventName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>224</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>225</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>226</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;ArgumentsMatcher(listenerMatcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>227</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>228</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>229</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>230</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>231</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;an&nbsp;event&nbsp;registration.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>232</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>233</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="eventName"&gt;Name&nbsp;of&nbsp;the&nbsp;event.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>234</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="equalListener"&gt;Delegate&nbsp;defining&nbsp;compatible&nbsp;listeners.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>235</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>236</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Match&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;event&nbsp;adder.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>237</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>238</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;EventAdd(string&nbsp;eventName,&nbsp;Delegate&nbsp;equalListener)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>239</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>240</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.EventAdd(eventName,&nbsp;Is.EqualTo(equalListener));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>241</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>242</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>243</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>244</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;an&nbsp;event&nbsp;deregistration.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>245</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>246</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="eventName"&gt;Name&nbsp;of&nbsp;the&nbsp;event.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>247</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="listenerMatcher"&gt;The&nbsp;listener&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>248</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>249</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Match&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;event&nbsp;remover.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>250</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>251</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;EventRemove(string&nbsp;eventName,&nbsp;Matcher&nbsp;listenerMatcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>252</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>253</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher&nbsp;methodMatcher&nbsp;=&nbsp;NewMethodNameMatcher(eventName&nbsp;+&nbsp;"&nbsp;-=&nbsp;",&nbsp;"remove_"&nbsp;+&nbsp;eventName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>254</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>255</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.EnsureMatchingMethodExistsOnMock(methodMatcher,&nbsp;"an&nbsp;event&nbsp;named&nbsp;"&nbsp;+&nbsp;eventName);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>256</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>257</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.MethodMatcher&nbsp;=&nbsp;methodMatcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>258</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;ArgumentsMatcher(listenerMatcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>259</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>260</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>261</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>262</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>263</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;an&nbsp;event&nbsp;deregistration.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>264</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>265</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="eventName"&gt;Name&nbsp;of&nbsp;the&nbsp;event.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>266</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>267</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Match&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;event&nbsp;remover.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>268</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>269</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;EventRemove(string&nbsp;eventName)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>270</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>271</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.EventRemove(eventName,&nbsp;Is.Anything);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>272</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>273</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>274</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>275</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;an&nbsp;event&nbsp;deregistration.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>276</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>277</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="eventName"&gt;Name&nbsp;of&nbsp;the&nbsp;event.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>278</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="equalListener"&gt;Delegate&nbsp;defining&nbsp;compatible&nbsp;listeners.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>279</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>280</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Match&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;event&nbsp;remover.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>281</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>282</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;EventRemove(string&nbsp;eventName,&nbsp;Delegate&nbsp;equalListener)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>283</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>284</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.EventRemove(eventName,&nbsp;Is.EqualTo(equalListener));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>285</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>286</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>287</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>288</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;the&nbsp;arguments&nbsp;that&nbsp;are&nbsp;expected&nbsp;on&nbsp;the&nbsp;method&nbsp;call.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>289</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>290</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="expectedArguments"&gt;The&nbsp;expected&nbsp;arguments.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>291</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;Matcher&nbsp;syntax.&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>292</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;With(params&nbsp;object[]&nbsp;expectedArguments)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>293</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>294</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;ArgumentsMatcher(ArgumentMatchers(expectedArguments));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>295</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>296</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>297</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>298</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>299</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;that&nbsp;no&nbsp;arguments&nbsp;are&nbsp;expected&nbsp;on&nbsp;the&nbsp;method&nbsp;call.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>300</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>301</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;Matcher&nbsp;syntax.&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>302</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;WithNoArguments()</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>303</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>304</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.With(new&nbsp;Matcher[0]);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>305</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>306</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>307</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>308</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;that&nbsp;all&nbsp;arguments&nbsp;are&nbsp;allowed&nbsp;on&nbsp;the&nbsp;method&nbsp;call.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>309</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>310</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;Matcher&nbsp;syntax.&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>311</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;WithAnyArguments()</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>312</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>313</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;AlwaysMatcher(true,&nbsp;"(any&nbsp;arguments)");</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>314</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>315</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>316</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>317</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>318</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;a&nbsp;matching&nbsp;criteria.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>319</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>320</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="matcher"&gt;The&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>321</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>322</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Action&nbsp;syntax&nbsp;defining&nbsp;the&nbsp;action&nbsp;to&nbsp;take.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>323</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>324</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IActionSyntax&nbsp;Matching(Matcher&nbsp;matcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>325</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>326</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.AddInvocationMatcher(matcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>327</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>328</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>329</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>330</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>331</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Defines&nbsp;what&nbsp;will&nbsp;happen.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>332</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>333</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="actions"&gt;The&nbsp;actions&nbsp;to&nbsp;take.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>334</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>335</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Returns&nbsp;the&nbsp;comment&nbsp;syntax&nbsp;defined&nbsp;after&nbsp;will.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>336</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>337</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;ICommentSyntax&nbsp;Will(params&nbsp;IAction[]&nbsp;actions)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>338</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>339</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(IAction&nbsp;action&nbsp;in&nbsp;actions)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>340</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>341</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.AddAction(action);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>342</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>343</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>344</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>345</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>346</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>347</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>348</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Adds&nbsp;a&nbsp;comment&nbsp;for&nbsp;the&nbsp;expectation&nbsp;that&nbsp;is&nbsp;added&nbsp;to&nbsp;the&nbsp;error&nbsp;message&nbsp;if&nbsp;the&nbsp;expectation&nbsp;is&nbsp;not&nbsp;me</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>349</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>350</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="comment"&gt;The&nbsp;comment&nbsp;that&nbsp;is&nbsp;shown&nbsp;in&nbsp;the&nbsp;error&nbsp;message&nbsp;if&nbsp;this&nbsp;expectation&nbsp;is&nbsp;not&nbsp;me</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>351</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;You&nbsp;can&nbsp;describe&nbsp;here&nbsp;why&nbsp;this&nbsp;expectation&nbsp;has&nbsp;to&nbsp;be&nbsp;met.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>352</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Comment(string&nbsp;comment)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>353</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>354</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.AddComment(comment);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>355</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>356</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>357</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>358</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Arguments&nbsp;the&nbsp;matchers.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>359</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>360</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="expectedArguments"&gt;The&nbsp;expected&nbsp;arguments.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>361</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>362</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;Matcher[]&nbsp;ArgumentMatchers(object[]&nbsp;expectedArguments)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>363</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>364</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher[]&nbsp;matchers&nbsp;=&nbsp;new&nbsp;Matcher[expectedArguments.Length];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>365</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;matchers.Length;&nbsp;i++)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>366</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>367</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;object&nbsp;o&nbsp;=&nbsp;expectedArguments[i];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>368</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;matchers[i]&nbsp;=&nbsp;(o&nbsp;is&nbsp;Matcher)&nbsp;?&nbsp;(Matcher)&nbsp;o&nbsp;:&nbsp;new&nbsp;EqualMatcher(o);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>369</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>370</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>371</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;matchers;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>372</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>373</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>374</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>375</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;News&nbsp;the&nbsp;method&nbsp;name&nbsp;matcher.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>376</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>377</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="description"&gt;The&nbsp;description.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>378</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="methodName"&gt;Name&nbsp;of&nbsp;the&nbsp;method.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>379</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;returns&gt;&lt;/returns&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>380</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;Matcher&nbsp;NewMethodNameMatcher(string&nbsp;description,&nbsp;string&nbsp;methodName)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>381</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>382</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;DescriptionOverride(description,&nbsp;new&nbsp;MethodNameMatcher(methodName));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>383</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>384</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>385</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>386</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Ensures&nbsp;the&nbsp;matching&nbsp;method&nbsp;exists&nbsp;on&nbsp;mock.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>387</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>388</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="methodMatcher"&gt;The&nbsp;method&nbsp;matcher.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>389</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="methodDescription"&gt;The&nbsp;method&nbsp;description.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>390</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;EnsureMatchingMethodExistsOnMock(Matcher&nbsp;methodMatcher,&nbsp;string&nbsp;methodDescription)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>391</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>392</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IList&lt;MethodInfo&gt;&nbsp;matches&nbsp;=&nbsp;this.mockObject.GetMethodsMatching(methodMatcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>393</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>394</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(matches.Count&nbsp;==&nbsp;0)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>395</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>396</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;ArgumentException("mock&nbsp;object&nbsp;"&nbsp;+&nbsp;this.mockObject.MockName&nbsp;+&nbsp;"&nbsp;does&nbsp;not&nbsp;have&nbsp;"&nbsp;+&nbsp;me</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>397</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>398</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>399</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(MethodInfo&nbsp;methodInfo&nbsp;in&nbsp;matches)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>400</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>401</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Note&nbsp;that&nbsp;methods&nbsp;on&nbsp;classes&nbsp;that&nbsp;are&nbsp;implementations&nbsp;of&nbsp;an&nbsp;interface</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>402</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;method&nbsp;are&nbsp;considered&nbsp;virtual&nbsp;regardless&nbsp;of&nbsp;whether&nbsp;they&nbsp;are&nbsp;actually</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>403</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;marked&nbsp;as&nbsp;virtual&nbsp;or&nbsp;not.&nbsp;Hence&nbsp;the&nbsp;additional&nbsp;call&nbsp;to&nbsp;IsFinal.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>404</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((methodInfo.IsVirtual&nbsp;||&nbsp;methodInfo.IsAbstract)&nbsp;&&&nbsp;!methodInfo.IsFinal)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>405</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>406</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>407</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>408</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>409</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>410</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;ArgumentException("mock&nbsp;object&nbsp;"&nbsp;+&nbsp;this.mockObject.MockName&nbsp;+&nbsp;"&nbsp;has&nbsp;"&nbsp;+&nbsp;methodDescriptio</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>411</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>412</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>413</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;class&nbsp;PropertyValueBuilder&nbsp;:&nbsp;IValueSyntax</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>414</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>415</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;ExpectationBuilder&nbsp;builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>416</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>417</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>418</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="PropertyValueBuilder"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>419</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>420</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="builder"&gt;The&nbsp;builder.&lt;/param&gt;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>421</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;PropertyValueBuilder(ExpectationBuilder&nbsp;builder)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>422</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>423</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.builder&nbsp;=&nbsp;builder;</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">12</td><td class="right"><code>424</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>425</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>426</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;To(Matcher&nbsp;valueMatcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>427</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>428</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.builder.With(valueMatcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>429</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>430</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>431</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;To(object&nbsp;equalValue)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>432</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="green">&nbsp;</td><td class="right">7</td><td class="right"><code>433</code></td><td><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.To(Is.EqualTo(equalValue));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>434</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>435</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>436</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>437</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;class&nbsp;IndexGetterBuilder&nbsp;:&nbsp;IGetIndexerSyntax</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>438</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>439</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;BuildableExpectation&nbsp;expectation;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>440</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>441</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>442</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Holds&nbsp;the&nbsp;instance&nbsp;to&nbsp;the&nbsp;&lt;see&nbsp;cref="ExpectationBuilder"/&gt;.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>443</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>444</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;ExpectationBuilder&nbsp;builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>445</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>446</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>447</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="IndexGetterBuilder"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>448</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>449</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="expectation"&gt;The&nbsp;expectation.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>450</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="builder"&gt;The&nbsp;builder.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>451</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IndexGetterBuilder(BuildableExpectation&nbsp;expectation,&nbsp;ExpectationBuilder&nbsp;builder)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>452</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>453</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation&nbsp;=&nbsp;expectation;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>454</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.builder&nbsp;=&nbsp;builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>455</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>456</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>457</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;this[params&nbsp;object[]&nbsp;expectedArguments]</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>458</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>459</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>460</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>461</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;IndexGetterArgumentsMatcher(ArgumentMatchers(expec</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>462</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>463</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>464</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>465</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>466</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>467</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;class&nbsp;IndexSetterBuilder&nbsp;:&nbsp;ISetIndexerSyntax,&nbsp;IValueSyntax</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>468</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>469</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;BuildableExpectation&nbsp;expectation;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>470</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;readonly&nbsp;ExpectationBuilder&nbsp;builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>471</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Matcher[]&nbsp;matchers;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>472</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>473</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>474</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;Initializes&nbsp;a&nbsp;new&nbsp;instance&nbsp;of&nbsp;the&nbsp;&lt;see&nbsp;cref="IndexSetterBuilder"/&gt;&nbsp;class.</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>475</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;/summary&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>476</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="expectation"&gt;The&nbsp;expectation.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>477</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;///&nbsp;&lt;param&nbsp;name="builder"&gt;The&nbsp;builder.&lt;/param&gt;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>478</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IndexSetterBuilder(BuildableExpectation&nbsp;expectation,&nbsp;ExpectationBuilder&nbsp;builder)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>479</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>480</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation&nbsp;=&nbsp;expectation;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>481</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.builder&nbsp;=&nbsp;builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>482</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>483</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>484</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IValueSyntax&nbsp;this[params&nbsp;object[]&nbsp;expectedArguments]</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>485</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>486</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>487</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>488</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matcher[]&nbsp;indexMatchers&nbsp;=&nbsp;ArgumentMatchers(expectedArguments);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>489</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.matchers&nbsp;=&nbsp;new&nbsp;Matcher[indexMatchers.Length&nbsp;+&nbsp;1];</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>490</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Array.Copy(indexMatchers,&nbsp;this.matchers,&nbsp;indexMatchers.Length);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>491</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValueMatcher(Is.Anything);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>492</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>493</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>494</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>495</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>496</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;To(Matcher&nbsp;matcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>497</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>498</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.SetValueMatcher(matcher);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>499</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.builder;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>500</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>501</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>502</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;IMatchSyntax&nbsp;To(object&nbsp;equalValue)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>503</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>504</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.To(Is.EqualTo(equalValue));</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>505</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>506</code></td><td class="light"></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>507</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;void&nbsp;SetValueMatcher(Matcher&nbsp;matcher)</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>508</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>509</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.matchers[this.matchers.Length&nbsp;-&nbsp;1]&nbsp;=&nbsp;matcher;</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>510</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.expectation.ArgumentsMatcher&nbsp;=&nbsp;new&nbsp;IndexSetterArgumentsMatcher(this.matchers);</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>511</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>512</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>513</code></td><td class="light"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr><tr><td class="gray">&nbsp;</td><td class="right"></td><td class="right"><code>514</code></td><td class="light"><code>}</code></td></tr></table><div class="footer">Generated by: ReportGenerator 0.5.0.0<br />20.12.2009 - 15:18:59<br /><a href="http:// www.palmmedia.de">www.palmmedia.de</a></div></div></body></html>