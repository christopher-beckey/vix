Cache for Windows NT^INT^Saved from DICOM,ROU (ISW-KUZMAKP3-LT)^~Format=Cache.S~
%RO on 07/03/2013  11:26
MAGDIWB2^INT^1^62915,56531.487651^0
MAGDIWB2 ;WOIFO/PMK/RRB - Send images to DICOM storage - Part 1/2 ; 03 Apr 2013 3:42 PM
 ;;3.0;IMAGING;**11,30,51,50,54,99,110**;Mar 19, 2002;Build 61;Oct 10, 2012
 ;; Per VHA Directive 2004-038, this routine should not be modified.
 ;; +---------------------------------------------------------------+
 ;; | Property of the US Government.                                |
 ;; | No permission to copy or redistribute this software is given. |
 ;; | Use of unreleased versions of this software requires the user |
 ;; | to execute a written test agreement with the VistA Imaging    |
 ;; | Development Office of the Department of Veterans Affairs,     |
 ;; | telephone (301) 734-0100.                                     |
 ;; | The Food and Drug Administration classifies this software as  |
 ;; | a medical device.  As such, it may not be changed in any way. |
 ;; | Modifications to this software may result in an adulterated   |
 ;; | medical device under 21CFR820, the use of which is considered |
 ;; | to be a violation of US Federal Statutes.                     |
 ;; +---------------------------------------------------------------+
 ;;
 Q
 ;
XMIT ; Called from ^MAGDMENU to start sending DICOM images
 N CHOICE,DEFAULT,ENTRY,PROMPT
 S ENTRY="REENTRY^"_$T(+0)
 S PROMPT="Ready to send DICOM Images from VistA?"
 G SETUP^MAGDSTRT
 ;
REENTRY ; Re-entry point from ^MAGDSTRT
 N ACCNUMB ;-- Accession Number
 N ACCNUMBLAST ; Previous value of Accession Number
 N COUNT ;---- Number of DICOM objects in the study
 N D0,D1 ;---- ^MAGDOUTP subscripts to study & image
 N D0LAST ;--- Previous value of D0
 N DCMCOUNT ;- Count of DICOM objects in the batch
 N ERROR ;---- Error encountered in image processing
 N FBSWITCH ;- foreground / midground / background flag for ^MAGDMLOG
 N FILEDCM ;-- File Name
 N FROMLOC ;-- Array of locations being served
 N I ;-------- Scratch
 N INFO ;----- Return info from RPC
 N IMAGE ;---- Pointer to Image
 N LOCATION ;- Location of Gateway
 N LOOPCOUNT ; Loop counter
 N RPCERR ; -- Return code from RPC call
 N SEND ;----- List of files to be transmitted
 N SENT ;----- List of successfully transmitted files
 N TEMPFILE ;- List of temporary Targa -> DICOM files
 N TOBESENT ;- Number of DICOM objects to be transmitted
 N TOTALSENT ; Number of DICOM objects that have been sent
 N USERAPP ;-- Current SCU User Application
 N TICKER ;--- Ticker counter for idle loop
 N VERBOSE ;-- For display of HOSTCMD
 N XMITERR ;-- Transmission error array
 ;
 S VERBOSE=0
 S FBSWITCH="FOREGROUND" ; foreground/background switch
 K ^TMP("MAG",$J,"DICOM ERROR"),^("DCF_STORE_SCU")
 S ^MAGDICOM(2006.563,1,"DICOM XMIT")="RUN"
 S LOCATION=$G(^MAGDICOM(2006.563,1,"LOCATION"))
 D FROMLOC^MAGDIWBD(.FROMLOC)
 K SEND ; Initialize the SEND list of images to be transmitted
 K TEMPFILE ; Initialize the list of Targa -> DICOM temporary files
 S (ACCNUMBLAST,USERAPP)=""
 S (DCMCOUNT,TICKER,D0LAST,LOOPCOUNT)=0 F  D  Q:TICKER<0
 . I $G(^MAGDICOM(2006.563,1,"DICOM XMIT"))'="RUN" S TICKER=-1 Q
 . S RPCERR=$$CALLRPC^MAGM2VCU("MAG DICOM GET NEXT QUEUE ENTRY","MT",.INFO,.FROMLOC,.SENT,0)
 . K SENT ; Initialize the SENT list of completed images
 . Q:$O(INFO(""))=""
 . ;
 . ; Two pass process:
 . ;  1) Reconstitute the DICOM images
 . ;  2) Send images
 . ;
 . S D0=+$G(INFO(2)) ; ^MAGDOUTP study subscript
 . S LOOPCOUNT=LOOPCOUNT+1 ; increment loop counter to output batches of 25
 . I (D0'=D0LAST)!(LOOPCOUNT>=25) D  ; transmit up to 25 accumulated images for current Store SCP
 . . I USERAPP'="",$D(^TMP("MAG",$J,"DCF_STORE_SCU")) D
 . . . D SEND
 . . . Q
 . . K ^TMP("MAG",$J,"DCF_STORE_SCU") ; remove list of DICOM objects to send
 . . S D0LAST=D0
 . . S LOOPCOUNT=0 ; re-initialize loop counter
 . . Q
 . ;
 . S USERAPP=$G(INFO(4)) ; Storage SCP
 . S IMAGE=+$G(INFO(7)) ; image number
 . I IMAGE D
 . . D BUILD ; build the entry in the SEND list for the next DICOM object
 . . Q
 . E  D
 . . S DCMCOUNT=0
 . . I ACCNUMBLAST'="",ACCNUMBLAST=ACCNUMB S ACCNUMBLAST=""
 . . D IDLE^MAGDBB(.TICKER,1)
 . . Q
 . Q
 K ^TMP("MAG",$J,"DICOM ERROR"),^("DCF_STORE_SCU")
 Q
 ;
BUILD ; call $$NEXT^MAGDIWB3 to add one image to the SEND list
 S D1=+$G(INFO(3)) ; ^MAGDOUTP image subscript
 S ACCNUMB=INFO(6) ; accession number
 S COUNT=$G(INFO(13)) ; DICOM object count
 S ERROR=$$NEXT^MAGDIWB3(D0,D1)
 I ERROR'="" D
 . I (+ERROR)<-100 D  ; serious errors
 . . I $G(^TMP("MAG",$J,"DICOM ERROR"))'=(ACCNUMB_"^"_ERROR) D
 . . . ; only output one error message per study
 . . . N MSG
 . . . S MSG(1)="Problem with Image #"_IMAGE_"  Accession Number: "_ACCNUMB
 . . . S MSG(2)=ERROR
 . . . S MSG(3)="File Path: "_INFO(10)
 . . . D TRAPERR^MAGDSTRT(-1,$T(+0),"DICOM Image Export Error",.MSG)
 . . . W ! ; add an additional space for the message
 . . . S ^TMP("MAG",$J,"DICOM ERROR")=ACCNUMB_"^"_ERROR
 . . . Q
 . . Q
 . E  D  ; warnings
 . . D MESSAGE^MAGDMLOG(1,0,ERROR,"BtV")
 . . Q
 . D REMOVE("FAIL") ; remove the offensive image from the queue
 . Q 
 Q
 ;
SEND ; send a batch of 25 DICOM objects from the study to the USERAPP Storage SCP
 N SENDERR ; return from $$SEND^MAGDDCF1()
 I ACCNUMB'=ACCNUMBLAST D
 . I '$G(XMITERR(D0LAST,ACCNUMB)) D
 . . W !!,"Send ",COUNT," DICOM object" W:COUNT>1 "s"
 . . W " of ",ACCNUMB," to ",USERAPP,!
 . . Q
 . S ACCNUMBLAST=ACCNUMB,TOBESENT=COUNT,TOTALSENT=0
 . Q
 I DCMCOUNT>1,'$G(XMITERR(D0LAST,ACCNUMB)) D DISPLAY
 ;
 ; send the bactch of DICOM objects, if there wasn't a previous error
 I $G(XMITERR(D0LAST,ACCNUMB)) D
 . S SENDERR="1,SEND SKIPPED" ; previous send error
 . Q
 E  S VERBOSE=0,SENDERR=$$SEND^MAGDDCF1(USERAPP)
 ;
 I SENDERR=0 D
 . N D1
 . ; display progress
 . I DCMCOUNT=1 W:$X ! W "Sent one DICOM object to ",USERAPP,"  "
 . E  S TOTALSENT=TOTALSENT+DCMCOUNT D DISPLAY
 . ; remove the references to the transmitted images
 . F I=1:1:$G(SEND(0)) D
 . . S D0LAST=$P(SEND(I),"^",1),D1=$P(SEND(I),"^",2)
 . . D REMOVE("SUCCESS")
 . . Q
 . Q
 E  I SENDERR<0 D  Q:0  ; transmission error
 . I '$G(XMITERR(D0LAST,ACCNUMB)) D  ; first time, log error message
 . . N MSG
 . . S MSG(1)="Problem transmitting to "_USERAPP
 . . S MSG(2)="Error Message: "_SENDERR
 . . S MSG(3)="Accession Number: "_ACCNUMB
 . . D TRAPERR^MAGDSTRT(-1,$T(+0),"DICOM Image Export Error",.MSG)
 . . S ^TMP("MAG",$J,"DICOM ERROR")=USERAPP_"^"_SENDERR
 . . S XMITERR(D0LAST,ACCNUMB)=1 ; set transmission error
 . . W ! ; needed for space after error message
 . . Q
 . Q
 K SEND ; Reinitialize the SEND list of images to be transmitted
 ; remove the temporary Targa -> DICOM files, if any
 F I=1:1:$G(TEMPFILE(0)) D
 . S X=$$DEL^MAGOSDIR(TEMPFILE(I))
 . Q
 K TEMPFILE ; Reinitialize the list of Targa -> DICOM temporary files
 Q
 ;
DISPLAY ; display the progress of the transmission
 N FRACTION
 Q:'SEND(0)  ; nothing to display
 W $C(13),$J("",79),$C(13) ; erase the line
 S $X=0 W ?22,$TR($J("",50)," ","."),$C(13)
 S $X=0 W $J(TOTALSENT,4), "  (",$P(SEND(1),"^",2)," - ",$P(SEND($O(SEND(""),-1)),"^",2),") "
 S FRACTION=TOTALSENT/TOBESENT S:FRACTION>1 FRACTION=1
 W ?22,$TR($J("",50*(FRACTION))," ","-") W:$X>70 "  " ; make space for ticker
 Q
 ;
REMOVE(STATUS) ; remove the image file from the queue
 ; Set the image file as being sent to remove it from the queue
 N X
 S X=$O(SENT(" "),-1)+1,SENT(X)=D0LAST_"^"_D1_"^"_$G(STATUS)
 Q



