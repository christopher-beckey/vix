MAGDIR75 ;WOIFO/PMK/RRB - Read a DICOM image file ; 12 Aug 2009 10:38 AM
 ;;3.0;IMAGING;**11,51,99**;Mar 19, 2002;Build 2179;Jun 28, 2011
 ;; Per VHA Directive 2004-038, this routine should not be modified.
 ;; +---------------------------------------------------------------+
 ;; | Property of the US Government.                                |
 ;; | No permission to copy or redistribute this software is given. |
 ;; | Use of unreleased versions of this software requires the user |
 ;; | to execute a written test agreement with the VistA Imaging    |
 ;; | Development Office of the Department of Veterans Affairs,     |
 ;; | telephone (301) 734-0100.                                     |
 ;; | The Food and Drug Administration classifies this software as  |
 ;; | a medical device.  As such, it may not be changed in any way. |
 ;; | Modifications to this software may result in an adulterated   |
 ;; | medical device under 21CFR820, the use of which is considered |
 ;; | to be a violation of US Federal Statutes.                     |
 ;; +---------------------------------------------------------------+
 ;;
 ;
 ; M2MB client
 ;
 ; This routine handles the deletion of the last entry in ^MAG(2005),
 ; and the "ROLLBACK" of the database.  It issues a separate RPC call
 ; to accomplish this, and then checks the result for proper completion.
 ;
ROLLBACK(IMAGEPTR,MSG) ; remove ^MAG(2005,IMAGEPTR) because of fatal problem
 N ERRORMSG,J,REQUEST,RESULT,X
 S J=$O(MSG(" "),-1) ; find the number of the last message
 ; generate a separate RPC request to handle the ROLLBACK
 D REQUEST^MAGDIR6("ROLLBACK","0|"_IMAGEPTR)
 D IMAGPROC^MAGDM2MB(.RESULT,.REQUEST)
 ;
 S X=@RESULT@(1)-1 ; don't count the number of elements
 I X'=1 D  ; fatal error
 . N I,K
 . S MSG(J+1)="ROLLBACK M-to-M RPC BROKER ERROR"
 . S MSG(J+2)="Unexpected number of array elements returned by RPC: "_X
 . S I=1 F K=3:1 S I=$O(@RESULT@(I)) Q:'I  D
 . . S MSG(J+K)="Element "_I_") "_@RESULT@(I)
 . . Q
 . S MSG(J+K)="Only one element (""ROLLBACK"") should be returned"
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q
 ;
 S X=@RESULT@(2)
 I $P(X,"|",1)'="ROLLBACK" D  ; fatal error
 . S MSG(J+1)="ROLLBACK M-to-M RPC BROKER ERROR"
 . S MSG(J+2)="Unexpected return from RPC: """_X_""""
 . S MSG(J+3)="Expected ""ROLLBACK|STATUS|IMAGEPTR"""
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q
 ;
 S ARGS=$P(@RESULT@(2),"|",2,999)
 S STATUS=$P(ARGS,"|",1),ERRORMSG=$P(ARGS,"|",2)
 S J=$O(MSG(""),-1) ; find the number of the last message
 I STATUS D
 . S MSG(J+1)="Error removing image entry #"_IMAGEPTR_"."
 . S MSG(J+2)=ERRORMSG
 . Q
 E  D
 . S MSG(J+1)="Imaging entry #"_IMAGEPTR_" was successfully removed."
 . Q
 Q
 ;
FILESIZE(IMAGETMP,TYPE) ; get the length of the temporary file
 N FILENAME,FILESIZE
 S X=$$GETDIR^MAGOSDIR(IMAGETMP)
 I 'X D  ; fatal error
 . N MSG
 . S MSG(1)="DIRECTORY PROBLEM WITH TEMPORARY "_TYPE_" IMAGE FILE (1)"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Temporary TGA file """_IMAGETMP_""" not in the directory"
 . D ROLLBACK^MAGDIR75(IMAGEPTR,.MSG) ; delete ^MAG(2005,IMAGEPTR) entry
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q  ; Error trap does not return
 I X<0 D  ; fatal error
 . N MSG
 . S MSG(1)="DIRECTORY PROBLEM WITH TEMPORARY "_TYPE_" IMAGE FILE (2)"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Error """_X_""" for temporary "_TYPE_" file """_IMAGETMP_""""
 . D ROLLBACK^MAGDIR75(IMAGEPTR,.MSG) ; delete ^MAG(2005,IMAGEPTR) entry
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q  ; Error trap does not return
 S FILENAME=$P(IMAGETMP,"\",$L(IMAGETMP,"\"))
 S FILESIZE=$P($G(^TMP("MAG",$J,"DIR LIST",FILENAME)),";")
 I 'FILESIZE D  ; fatal error
 . N MSG
 . S MSG(1)="DIRECTORY PROBLEM WITH TEMPORARY "_TYPE_" IMAGE FILE (3)"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Temporary "_TYPE_" file """_IMAGETMP_""" has ZERO LENGTH"
 . D ROLLBACK^MAGDIR75(IMAGEPTR,.MSG) ; delete ^MAG(2005,IMAGEPTR) entry
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q  ; Error trap does not return
 Q FILESIZE
 ;
ABSSIZE(IMAGETMP,TYPE,MSG) ; get the length of the temporary file
 N FILENAME,ABSSIZE
 S X=$$GETDIR^MAGOSDIR(IMAGETMP)
 I 'X D  ; fatal error
 . N MSG
 . S MSG(1)="DIRECTORY PROBLEM WITH TEMPORARY "_TYPE_" IMAGE FILE (1)"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Temporary file """_IMAGETMP_""" not in the directory"
 I X<0 D  ; fatal error
 . N MSG
 . S MSG(1)="DIRECTORY PROBLEM WITH TEMPORARY "_TYPE_" IMAGE FILE (2)"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Error """_X_""" for temporary "_TYPE_" file """_IMAGETMP_""""
 S FILENAME=$P(IMAGETMP,"\",$L(IMAGETMP,"\"))
 S ABSSIZE=$P($G(^TMP("MAG",$J,"DIR LIST",FILENAME)),";")
 I 'ABSSIZE D  ; fatal error
 . N MSG
 . S MSG(1)="DIRECTORY PROBLEM WITH TEMPORARY "_TYPE_" IMAGE FILE (3)"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Temporary "_TYPE_" file """_IMAGETMP_""" has ZERO LENGTH"
 Q ABSSIZE
 ;
FILECOPY(SOURCE,TARGET,TYPE) ; copy source file to target file
 S CMD="COPY "_SOURCE_" "_TARGET
 S VERBOSE=1 D DOS^MAGDOS(CMD,.ERROR)
 I ERROR(0) D  ; fatal error
 . N I,MSG
 . S MSG(1)=TYPE_" IMAGE COPY ERROR"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . F I=1:1:ERROR(0) S MSG(I+2)=$J(I,3)_") "_ERROR(I)
 . D ROLLBACK^MAGDIR75(IMAGEPTR,.MSG) ; delete ^MAG(2005,IMAGEPTR) entry
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q  ; Error trap does not return
 Q
 ;
ABSCOPY(SOURCE,TARGET,TYPE,MSG) ; copy source file to target file
 S CMD="COPY "_SOURCE_" "_TARGET
 S VERBOSE=1 D DOS^MAGDOS(CMD,.ERROR)
 I ERROR(0) D  ;
 . N I
 . S MSG(1)=TYPE_" ABSTRACT COPY ERROR"
 . S MSG(2)="Unexpected error in """_CMD_""""
 . S MSG(3)="Image Pointer: "_IMAGEPTR
 . F I=1:1:ERROR(0) S MSG(I+2)=$J(I,3)_") "_ERROR(I)
 Q
 ;
 ; The FILECHK entry point is separate from the ROLLBACK one.  It is
 ; invoked twice in both ^MAGDIR7C and ^MAGDIR7D.
 ;
FILECHK(FILEPATH,FILESIZE) ; Check that the full size image was written properly
 N FILENAME,SIZE,X,Y
 S FILESIZE=$G(FILESIZE,0) ; default FILESIZE is zero
 S FILENAME=$RE($P($RE(FILEPATH),"\"))
 S X=$$GETDIR^MAGOSDIR(FILEPATH)
 S Y=$G(^TMP("MAG",$J,"DIR LIST",FILENAME)),SIZE=$P(Y,";",1)
 ;
 I X'>0 D  ; fatal error
 . D FILECHK1("The error message was """_X_"""",0)
 . Q  ; Error trap does not return
 ;
 I SIZE'>0 D  ; fatal error
 . D FILECHK1("Size of written file is "_SIZE_" bytes.",0)
 . Q  ; Error trap does not return
 ;
 I FILESIZE,SIZE'=FILESIZE D  ; fatal error
 . D FILECHK1("Size of written file is "_SIZE_" -- should be "_FILESIZE,1)
 . Q  ; Error trap does not return
 Q
 ;
FILECHK1(ERRORMSG,CRITICAL) ; output fatal error message and terminate
 N MSG
 S MSG(1)="The writing of image file failed."
 S MSG(2)="Path: """_FILEPATH_""""
 S MSG(3)=ERRORMSG
 D ROLLBACK^MAGDIR75(IMAGEPTR,.MSG) ; delete ^MAG(2005,IMAGEPTR) entry
 I CRITICAL D  ; notify national imaging support for critical errors
 . D BADERROR^MAGDIRDE($T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q  ; Error trap does not return
 E  D
 . D TRAPERR^MAGDSTRT(1,$T(+0),"DICOM IMAGE PROCESSING ERROR",.MSG)
 . Q  ; Error trap does not return
 Q
