<html><head><title>VistA Imaging Routing Queue Management</title>
<!--
 ;; +---------------------------------------------------------------+
 ;; | Property of the US Government.                                |
 ;; | No permission to copy or redistribute this software is given. |
 ;; | Use of unreleased versions of this software requires the user |
 ;; | to execute a written test agreement with the VistA Imaging    |
 ;; | Development Office of the Department of Veterans Affairs,     |
 ;; | telephone (301) 734-0100.                                     |
 ;; |                                                               |
 ;; | The Food and Drug Administration classifies this software as  |
 ;; | a medical device.  As such, it may not be changed in any way. |
 ;; | Modifications to this software may result in an adulterated   |
 ;; | medical device under 21CFR820, the use of which is considered |
 ;; | to be a violation of US Federal Statutes.                     |
 ;; +---------------------------------------------------------------+
-->
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
</head>
<body background="vabkg.jpg">
<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
 Do %response.SetHeader("Expires","")
 Do %response.SetHeader("Cache-Control","none")
 Quit 1
</csp:method>
<table cellSpacing=0 cellPadding=0 border=0 summary="This table is for formatting purposes only.">
  <tr>
    <td vAlign=top><img alt="First part of VistA Imaging Logo" src="MAGLogo1.gif" border=0></td>
    <td vAlign=top><img alt="Second part of Vista Imaging Logo" src="MAGLogo2.gif"><br>
      <h2><font color=#0033ff>VistA Imaging Routing Queue Management</font></h2></td>
  </tr>
</table>

<script language=CACHE runat=server>
 Do ..Process()
</script>
 
</body>

<csp:method name=Process arguments="">
 New Err,M2MOK,VALLOC,WebPage
 ;
 Set id="",token=%request.Get("SessionToken") Do:token=""
 . New cmd,from,ip,util,x
 . Set WebPage=$IO
 . Set cmd="ipconfig",ip("127.0.0.1")=1
 . Open cmd:"QR" Use cmd Set util=$ZUtil(68,40,1)
 . For  Read x Quit:$ZEOF  Do
 . . Quit:x'["IP Address. ."
 . . Set x=$Extract(x,38,$Length(x))
 . . Set:x'="" ip(x)=1
 . . Quit
 . Set x=$ZUtil(68,40,util)
 . Close cmd Use WebPage
 . ;
 . Set id=""
 . Set from=%request.GetCgiEnv("REMOTE_HOST")
 . If from'="",$Get(ip(from)) Set id=from
 . Quit:id=""
 . Set token=id_"|"_..Now()_"|"_$Random(10000000)
 . Kill ^TMP("MAG",token)
 . Set ^MAGtoken(token)=5*60+..Now()
 . Quit
 ;
 Set:id="" token=%request.Get("SessionToken")
 Do:token'=""
 . New exp
 . Set exp=$Get(^MAGtoken(token))
 . If 'exp Set token="" Quit
 . If exp<..Now() Set token="" Quit
 . ; Extend expiration of token by 15 minutes
 . Set ^MAGtoken(token)=15*60+..Now()
 . Quit
 Do:token=""
 . New N1,N2,Pass,User
 . Set User=%request.Get("UserName")
 . Set Pass=%request.Get("PassWord")
 . Set N1=%request.Get("PassN1")
 . Set N2=%request.Get("PassN2")
 . Set:User_Pass_N1_N2'="" token=..LogInVal("DICOMGateway",User,Pass,N1,N2)
 . If token="" Do  Quit
 . . Do ..LogInFrm("DICOMGateway","MAGRouteQueue.csp")
 . . Quit
 . ; Initial token lives 5 minutes
 . Kill ^TMP("MAG",token)
 . Set ^MAGtoken(token)=5*60+..Now()
 . Set ^MAGtoken(token,"DICOMGateway")=1
 . Quit
 Do:token'=""
 . New key
 . Do  ; Set up credentials to use MUMPS-to-MUMPS Broker
 . . N A,V,X
 . . Kill ^TMP("MAG",$Job)
 . . Set ^TMP("MAG",$Job,"DICOM MENU OPTION")=0
 . . Set ^TMP("MAG",$Job,"DICOM MENU VIEW ONLY")=0
 . . S A=$G(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND ACCESS"))
 . . S V=$G(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND VERIFY"))
 . . S X=$$DECRYP^MAGM2VCU(A)_";"_$$DECRYP^MAGM2VCU(V)
 . . S ^TMP("MAG",$Job,"DICOM RPC USER")="666^1^"_$$ENCRYPT^MAGM2VCU(X)
 . . Q
 . ;
 . Set M2MOK=1,WebPage=$IO
 . Kill:%request.Get("RefreshQueue")'="" ^TMP("MAG",token,"Queue")
 . Do
 . . New DOMAIN
 . . If '$$ISCONT^MAGM2VCU() Do  Quit:'M2MOK
 . . . Set X=$$RECONCT^MAGDMENA() Quit:X
 . . . Write $Char(13,10),"<h3><font color=#ff0000>"
 . . . Write "Cannot connect to VistA at this time"
 . . . Write " - update capabilities limited.</font></h3>",$Char(13,10)
 . . . Write "<p>",..HTML($P(X,",",2,$L(X)+2)),"</p>"
 . . . Set M2MOK=0
 . . . Quit
 . . If $$CALLRPC^MAGM2VCU("MAG DICOM VALID LOCATIONS","M",.VALLOC)<0 Set M2MOK=0
 . . Else  If $$CALLRPC^MAGM2VCU("MAG DICOM GET DOMAIN","M",.DOMAIN)<0 Set M2MOK=0
 . . If $Get(DOMAIN)'="" Set ^MAGDICOM(2006.563,1,"DOMAIN")=DOMAIN
 . . Set VALLOC(1.5)="0^--Select a Site--^0"
 . . Set VALLOC(3)="500^ALBANY^500"
 . . Quit
 . ;
 . Set key="NewPri_" For  Set key=%request.Next(key) Quit:$Extract(key,1,7)'="NewPri_"  Do
 . . New dest,i,i1,i2,out,pri,result,study
 . . Set result=$Piece(key,"_",2)
 . . Set study=$Piece(key,"_",3)
 . . Set dest=$Piece(key,"_",4)
 . . Set pri=%request.Get(key)\1 Quit:pri<1
 . . If $$CALLRPC^MAGM2VCU("MAG ROUTE CHANGE QUEUE","M",.out,result,study,dest,pri)
 . . Set i="" For  Set i=$Order(^TMP("MAG",token,"Queue",i)) Quit:i=""  Do
 . . . Quit:+$Get(^TMP("MAG",token,"Queue",i))'=result
 . . . Set i1="" For  Set i1=$Order(^TMP("MAG",token,"Queue",i,i1)) Quit:i1=""  Do
 . . . . Set i2="" For  Set i2=$Order(^TMP("MAG",token,"Queue",i,i1,i2)) Quit:i2=""  Do
 . . . . . Set x=$Get(^TMP("MAG",token,"Queue",i,i1,i2))
 . . . . . Quit:$Piece(x,"^",6)'=study
 . . . . . Quit:$Piece(x,"^",7)'=dest
 . . . . . Set $Piece(x,"^",4,5)=pri_"^"_pri
 . . . . . Set ^TMP("MAG",token,"Queue",i,i1,i2)=x
 . . . . . Quit
 . . . . Quit
 . . . Quit
 . . Quit
 . Set key="Delete_" For  Set key=%request.Next(key) Quit:$Extract(key,1,7)'="Delete_"  Do
 . . New dest,out,result,study
 . . Set result=$Piece(key,"_",2)
 . . Set study=$Piece(key,"_",3)
 . . Set dest=$Piece(key,"_",4)
 . . If $$CALLRPC^MAGM2VCU("MAG ROUTE CHANGE QUEUE","M",.out,result,study,dest,-1)
 . . Set i="" For  Set i=$Order(^TMP("MAG",token,"Queue",i)) Quit:i=""  Do
 . . . Quit:+$Get(^TMP("MAG",token,"Queue",i))'=result
 . . . Set i1="" For  Set i1=$Order(^TMP("MAG",token,"Queue",i,i1)) Quit:i1=""  Do
 . . . . Set i2="" For  Set i2=$Order(^TMP("MAG",token,"Queue",i,i1,i2)) Quit:i2=""  Do
 . . . . . Set x=$Get(^TMP("MAG",token,"Queue",i,i1,i2))
 . . . . . Quit:$Piece(x,"^",6)'=study
 . . . . . Quit:$Piece(x,"^",7)'=dest
 . . . . . Kill ^TMP("MAG",token,"Queue",i,i1,i2)
 . . . . . Quit
 . . . . Quit
 . . . Quit
 . . Quit
 . ;
 . Do:'$Data(^TMP("MAG",token,"Queue"))
 . . New i,out,site,x
 . . Set i="" For  Set i=$Order(VALLOC(i)) Quit:i=""  Do
 . . . Set x=$Get(VALLOC(i)),site=+x Quit:'site  Quit:x'["^"
 . . . Quit:$$CALLRPC^MAGM2VCU("MAG ROUTE GET STUDIES","M",.out,site,100,"",0)<0
 . . . Quit:out(1)<0
 . . . Set ^TMP("MAG",token,"Queue",site)=$Piece(out(1),",",2)
 . . . Quit
 . . Quit
 . ;
 . Do
 . . New done,dst,horo,i,n,off,result,site,out,x
 . . Set horo=..Now()+30
 . . Set site="" For  Set site=$Order(^TMP("MAG",token,"Queue",site)) Quit:site=""  Do  Quit:..Now()>horo
 . . . Set x=$Get(^TMP("MAG",token,"Queue",site)) Quit:'x
 . . . Quit:$Piece(x,"|",2)="OK"
 . . . Set result=$Piece(x,"|",1)
 . . . Set (off,done,n)=0 For  Do  Quit:done
 . . . . If ..Now()>horo Set done=1 Quit
 . . . . If $$CALLRPC^MAGM2VCU("MAG ROUTE GET STUDIES","M",.out,site,100,result,off)<0 Set done=1 Quit
 . . . . If out(1)="0,No more Results." Do  Set done=1 Quit
 . . . . . Set ^TMP("MAG",token,"Queue",site)=result_"|OK"
 . . . . . ;;;If $$CALLRPC^MAGM2VCU("MAG ROUTE GET STUDIES","M",.out,site,100,result,-1)<0
 . . . . . Quit
 . . . . If out(1)'["Result(s)." Set done=1 Quit
 . . . . Set i=1 For  Set i=$Order(out(i)) Quit:i=""  Do
 . . . . . Set dst=$Piece(out(i),"^",8),x=$Piece(out(i),"^",1,7)
 . . . . . Set:dst="" dst="?"
 . . . . . Set n=n+1,^TMP("MAG",token,"Queue",site,dst,n)=x
 . . . . . Quit
 . . . . Set off=$Piece(out(1),",",2)+1
 . . . . Quit
 . . . Quit
 . . Quit
 . ;
 . If $$CLOSE^MAGM2VC()
 . ;
 . Use WebPage
 . Write $Char(13,10),"<form action=""MagRouteQueue.csp"" method=""POST"">"
 . Write $Char(13,10),"<input type=hidden name=""SessionToken"" value=""",token,""">"
 . ;
 . Write $Char(13,10),"<p><b>Transmitting Site</b>: "
 . Do ..DropList("Origin",.VALLOC)
 . Write "</p>"
 . ;
 . Write $Char(13,10),"<p><input type=checkbox name=""RefreshQueue""> &nbsp; "
 . Write "Refresh All Queue Information.</p>"
 . Write $Char(13,10),"<p><input type=submit value=""Refresh Display""></p>"
 . ;
 . Do
 . . New a,dst,from,i,n,result,site,t
 . . Set site=%request.Get("Origin") Quit:'site
 . . Set result=+$Get(^TMP("MAG",token,"Queue",site)) Quit:'result
 . . Set from="?",i="" For  Set i=$Order(VALLOC(i)) Quit:i=""  Do
 . . . Set:+VALLOC(i)=site from=$Piece(VALLOC(i),"^",2)
 . . . Quit
 . . Set dst="" For  Set dst=$Order(^TMP("MAG",token,"Queue",site,dst)) Quit:dst=""  Do
 . . . Write $Char(13,10),"<h3>Routing Queue from ",from," to ",dst
 . . . Set a=0
 . . . Set n="" For  Set n=$Order(^TMP("MAG",token,"Queue",site,dst,n)) Quit:n=""  Do
 . . . . Do:'a
 . . . . . Write $Char(13,10),"<table border=2>"
 . . . . . Write $Char(13,10),"<tr><th valign=bottom>Study</th>"
 . . . . . Write $Char(13,10),"<th valign=bottom>Number<br>of Files</th>"
 . . . . . Write $Char(13,10),"<th valign=bottom>Lowest<br>Priority</th>"
 . . . . . Write $Char(13,10),"<th valign=bottom>Highest<br>Priority</th>"
 . . . . . Write $Char(13,10),"<th valign=bottom>Set New<br>Priority</th>"
 . . . . . Write $Char(13,10),"<th valign=bottom>Delete<br>This Entry</th></tr>"
 . . . . . Set a=1
 . . . . . Quit
 . . . . Set x=$Get(^TMP("MAG",token,"Queue",site,dst,n)) Quit:x=""
 . . . . Write $Char(13,10),"<tr><td valign=top align=left>",$Piece(x,"^",1),"</td>"
 . . . . Write $Char(13,10),"<td valign=top align=right>",$Piece(x,"^",3),"</td>"
 . . . . Write $Char(13,10),"<td valign=top align=right>",$Piece(x,"^",4),"</td>"
 . . . . Write $Char(13,10),"<td valign=top align=right>",$Piece(x,"^",5),"</td>"
 . . . . Set t=result_"_"_$Piece(x,"^",6)_"_"_$Piece(x,"^",7)
 . . . . Write $Char(13,10),"<td valign=top align=center><input type=text"
 . . . . Write " name=""NewPri_"_t_""" size=5></td>"
 . . . . Write $Char(13,10),"<td valign=top align=center><input type=checkbox"
 . . . . Write " name=""Delete_"_t_"""></td></tr>"
 . . . . Quit
 . . . Quit:'a
 . . . Write $Char(13,10),"</table>"
 . . . Write $Char(13,10),"<p><input type=submit value=""Update Queue Information""></p>"
 . . . Quit
 . . Quit
 . ; 
 . ;
 . Write $Char(13,10),"</form>"
 . Quit
 Quit
</csp:method>

<csp:method name=DropList arguments="name:%String,list:%String">
 New i
 Write $Char(13,10),"<select name=""",name,""">"
 Set i="" For  Set i=$Order(list(i)) Quit:i=""  Do
 . Set x=$Get(list(i)) Quit:x'["^"
 . Write $Char(13,10),"<option value=""",$Piece(x,"^",1),""""
 . Write:%request.Get(name)=$Piece(x,"^",1) " selected" Write ">"
 . Write $Piece(x,"^",2),"</option>"
 . Quit
 Write $Char(13,10),"</select>"
</csp:method>

<csp:method name=HTML arguments="in:%String" returntype=%String>
 New A,I,out
 Set out="" For I=1:1:$Length(in) D
 . Set A=$Ascii(in,I)
 . If $Char(A)="&" Set out=out_"&amp;" Quit
 . If $Char(A)="<" Set out=out_"&lt;" Quit
 . If $Char(A)=">" Set out=out_"&gt;" Quit
 . If A<31 Set out=out_"&#"_A_";" Quit
 . If A>126 Set out=out_"&#"_A_";" Quit
 . Set out=out_$Char(A)
 . Quit
 Quit out
</csp:method>

<csp:method name=LogInFrm arguments="app:%String,url:%String">
 ;Present Log In form
 ;
 ; app = name of application
 ; url = url to re-invoke application
 ;
 New any,var
 Write !,"<form action=""",url,""" method=""POST"">"
 Write !,"<input type=hidden name=""Application"" value=""",app,""">"
 ;
 Write !,"<h3>Access to this site is restricted."
 Write !,"If you wish to request access to this site,"
 Write !,"please send e-mail"
 Write !,"to <a href=""",$Get(^MAGDICOM(2006.563,1,"MAILGROUP")),""">our system manager</a>.</h3>"
 Write !,"<p>If you are a registered user, please login.</p>"
 ;
 Write !,"<table cellspacing=3 summary=""This table is for formatting purposes only."">"
 Write !,"<tr><td align=right><font size=+2>User Name:</font></td>"
 Write !,"<td align=left><input type=text name=""UserName""></td></tr>"
 Write !,"<tr><td align=right><font size=+2>Current Password:</font></td>"
 Write !,"<td align=left><input type=password name=""PassWord""></td></tr>"
 Write !,"<tr><td align=right><b>New Password:</b></td>"
 Write !,"<td align=left><input type=password name=""PassN1""></td></tr>"
 Write !,"<tr><td align=right><b>Verify New Password:</b></td>"
 Write !,"<td align=left><input type=password name=""PassN2""></td></tr>"
 Write !,"<tr><td>&nbsp;</td>"
 Write !,"<td><input type=submit value=""Login"" name=""LogIn""></td></tr>"
 Write !,"</table></form>"
 Quit
</csp:method>

<csp:method name=LogInVal arguments="App:%String,UserName:%String,PassWord:%String,New1:%String,New2:%String" returntype=%String>
 ; Authenticate username and password
 New d,id,lo,r1,r2,up
 ;
 Set r1="<h2><font color=#ff0000>",r2="</font></h2>"
 Set lo="abcdefghijklmnopqrstuvwxyz"
 Set up="ABCDEFGHIJKLMNOPQRSTUVWXYZ "
 Set UserName=$tr(UserName,up,lo)
 ;
 If UserName="",PassWord="" Do   Quit ""
 . Write !,r1,"Please enter a user name and/or a password.",r2
 . Quit
 ;
 If New1'=New2 Do   Quit ""
 . Write !,r1,"New Passwords do not match.",r2
 . Quit
 ;
 Set id="" Do  Quit:id="" ""
 . New ac,pp,ps,pv,pw,us,ve
 . Set ac=$Get(^MAGDICOM(2006.563,1,"LOGIN ACCESS"))
 . Set pv=$Get(^MAGDICOM(2006.563,1,"LOGIN PRINT/VIEW ONLY"))
 . Set pp=$Get(^MAGDICOM(2006.563,1,"LOGIN PROGRAMMER ACCESS"))
 . Set ps=$Get(^MAGDICOM(2006.563,1,"LOGIN SUPPORT"))
 . Set ve=$Get(^MAGDICOM(2006.563,1,"LOGIN VERIFY"))
 . Set pw=..Crypt(PassWord),us=..Crypt(UserName),New1=..Crypt(New1)
 . Do:pw=pp
 . . Set id="1_programmer"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN PROGRAMMER ACCESS")=New1
 . . Quit
 . Do:pw=ps
 . . Set id="2_support"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN SUPPORT")=New1
 . . Quit
 . Do:pw=pv
 . . Set id="3_viewonly"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN PRINZT/VIEW ONLY")=New1
 . . Quit
 . If us=ac,pw=ve Do
 . . Set id="4_fulluser"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN VERIFY")=New1
 . . Quit
 . Quit
 ;
 Quit id_"|"_..Now()_"|"_$Random(10000000)
</csp:method>

<csp:method name=Now arguments="" returntype=%String>
 New h
 Set h=$Horolog
 Quit $Piece(h,",",1)*86400+$Piece(h,",",2)
</csp:method>

<csp:method name=Crypt arguments="in:%String" returntype=%String>
 ; return an encrypted value for a string
 New I,S,X
 Set S=$Translate(in,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
 If $Length(S)<6 Quit ""
 If S?.E1P.E Quit ""
 If '((S?.E1A.E)&(S?.E1N.E)) Quit ""
 ; compute a weighted sum of characters, return last 10 digits of sqrt
 Set X=0 For I=1:1:$Length(S) Set X=$Ascii(S,I)+(128*X)
 Set X=X**.5,X=$Extract(X,$Length(X)-9,999)
 Quit X
</csp:method>

</body></html>
