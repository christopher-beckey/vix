MAGDIW3C ;WOIFO/PMK - Reconstruct a DICOM file from a .txt and a .tga file ; 12/20/2006 09:38
 ;;3.0;IMAGING;**10,51,54**;MAR 19, 2002;;OCT 28, 2009
 ;; Per VHA Directive 2004-038, this routine should not be modified.
 ;; +---------------------------------------------------------------+
 ;; | Property of the US Government.                                |
 ;; | No permission to copy or redistribute this software is given. |
 ;; | Use of unreleased versions of this software requires the user |
 ;; | to execute a written test agreement with the VistA Imaging    |
 ;; | Development Office of the Department of Veterans Affairs,     |
 ;; | telephone (301) 734-0100.                                     |
 ;; | The Food and Drug Administration classifies this software as  |
 ;; | a medical device.  As such, it may not be changed in any way. |
 ;; | Modifications to this software may result in an adulterated   |
 ;; | medical device under 21CFR820, the use of which is considered |
 ;; | to be a violation of US Federal Statutes.                     |
 ;; +---------------------------------------------------------------+
 ;;
 Q
 ;
ENTRY() ; called from ^MAGDIW2 and ^MAGDIX1
 N IPTR,NEWSEQ,OLDSEQ,SEQDELIM,SEQMARK,SEQNUMB,SEQUENCE,SS0
 K ^TMP("MAG",$J,"DICOM","TEMPLATE")
 D SEQINIT^MAGDFCNS
 S IPTR=0,OLDSEQ=""
 S SS0=""
 F  S SS0=$O(^TMP("MAG",$J,"DICOM","OUT",SS0)) Q:SS0=""  D ELEMENT
 I SEQUENCE'="" D  ; properly terminate the last sequence, if necessary
 . D SQE ; add the end of sequence element to the template
 . Q
 Q ""
 ;
ELEMENT ; process one element of the header
 N DICT,L,K,NAME,TAG,VR,X
 S L=$L(SS0,"^") S TAG=$P(SS0,"^",L),NEWSEQ=$P(SS0,"^",1,L-1)
 I $D(^TMP("MAG",$J,"DICOM","OUT",SS0))#2 D  ; get from temp file
 . S DICT=^TMP("MAG",$J,"DICOM","OUT",SS0)
 . S NAME=$P(DICT,"^",1),VR=$P(DICT,"^",2)
 . Q
 E  D  ; get from ELEMENT.DIC
 . S X=$O(^MAGDICOM(2006.51,"B",TAG,"")),X=^MAGDICOM(2006.51,X,0)
 . S NAME=$P(X,"^",2),VR=$P(X,"^",3)
 . Q
 ;
 ; handle sequences, if necessary
 I NEWSEQ'=OLDSEQ D  ; sequence changed
 . I $L(NEWSEQ)<$L(OLDSEQ) D  ; end of sequence
 . . ; add the end of sequence element to the template
 . . F K=1:1:($L(OLDSEQ,"^")-$S(NEWSEQ'="":$L(NEWSEQ,"^"),1:0)) D SQE
 . . Q
 . E  D  ; next sequence item in the same sequence
 . . D SEQEND ; close previous sequence item
 . . D SEQINC^MAGDFCNS ; increment the sequence counter
 . . D SEQBEGIN ; begin next sequence item
 . . Q
 . Q
 S OLDSEQ=NEWSEQ
 ;
 D TEMPLATE(TAG_"^"_NAME_"^2/2^^")
 ;
 I VR="SQ" D  ; start of a sequence
 . D SQ
 . S OLDSEQ=SEQUENCE
 . Q
 Q
 ;
TEMPLATE(Z) ; add items to the dynamically constructed template
 S IPTR=IPTR+1 ; increment the internal entry number IPTR
 S ^TMP("MAG",$J,"DICOM","TEMPLATE",IPTR,0)=Z
 Q
 ;
SQ ; Start of Sequence
 ; add the sequence starting element to the template
 D SEQPUSH
 D SEQPUSH^MAGDFCNS(TAG)
 D SEQBEGIN ; also add the start of sequence item to the template
 Q
 ;
SEQBEGIN ; add the start of sequence item to the template
 D TEMPLATE("FFFE,E000^Item Begin^1/1^^"),SEQPUSH
 Q
 ;
SQE ; End of Sequence
 D SEQEND ; add a "Sequence Item End" element to the template
 ; add a "Sequence End" element to the template
 D TEMPLATE("FFFE,E0DD^Sequence End^1/1^^"),SEQPOP
 D SEQPOP^MAGDFCNS
 Q
 ;
SEQEND ; add a "Sequence Item End" element to the template
 D TEMPLATE("FFFE,E00D^Sequence Item End^1/1^^"),SEQPOP
 Q
 ;
SEQPUSH ; save beginning of a sequence (item) delimiter on a push down stack
 S SEQDELIM=$G(SEQDELIM)+1,SEQMARK(SEQDELIM)=IPTR
 Q
 ;
SEQPOP ; get the beginning of a sequence (item) delimiter from push down stack
 ; and set the beginning and ending cross pointer in the template
 S SEQMARK=SEQMARK(SEQDELIM),SEQDELIM=SEQDELIM-1
 S $P(^TMP("MAG",$J,"DICOM","TEMPLATE",IPTR,0),"^",5)=SEQMARK
 S $P(^TMP("MAG",$J,"DICOM","TEMPLATE",SEQMARK,0),"^",5)=IPTR
 Q
 ;
