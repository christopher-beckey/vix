//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace VistA.Imaging.Services.SiteService.ImagingExchange
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImagingExchangeRegionTO", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class ImagingExchangeRegionTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string IDField;
        
        private System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> sitesField;
        
        private VistA.Imaging.Services.SiteService.ImagingExchange.FaultTO faultTOField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> sites {
            get {
                return this.sitesField;
            }
            set {
                if ((object.ReferenceEquals(this.sitesField, value) != true)) {
                    this.sitesField = value;
                    this.RaisePropertyChanged("sites");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.FaultTO faultTO {
            get {
                return this.faultTOField;
            }
            set {
                if ((object.ReferenceEquals(this.faultTOField, value) != true)) {
                    this.faultTOField = value;
                    this.RaisePropertyChanged("faultTO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultTO", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class FaultTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private string messageField;
        
        private string stackTraceField;
        
        private string suggestionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string stackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.stackTraceField, value) != true)) {
                    this.stackTraceField = value;
                    this.RaisePropertyChanged("stackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string suggestion {
            get {
                return this.suggestionField;
            }
            set {
                if ((object.ReferenceEquals(this.suggestionField, value) != true)) {
                    this.suggestionField = value;
                    this.RaisePropertyChanged("suggestion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImagingExchangeSiteTO", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class ImagingExchangeSiteTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string siteNumberField;
        
        private string siteNameField;
        
        private string regionIDField;
        
        private string siteAbbrField;
        
        private string vistaServerField;
        
        private int vistaPortField;
        
        private string acceleratorServerField;
        
        private int acceleratorPortField;
        
        private VistA.Imaging.Services.SiteService.ImagingExchange.FaultTO faultTOField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string siteNumber {
            get {
                return this.siteNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.siteNumberField, value) != true)) {
                    this.siteNumberField = value;
                    this.RaisePropertyChanged("siteNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string siteName {
            get {
                return this.siteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.siteNameField, value) != true)) {
                    this.siteNameField = value;
                    this.RaisePropertyChanged("siteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string regionID {
            get {
                return this.regionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.regionIDField, value) != true)) {
                    this.regionIDField = value;
                    this.RaisePropertyChanged("regionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string siteAbbr {
            get {
                return this.siteAbbrField;
            }
            set {
                if ((object.ReferenceEquals(this.siteAbbrField, value) != true)) {
                    this.siteAbbrField = value;
                    this.RaisePropertyChanged("siteAbbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string vistaServer {
            get {
                return this.vistaServerField;
            }
            set {
                if ((object.ReferenceEquals(this.vistaServerField, value) != true)) {
                    this.vistaServerField = value;
                    this.RaisePropertyChanged("vistaServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int vistaPort {
            get {
                return this.vistaPortField;
            }
            set {
                if ((this.vistaPortField.Equals(value) != true)) {
                    this.vistaPortField = value;
                    this.RaisePropertyChanged("vistaPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string acceleratorServer {
            get {
                return this.acceleratorServerField;
            }
            set {
                if ((object.ReferenceEquals(this.acceleratorServerField, value) != true)) {
                    this.acceleratorServerField = value;
                    this.RaisePropertyChanged("acceleratorServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int acceleratorPort {
            get {
                return this.acceleratorPortField;
            }
            set {
                if ((this.acceleratorPortField.Equals(value) != true)) {
                    this.acceleratorPortField = value;
                    this.RaisePropertyChanged("acceleratorPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.FaultTO faultTO {
            get {
                return this.faultTOField;
            }
            set {
                if ((object.ReferenceEquals(this.faultTOField, value) != true)) {
                    this.faultTOField = value;
                    this.RaisePropertyChanged("faultTO");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", ConfigurationName="Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap")]
    public interface ImagingExchangeSiteServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getVISN", ReplyAction="*")]
        System.IAsyncResult BegingetVISN(VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequest request, System.AsyncCallback callback, object asyncState);
        
        VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponse EndgetVISN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getSites", ReplyAction="*")]
        System.IAsyncResult BegingetSites(VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequest request, System.AsyncCallback callback, object asyncState);
        
        VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponse EndgetSites(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getSite", ReplyAction="*")]
        System.IAsyncResult BegingetSite(VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequest request, System.AsyncCallback callback, object asyncState);
        
        VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponse EndgetSite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService/getImagingExcha" +
            "ngeSites", ReplyAction="*")]
        System.IAsyncResult BegingetImagingExchangeSites(VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequest request, System.AsyncCallback callback, object asyncState);
        
        VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponse EndgetImagingExchangeSites(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getVISNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getVISN", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequestBody Body;
        
        public getVISNRequest() {
        }
        
        public getVISNRequest(VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getVISNRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string regionID;
        
        public getVISNRequestBody() {
        }
        
        public getVISNRequestBody(string regionID) {
            this.regionID = regionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getVISNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getVISNResponse", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponseBody Body;
        
        public getVISNResponse() {
        }
        
        public getVISNResponse(VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getVISNResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeRegionTO getVISNResult;
        
        public getVISNResponseBody() {
        }
        
        public getVISNResponseBody(VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeRegionTO getVISNResult) {
            this.getVISNResult = getVISNResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getSitesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getSites", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequestBody Body;
        
        public getSitesRequest() {
        }
        
        public getSitesRequest(VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getSitesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string siteIDs;
        
        public getSitesRequestBody() {
        }
        
        public getSitesRequestBody(string siteIDs) {
            this.siteIDs = siteIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getSitesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getSitesResponse", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponseBody Body;
        
        public getSitesResponse() {
        }
        
        public getSitesResponse(VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getSitesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> getSitesResult;
        
        public getSitesResponseBody() {
        }
        
        public getSitesResponseBody(System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> getSitesResult) {
            this.getSitesResult = getSitesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getSiteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getSite", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequestBody Body;
        
        public getSiteRequest() {
        }
        
        public getSiteRequest(VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getSiteRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string siteID;
        
        public getSiteRequestBody() {
        }
        
        public getSiteRequestBody(string siteID) {
            this.siteID = siteID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getSiteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getSiteResponse", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponseBody Body;
        
        public getSiteResponse() {
        }
        
        public getSiteResponse(VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getSiteResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO getSiteResult;
        
        public getSiteResponseBody() {
        }
        
        public getSiteResponseBody(VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO getSiteResult) {
            this.getSiteResult = getSiteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getImagingExchangeSitesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getImagingExchangeSites", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequestBody Body;
        
        public getImagingExchangeSitesRequest() {
        }
        
        public getImagingExchangeSitesRequest(VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class getImagingExchangeSitesRequestBody {
        
        public getImagingExchangeSitesRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getImagingExchangeSitesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getImagingExchangeSitesResponse", Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService", Order=0)]
        public VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponseBody Body;
        
        public getImagingExchangeSitesResponse() {
        }
        
        public getImagingExchangeSitesResponse(VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://vistaweb.med.va.gov/webservices/ImagingExchangeSiteService")]
    public partial class getImagingExchangeSitesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> getImagingExchangeSitesResult;
        
        public getImagingExchangeSitesResponseBody() {
        }
        
        public getImagingExchangeSitesResponseBody(System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> getImagingExchangeSitesResult) {
            this.getImagingExchangeSitesResult = getImagingExchangeSitesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ImagingExchangeSiteServiceSoapChannel : VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getVISNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getVISNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeRegionTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeRegionTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getImagingExchangeSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getImagingExchangeSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImagingExchangeSiteServiceSoapClient : System.ServiceModel.ClientBase<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap>, VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap {
        
        private BeginOperationDelegate onBegingetVISNDelegate;
        
        private EndOperationDelegate onEndgetVISNDelegate;
        
        private System.Threading.SendOrPostCallback ongetVISNCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSitesDelegate;
        
        private EndOperationDelegate onEndgetSitesDelegate;
        
        private System.Threading.SendOrPostCallback ongetSitesCompletedDelegate;
        
        private BeginOperationDelegate onBegingetSiteDelegate;
        
        private EndOperationDelegate onEndgetSiteDelegate;
        
        private System.Threading.SendOrPostCallback ongetSiteCompletedDelegate;
        
        private BeginOperationDelegate onBegingetImagingExchangeSitesDelegate;
        
        private EndOperationDelegate onEndgetImagingExchangeSitesDelegate;
        
        private System.Threading.SendOrPostCallback ongetImagingExchangeSitesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ImagingExchangeSiteServiceSoapClient() {
        }
        
        public ImagingExchangeSiteServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImagingExchangeSiteServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingExchangeSiteServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImagingExchangeSiteServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getVISNCompletedEventArgs> getVISNCompleted;
        
        public event System.EventHandler<getSitesCompletedEventArgs> getSitesCompleted;
        
        public event System.EventHandler<getSiteCompletedEventArgs> getSiteCompleted;
        
        public event System.EventHandler<getImagingExchangeSitesCompletedEventArgs> getImagingExchangeSitesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.BegingetVISN(VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetVISN(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetVISN(string regionID, System.AsyncCallback callback, object asyncState) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequest inValue = new VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequest();
            inValue.Body = new VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequestBody();
            inValue.Body.regionID = regionID;
            return ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).BegingetVISN(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponse VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.EndgetVISN(System.IAsyncResult result) {
            return base.Channel.EndgetVISN(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeRegionTO EndgetVISN(System.IAsyncResult result) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponse retVal = ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).EndgetVISN(result);
            return retVal.Body.getVISNResult;
        }
        
        private System.IAsyncResult OnBegingetVISN(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string regionID = ((string)(inValues[0]));
            return this.BegingetVISN(regionID, callback, asyncState);
        }
        
        private object[] OnEndgetVISN(System.IAsyncResult result) {
            VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeRegionTO retVal = this.EndgetVISN(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetVISNCompleted(object state) {
            if ((this.getVISNCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getVISNCompleted(this, new getVISNCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getVISNAsync(string regionID) {
            this.getVISNAsync(regionID, null);
        }
        
        public void getVISNAsync(string regionID, object userState) {
            if ((this.onBegingetVISNDelegate == null)) {
                this.onBegingetVISNDelegate = new BeginOperationDelegate(this.OnBegingetVISN);
            }
            if ((this.onEndgetVISNDelegate == null)) {
                this.onEndgetVISNDelegate = new EndOperationDelegate(this.OnEndgetVISN);
            }
            if ((this.ongetVISNCompletedDelegate == null)) {
                this.ongetVISNCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetVISNCompleted);
            }
            base.InvokeAsync(this.onBegingetVISNDelegate, new object[] {
                        regionID}, this.onEndgetVISNDelegate, this.ongetVISNCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.BegingetSites(VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSites(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetSites(string siteIDs, System.AsyncCallback callback, object asyncState) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequest inValue = new VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequest();
            inValue.Body = new VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequestBody();
            inValue.Body.siteIDs = siteIDs;
            return ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).BegingetSites(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponse VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.EndgetSites(System.IAsyncResult result) {
            return base.Channel.EndgetSites(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> EndgetSites(System.IAsyncResult result) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponse retVal = ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).EndgetSites(result);
            return retVal.Body.getSitesResult;
        }
        
        private System.IAsyncResult OnBegingetSites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string siteIDs = ((string)(inValues[0]));
            return this.BegingetSites(siteIDs, callback, asyncState);
        }
        
        private object[] OnEndgetSites(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> retVal = this.EndgetSites(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSitesCompleted(object state) {
            if ((this.getSitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSitesCompleted(this, new getSitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSitesAsync(string siteIDs) {
            this.getSitesAsync(siteIDs, null);
        }
        
        public void getSitesAsync(string siteIDs, object userState) {
            if ((this.onBegingetSitesDelegate == null)) {
                this.onBegingetSitesDelegate = new BeginOperationDelegate(this.OnBegingetSites);
            }
            if ((this.onEndgetSitesDelegate == null)) {
                this.onEndgetSitesDelegate = new EndOperationDelegate(this.OnEndgetSites);
            }
            if ((this.ongetSitesCompletedDelegate == null)) {
                this.ongetSitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSitesCompleted);
            }
            base.InvokeAsync(this.onBegingetSitesDelegate, new object[] {
                        siteIDs}, this.onEndgetSitesDelegate, this.ongetSitesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.BegingetSite(VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetSite(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetSite(string siteID, System.AsyncCallback callback, object asyncState) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequest inValue = new VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequest();
            inValue.Body = new VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequestBody();
            inValue.Body.siteID = siteID;
            return ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).BegingetSite(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponse VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.EndgetSite(System.IAsyncResult result) {
            return base.Channel.EndgetSite(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO EndgetSite(System.IAsyncResult result) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponse retVal = ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).EndgetSite(result);
            return retVal.Body.getSiteResult;
        }
        
        private System.IAsyncResult OnBegingetSite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string siteID = ((string)(inValues[0]));
            return this.BegingetSite(siteID, callback, asyncState);
        }
        
        private object[] OnEndgetSite(System.IAsyncResult result) {
            VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO retVal = this.EndgetSite(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetSiteCompleted(object state) {
            if ((this.getSiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getSiteCompleted(this, new getSiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getSiteAsync(string siteID) {
            this.getSiteAsync(siteID, null);
        }
        
        public void getSiteAsync(string siteID, object userState) {
            if ((this.onBegingetSiteDelegate == null)) {
                this.onBegingetSiteDelegate = new BeginOperationDelegate(this.OnBegingetSite);
            }
            if ((this.onEndgetSiteDelegate == null)) {
                this.onEndgetSiteDelegate = new EndOperationDelegate(this.OnEndgetSite);
            }
            if ((this.ongetSiteCompletedDelegate == null)) {
                this.ongetSiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetSiteCompleted);
            }
            base.InvokeAsync(this.onBegingetSiteDelegate, new object[] {
                        siteID}, this.onEndgetSiteDelegate, this.ongetSiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.BegingetImagingExchangeSites(VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetImagingExchangeSites(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BegingetImagingExchangeSites(System.AsyncCallback callback, object asyncState) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequest inValue = new VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequest();
            inValue.Body = new VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequestBody();
            return ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).BegingetImagingExchangeSites(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponse VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap.EndgetImagingExchangeSites(System.IAsyncResult result) {
            return base.Channel.EndgetImagingExchangeSites(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> EndgetImagingExchangeSites(System.IAsyncResult result) {
            VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponse retVal = ((VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap)(this)).EndgetImagingExchangeSites(result);
            return retVal.Body.getImagingExchangeSitesResult;
        }
        
        private System.IAsyncResult OnBegingetImagingExchangeSites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegingetImagingExchangeSites(callback, asyncState);
        }
        
        private object[] OnEndgetImagingExchangeSites(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteTO> retVal = this.EndgetImagingExchangeSites(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetImagingExchangeSitesCompleted(object state) {
            if ((this.getImagingExchangeSitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getImagingExchangeSitesCompleted(this, new getImagingExchangeSitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getImagingExchangeSitesAsync() {
            this.getImagingExchangeSitesAsync(null);
        }
        
        public void getImagingExchangeSitesAsync(object userState) {
            if ((this.onBegingetImagingExchangeSitesDelegate == null)) {
                this.onBegingetImagingExchangeSitesDelegate = new BeginOperationDelegate(this.OnBegingetImagingExchangeSites);
            }
            if ((this.onEndgetImagingExchangeSitesDelegate == null)) {
                this.onEndgetImagingExchangeSitesDelegate = new EndOperationDelegate(this.OnEndgetImagingExchangeSites);
            }
            if ((this.ongetImagingExchangeSitesCompletedDelegate == null)) {
                this.ongetImagingExchangeSitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetImagingExchangeSitesCompleted);
            }
            base.InvokeAsync(this.onBegingetImagingExchangeSitesDelegate, null, this.onEndgetImagingExchangeSitesDelegate, this.ongetImagingExchangeSitesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap CreateChannel() {
            return new ImagingExchangeSiteServiceSoapClientChannel(this);
        }
        
        private class ImagingExchangeSiteServiceSoapClientChannel : ChannelBase<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap>, VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap {
            
            public ImagingExchangeSiteServiceSoapClientChannel(System.ServiceModel.ClientBase<VistA.Imaging.Services.SiteService.ImagingExchange.ImagingExchangeSiteServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetVISN(VistA.Imaging.Services.SiteService.ImagingExchange.getVISNRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getVISN", _args, callback, asyncState);
                return _result;
            }
            
            public VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponse EndgetVISN(System.IAsyncResult result) {
                object[] _args = new object[0];
                VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponse _result = ((VistA.Imaging.Services.SiteService.ImagingExchange.getVISNResponse)(base.EndInvoke("getVISN", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetSites(VistA.Imaging.Services.SiteService.ImagingExchange.getSitesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getSites", _args, callback, asyncState);
                return _result;
            }
            
            public VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponse EndgetSites(System.IAsyncResult result) {
                object[] _args = new object[0];
                VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponse _result = ((VistA.Imaging.Services.SiteService.ImagingExchange.getSitesResponse)(base.EndInvoke("getSites", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetSite(VistA.Imaging.Services.SiteService.ImagingExchange.getSiteRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getSite", _args, callback, asyncState);
                return _result;
            }
            
            public VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponse EndgetSite(System.IAsyncResult result) {
                object[] _args = new object[0];
                VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponse _result = ((VistA.Imaging.Services.SiteService.ImagingExchange.getSiteResponse)(base.EndInvoke("getSite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetImagingExchangeSites(VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("getImagingExchangeSites", _args, callback, asyncState);
                return _result;
            }
            
            public VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponse EndgetImagingExchangeSites(System.IAsyncResult result) {
                object[] _args = new object[0];
                VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponse _result = ((VistA.Imaging.Services.SiteService.ImagingExchange.getImagingExchangeSitesResponse)(base.EndInvoke("getImagingExchangeSites", _args, result)));
                return _result;
            }
        }
    }
}
