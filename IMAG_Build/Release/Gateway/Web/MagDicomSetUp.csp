<html><head><title>VistA Imaging DICOM Gateway Set-Up</title>
<!--
 ;; +---------------------------------------------------------------+
 ;; | Property of the US Government.                                |
 ;; | No permission to copy or redistribute this software is given. |
 ;; | Use of unreleased versions of this software requires the user |
 ;; | to execute a written test agreement with the VistA Imaging    |
 ;; | Development Office of the Department of Veterans Affairs,     |
 ;; | telephone (301) 734-0100.                                     |
 ;; |                                                               |
 ;; | The Food and Drug Administration classifies this software as  |
 ;; | a medical device.  As such, it may not be changed in any way. |
 ;; | Modifications to this software may result in an adulterated   |
 ;; | medical device under 21CFR820, the use of which is considered |
 ;; | to be a violation of US Federal Statutes.                     |
 ;; +---------------------------------------------------------------+
-->
<meta http-equiv=Content-Type content="text/html; charset=iso-8859-1">
</head>
<body background="vabkg.jpg">
<csp:method name=OnPreHTTP arguments="" returntype=%Boolean>
 Do %response.SetHeader("Expires","")
 Do %response.SetHeader("Cache-Control","none")
 Quit 1
</csp:method>
<table cellSpacing=0 cellPadding=0 border=0 summary="This table is for formatting purposes only.">
  <tr>
    <td vAlign=top><img alt="First part of VistA Imaging Logo" src="MAGLogo1.gif" border=0></td>
    <td vAlign=top><img alt="Second part of Vista Imaging Logo" src="MAGLogo2.gif"><br>
      <h2><font color=#0033ff>VistA Imaging DICOM Gateway Set-Up</font></h2></td>
  </tr>
</table>

<script language=CACHE runat=server>
 Do ..Process()
</script>
 
</body>

<csp:method name=Process arguments="">
 New Err,M2MOK,VALLOC,WebPage
 ;
 Set token="" Do
 . New cmd,from,ip,util,x
 . Set WebPage=$IO
 . Set cmd="ipconfig",ip("127.0.0.1")=1
 . Open cmd:"QR" Use cmd Set util=$ZUtil(68,40,1)
 . For  Read x Quit:$ZEOF  Do
 . . Quit:x'["IP Address. ."
 . . Set x=$Extract(x,38,$Length(x))
 . . Set:x'="" ip(x)=1
 . . Quit
 . Set x=$ZUtil(68,40,util)
 . Close cmd Use WebPage
 . ;
 . Set id=""
 . Set from=%request.GetCgiEnv("REMOTE_HOST")
 . If from'="",$Get(ip(from)) Set id=from
 . Quit:id=""
 . Set token=id_"|"_..Now()_"|"_$Random(10000000)
 . Set ^MAGtoken(token)=5*60+..Now()
 . Quit
 ;
 Set:id="" token=%request.Get("SessionToken")
 Do:token'=""
 . New exp
 . Set exp=$Get(^MAGtoken(token))
 . If 'exp Set token="" Quit
 . If exp<..Now() Set token="" Quit
 . ; Extend expiration of token by 15 minutes
 . Set ^MAGtoken(token)=15*60+..Now()
 . Quit
 Do:token=""
 . New N1,N2,Pass,User
 . Set User=%request.Get("UserName")
 . Set Pass=%request.Get("PassWord")
 . Set N1=%request.Get("PassN1")
 . Set N2=%request.Get("PassN2")
 . Set:User_Pass_N1_N2'="" token=..LogInVal("DICOMGateway",User,Pass,N1,N2)
 . If token="" Do  Quit
 . . Do ..LogInFrm("DICOMGateway","MAGDSET2.csp")
 . . Quit
 . ; Initial token lives 5 minutes
 . Set ^MAGtoken(token)=5*60+..Now()
 . Set ^MAGtoken(token,"DICOMGateway")=1
 . Quit
 Do:token'=""
 . Do  ; Set up credentials to use MUMPS-to-MUMPS Broker
 . . N A,V,X
 . . Kill ^TMP("MAG",$Job)
 . . Set ^TMP("MAG",$Job,"DICOM MENU OPTION")=0
 . . Set ^TMP("MAG",$Job,"DICOM MENU VIEW ONLY")=0
 . . S A=$G(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND ACCESS"))
 . . S V=$G(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND VERIFY"))
 . . S X=$$DECRYP^MAGM2VCU(A)_";"_$$DECRYP^MAGM2VCU(V)
 . . S ^TMP("MAG",$Job,"DICOM RPC USER")="666^1^"_$$ENCRYPT^MAGM2VCU(X)
 . . Q
 . ;
 . Set M2MOK=1,WebPage=$IO
 . Do
 . . New DOMAIN
 . . If '$$ISCONT^MAGM2VCU() Do  Quit:'M2MOK
 . . . Set X=$$RECONCT^MAGDMENA() Quit:X
 . . . Write $Char(13,10),"<h3><font color=#ff0000>"
 . . . Write "Cannot connect to VistA at this time"
 . . . Write " - update capabilities limited.</font></h3>",$Char(13,10)
 . . . Write "<p>",..HTML($P(X,",",2,$L(X)+2)),"</p>"
 . . . Set M2MOK=0
 . . . Quit
 . . If $$CALLRPC^MAGM2VCU("MAG DICOM VALID LOCATIONS","M",.VALLOC)<0 Set M2MOK=0
 . . Else  If $$CALLRPC^MAGM2VCU("MAG DICOM GET DOMAIN","M",.DOMAIN)<0 Set M2MOK=0
 . . If $Get(DOMAIN)'="" Set ^MAGDICOM(2006.563,1,"DOMAIN")=DOMAIN
 . . Quit
 . ;
 . Use WebPage
 . ;
 . Do
 . . New Any,I
 . . Set Any=0 For I=1:1:27 Do
 . . . Set:%request.Get("Q"_I)'="" Any=1
 . . . Set:%request.Get("Q"_I_"a")'="" Any=1
 . . . Set:%request.Get("Q"_I_"b")'="" Any=1
 . . . Quit
 . . Quit:'Any
 . . Do ..Answer01()
 . . Do ..Answer02()
 . . Do ..Answer03()
 . . Do ..Answer04()
 . . Do ..Answer05()
 . . Do ..Answer06()
 . . Do ..Answer07()
 . . Do ..Answer08()
 . . Do ..Answer09()
 . . Do ..Answer10()
 . . Do ..Answer11()
 . . Do ..Answer12()
 . . Do ..Answer13()
 . . Do ..Answer14()
 . . Do ..Answer15()
 . . Do ..Answer16()
 . . Do ..Answer17()
 . . Do ..Answer18()
 . . Do ..Answer19()
 . . ;; Do ..Answer20() ; Question 20 was removed
 . . Do ..Answer21()
 . . Do ..Answer22()
 . . Do ..Answer23()
 . . Do ..Answer24()
 . . Do ..Answer29() ; -- Note: not in numeric sequence
 . . Do ..Answer25()
 . . Do ..Answer26()
 . . Do ..Answer27()
 . . Do ..Answer28()
 . . Do ..Answer30()
 . . Quit
 . ;
 . Write $Char(13,10),"<form action=""MagDicomSetUp.csp"" method=""POST"">"
 . ;
 . Do ..Question01()
 . Do ..Question02()
 . Do ..Question03()
 . Do ..Question04()
 . Do ..Question05()
 . Do ..Question06()
 . Do ..Question07()
 . Do ..Question08()
 . Do ..Question09()
 . Do ..Question10()
 . Do ..Question11()
 . Do ..Question12()
 . Do ..Question13()
 . Do ..Question14() ; Doesn't really exist...
 . Do ..Question15()
 . Do ..Question16()
 . Do ..Question17()
 . Do ..Question18()
 . Do ..Question19()
 . ;; Do ..Question20() ; Question 20 was removed
 . Do ..Question21()
 . Do ..Question22()
 . Do ..Question23()
 . Do ..Question24()
 . Do ..Question29() ; -- Note: not in numeric sequence
 . Do ..Question25()
 . Do ..Question26()
 . Do ..Question27()
 . Do ..Question28()
 . Do ..Question30()
 . ;
 . ; The following parameters must be set "by hand":
 . ;
 . ;; Set CONSOLID=$G(X("CONSOLIDATED")) Set:CONSOLID="" CONSOLID="NO"
 . ;; Set PORTCSTO=+$G(X("CSTORE CONTROL PORT")) Set:'PORTCSTO PORTCSTO=60000
 . ;; Set PORTWLST=+$G(X("WORKLIST PORT")) Set:'PORTWLST PORTWLST=60010
 . ;
 . Write $Char(13,10),"</form>"
 . Quit
 Quit
</csp:method>

<csp:method name=Question01 arguments="">
 Write "<h3>System title</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q01"" size=50 "
 Write "value="""_$Get(^MAGDICOM(2006.563,1,"SYSTEM TITLE"))_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "The system title is a short character string that appears "
 Write "on the top of the main DICOM application menu.<br>",$Char(13,10)
 Write "The system title may not contain caret (^) or vertical bar (|).<br>",$Char(13,10)
 Write "Examples:<br>",$Char(13,10)
 Write "&nbsp;&nbsp;&nbsp;""DICOM Image Server System #3""<br>",$Char(13,10)
 Write "&nbsp;&nbsp;&nbsp;""DICOM Text Gateway and Background Processor""</p>",$Char(13,10)
 Quit:$Get(Err(1))=""
 Write $Char(13,10),"<p><font color=#ff0000><b>",..HTML(Err(1)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer01 arguments="">
 New NEW,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"SYSTEM TITLE"))
 Set NEW=%request.Get("Q01")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set:NEW["?" OK=0
 Set:NEW["^" OK=0
 Set:NEW["|" OK=0
 If 'OK Set Err(1)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"SYSTEM TITLE")=NEW
 Quit
</csp:method>

<csp:method name=Question02 arguments="">
 New CUR,LOC,N,OLD
 SET OLD=$Get(^MAGDICOM(2006.563,1,"LOCATION"))
 Write "<h3>Location</h3>",$Char(13,10)
 Set N=0,LOC="" For  Set LOC=$Order(VALLOC(LOC)) Quit:LOC=""  Do
 . Quit:VALLOC(LOC)'["^"
 . Set N=N+1 Quit:N'=1
 . Set CUR=..HTML($Piece(VALLOC(LOC),"^",2))
 . Set CUR=CUR_"(# "_$Piece(VALLOC(LOC),"^",1)_")"
 . Quit
 If N<1 D  Quit
 . Write "<p><font colof=#ff0000><b>No valid locations defined for "
 . Write "this DICOM Gateway. Please first set up the Imaging Site "
 . Write "Parameters on VistA.</b></p>",$Char(13,10)
 . Quit
 If N=1 D  Quit
 . Write "<p>This Gateway is located at ",CUR,".</p>",$Char(13,10)
 . Quit
 Write "<p><select name=""Q01"">"
 Set LOC="" For  Set LOC=$Order(VALLOC(LOC)) Quit:LOC=""  Do
 . Quit:VALLOC(LOC)'["^"
 . Set CUR=$Piece(VALLOC(LOC),"^",1)
 . Write "<option value=""",CUR,"""" Write:CUR=OLD " selected"
 . Write ">",..HTML($Piece(VALLOC(LOC),"^",2)),"</option>",$Char(13,10)
 . Quit
 Write "</select><br>",$Char(13,10)
 Write "Indicate at which institution this computer is located.<br>",$Char(13,10)
 Write "VistA DICOM Gateways may be located in different institutions "
 Write "that belong to one consolidated healthcare network.<br>",$Char(13,10)
 Write "Select the name of the institution where this computer is located.</p>"
 If 'M2MOK Do  Quit
 . Write $Char(13,10),"<p><font color=#ff0000>Not currently connected to VistA."
 . Write " Cannot set up Location of Gateway.</font></p>",$Char(13,10)
 . Quit
</csp:method>

<csp:method name=Answer02 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"LOCATION"))
 Set NEW=%request.Get("Q02")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"LOCATION")=NEW
 Set LOC="" For  Set LOC=$Order(VALLOC(LOC)) Quit:LOC=""  Do
 . Quit:VALLOC(LOC)'["^"
 . Quit:$Piece(VALLOC(LOC),"^",1)'=NEW
 . Set ^MAGDICOM(2006.563,1,"LOCATION NAME")=$Piece(VALLOC(LOC),"^",2)
 . Quit
 Quit
</csp:method>

<csp:method name=Question03 arguments="">
 New X
 Set X=$Extract($Get(^MAGDICOM(2006.563,1,"DATA PATH",1,0)),1) Set:X="" X="C"
 Write "<h3>Text Data Disk Drive</h3>",$Char(13,10)
 Write "<p>" Do ..Drives("Q03",X)
 Write "<br>",$Char(13,10)
 Write "The DICOM text directory is usually on the local system, "
 Write "and is used to hold the DICOM text files.<br>",$Char(13,10)
 Write "C:\DICOM (or D:\DICOM) is typically the DICOM text directory.<br>"
 Write "You may select another device letter (C:-Z:), however.</p>",$Char(13,10)
 Quit:$Get(Err(3))=""
 Write $Char(13,10),"<p><font color=#ff0000><b>",..HTML(Err(3)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer03 arguments="">
 New D1,I,NEW,OLD,OK
 Set OLD=$Extract($Get(^MAGDICOM(2006.563,1,"DATA PATH",1,0)),1)
 Set NEW=%request.Get("Q03")
 Set NEW=$TRanslate(NEW,"abcdefghijklmnopqrstuvwxyz:","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=0
 SET:NEW?1U OK=1 SET:"AB"[NEW OK=0
 If 'OK Set Err(3)=NEW Quit
 ;
 Set (I,D1)=0
 For  Set D1=$Order(^MAGDICOM(2006.563,1,"DATA PATH",D1)) Quit:'D1  Do
 . Set I=I+1
 . Set ^MAGDICOM(2006.563,1,"DATA PATH",D1,0)=NEW_":\DICOM\DATA"_I
 . Quit
 Quit
</csp:method>

<csp:method name=Question04 arguments="">
 New X
 Set X=$Extract($Get(^MAGDICOM(2006.563,1,"IMAGE INPUT PATH")),1) Set:X="" X="C"
 Write "<h3>Image Data Disk Drive</h3>",$Char(13,10)
 Write "<p>" Do ..Drives("Q04",X)
 Write "<br>",$Char(13,10)
 Write "The DICOM image directory is usually on the local system, "
 Write "and is used to hold the DICOM text files.<br>",$Char(13,10)
 Write "C:\DICOM (or D:\DICOM) is typically the DICOM text directory.<br>"
 Write "You may select another device letter (C:-Z:), however.</p>"
 Quit:$Get(Err(4))=""
 Write $Char(13,10),"<p><font color=#ff0000><b>",..HTML(Err(4)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer04 arguments="">
 New NEW,OLD,OK
 Set OLD=$Extract($Get(^MAGDICOM(2006.563,1,"IMAGE INPUT PATH")),1)
 Set NEW=%request.Get("Q04")
 Set NEW=$TRanslate(NEW,"abcdefghijklmnopqrstuvwxyz:","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=0
 SET:NEW?1U OK=1 SET:"AB"[NEW OK=0
 If 'OK Set Err(4)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"IMAGE INPUT PATH")=NEW_":\DICOM\IMAGE_IN"
 Quit
</csp:method>

<csp:method name=Question05 arguments="">
 New X
 Set X=+$Get(^MAGDICOM(2006.563,1,"FREE DISK SPACE"))
 Set:'X X=15 Set X=X_"%"
 Write "<h3>Percentage Free Space</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q05"" size=10 "
 Write "value="""_X_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Storage of image files should not be allowed when there "
 Write "is not enough free disk space left to allow for proper "
 Write "processing of these files.<br>",$Char(13,10)
 Write "A typical percentage of free space to require is 15%.</p>",$Char(13,10)
 Quit:$Get(Err(5))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(5)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer05 arguments="">
 New NEW,OLD,OK
 Set OLD=+$Get(^MAGDICOM(2006.563,1,"FREE DISK SPACE"))
 Set NEW=$Translate(%request.Get("Q05")," %")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set:+NEW'=NEW OK=0
 Set:NEW<2 OK=0
 Set:NEW>95 OK=0
 If 'OK Set Err(5)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"FREE DISK SPACE")=NEW
 Quit
</csp:method>

<csp:method name=Question06 arguments="">
 New X
 Set X=$Extract($Get(^MAGDICOM(2006.563,1,"DICT PATH")),1) Set:X="" X="C"
 Write "<h3>Dictionary Data Disk Drive</h3>",$Char(13,10)
 Write "<p>" Do ..Drives("Q06",X)
 Write "<br>",$Char(13,10)
 Write "The DICOM dictionary directory is usually on the a networked disk. "
 Write "F:\DICOM is typically the DICOM dictionary directory.<br>"
 Write "You may select another device letter (C:-Z:), however.</p>",$Char(13,10)
 Quit:$Get(Err(6))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(6)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer06 arguments="">
 New NEW,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"DICT PATH"))
 Set NEW=%request.Get("Q06")
 Set NEW=$TRanslate(NEW,"abcdefghijklmnopqrstuvwxyz:","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=0
 SET:NEW?1U OK=1 SET:"AB"[NEW OK=0
 If 'OK Set Err(6)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"DICT PATH")=NEW_":\DICOM\DICT"
 Quit
</csp:method>

<csp:method name=Question07 arguments="">
 New D1,N,X
 Set X=$Extract($Get(^MAGDICOM(2006.563,1,"DATA PATH",1,0)),1)
 Set (D1,N)=0
 For  Set D1=$Order(^MAGDICOM(2006.563,1,"DATA PATH",D1)) Quit:'D1  Set N=N+1
 Write "<h3>Number of Data Channels</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q07"" size=5 "
 Write "value="""_N_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Communication channels are used to broadcast VistA event data.<br>",$Char(13,10)
 Write "A separate channel is needed for each different destination.<br>",$Char(13,10)
 Write "For instance, event data may be sent to both a commercial PACS "
 Write "and to one or more Modality Worklist service class providers. "
 Write "Each destination must have its own event channel <N> and a "
 Write "dedicated ",X,":\dicom\data<N> subdirectory.<br>",$Char(13,10)
 Write "The number of communication channels must be between 1 and 9.</p>",$Char(13,10)
 Quit:$Get(Err(7))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(7)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer07 arguments="">
 New D1,NEW,OLD,OK,X
 Set OLD=$Get(^MAGDICOM(2006.563,1,"xxx"))
 Set NEW=%request.Get("Q07")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set NEW=$Translate(%request.Get("Q05")," %")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set:+NEW'=NEW OK=0
 Set:NEW<1 OK=0
 Set:NEW>10 OK=0
 If 'OK Set Err(7)=NEW Quit
 Set X=$Get(^MAGDICOM(2006.561,1,"DATA PATH",1,0))
 Set:X="" X="C"
 For D1=1:1:NEW Do
 . Set ^MAGDICOM(2006.563,1,"DATA PATH",D1,0)=X_":\DICOM\DATA"_D1
 . Quit
 Set D1=NEW
 For  Set D1=$Order(^MAGDICOM(2006.563,1,"DATA PATH",D1)) Quit:'D1  Do
 . Kill ^MAGDICOM(2006.563,1,"DATA PATH",D1)
 . Quit
 Set ^MAGDICOM(2006.563,1,"DATA PATH",0)="^2006.5631^"_D1_"^"_D1
 Quit
</csp:method>

<csp:method name=Question08 arguments="">
 Write "<h3>Machine ID (1 letter)</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q08"" size=5 "
 Write "value="""_$Get(^MAGDICOM(2006.563,1,"MACHINE ID"))_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Each DICOM machine needs a single unique identification letter. "
 Write "Use ""A"" for the first, ""B"" for the second, ""C"" for the "
 Write "third, etc.<br>",$Char(13,10)
 Write "The names of the DICOM image files acquired by this system "
 Write "will begin with the letter specified for this parameter.</p>",$Char(13,10)
 Quit:$Get(Err(8))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(8)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer08 arguments="">
 New NEW,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"MACHINE ID"))
 Set NEW=%request.Get("Q08")
 Set NEW=$TRanslate(NEW,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set:NEW'?1U OK=0
 If 'OK Set Err(8)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"MACHINE ID")=NEW
 Quit
</csp:method>

<!--
 . . N CHK,ERR,HOST,T
 . . Set MACHID=X,OK=1
 . . Set ERR="Cannot check on VistA that ID is unique at this time."
 . . If 'M2MOK Write !!,ERR,! Quit
 . . Set X=$$HOSTCMD^MAGOSMSC("hostname",.T)
 . . Set HOST="",T=0 For  Set T=$O(T(T)) Quit:T=""  Set:T(T)'="" HOST=T(T)
 . . Set X=$$CALLRPC^MAGM2VCU("MAG DICOM CHECK MACHINE ID","M",.CHK,MACHID,HOST)
 . . If X<0 Write !!,ERR,! Quit
 . . Quit:CHK=1
 . . Write !!,"Warning reported by VistA:",!,CHK,!
 . . Quit
-->

<csp:method name=Question09 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"IMAGE GATEWAY"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Image Gateway</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q09"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "settings will be enabled that allow this system to be used "
 Write "as an image gateway.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that it will not be possible to use"
 Write "this system as an image gateway.<br>",$Char(13,10)
 Write "A system can be configured to be a text gateway as well as "
 Write "an image gateway.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer09 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"IMAGE GATEWAY"))
 Set NEW=%request.Get("Q09")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"IMAGE GATEWAY")=NEW
 Quit
</csp:method>

<csp:method name=Question10 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"IMAGE GATEWAY"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Text Gateway</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q10"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "settings will be enabled that allow this system to be used "
 Write "as an text gateway.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that it will not be possible to use "
 Write "this system as an text gateway.<br>",$Char(13,10)
 Write "A system can be configured to be a text gateway as well as "
 Write "an image gateway.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer10 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"TEXT GATEWAY"))
 Set NEW=%request.Get("Q10")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"TEXT GATEWAY")=NEW
 Quit
</csp:method>

<csp:method name=Question11 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"ROUTING PROCESSOR"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Routing Processor</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q11"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "settings will be enabled that allow this system to be used "
 Write "as an Routing Processor.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that it will not be possible to use "
 Write "this system as an Routing Processor.<br>",$Char(13,10)
 Write "A system can be configured to be a routing processor "
 Write "as well as a text gateway or an image gateway.<br>",$Char(13,10)
 Write "Only check this box when 'auto-routing' is active.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer11 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"ROUTING PROCESSOR"))
 Set NEW=%request.Get("Q11")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"ROUTING PROCESSOR")=NEW
 Quit
</csp:method>

<csp:method name=Question12 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"ROUTING RULES"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Evaluate Routing Rules</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q12"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "queue entries will be generated for the evaluation of routing "
 Write "rules when images are acquired.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that no such entries "
 Write "will be generated.<br>",$Char(13,10)
 Write "Only check this box when 'auto-routing' is active.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer12 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"ROUTING RULES"))
 Set NEW=%request.Get("Q12")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"ROUTING RULES")=NEW
 Quit
</csp:method>

<csp:method name=Question13 arguments="">
 New P,X
 Set X=$Get(^MAGDICOM(2006.563,1,"TEXT GATEWAY SERVICE"))
 Set P=$Select($Piece(X,",",1)="RAD":" checked",1:"")
 Write "<h3>Process Text Messages</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q13"""_P_">&nbsp;"
 Write " Radiology Service,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "
 Set P=$Select($Piece(X,",",2)="CON":" checked",1:"")
 Write "<input type=checkbox name=""Q14"""_P_">&nbsp;"
 Write " Consult Service&nbsp;&nbsp;&nbsp;"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "It is possible to use two Text Gateways, one for "
 Write "<b>Radiology</b> and the other for <b>Consults</b>. "
 Write "If this computer is to be the only Text Gateway and it is going "
 Write "to be used for both <b>Radiology</b> and <b>Consults</b> "
 Write "(the default configuration), then check both boxes.<br>",$Char(13,10)
 Write "Checking either of these boxes Radiology will have the effect that "
 Write "this Text Gateway will process HL7 messages for the corresponding "
 Write "service.<br>",$Char(13,10)
 Write "Leaving either box unchecked means that this Text Gateway will "
 Write "not process HL7 messages for the corresponding service and "
 Write "another Text Gateway will have to be used for that "
 Write "service instead.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer13 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"TEXT GATEWAY SERVICE"))
 Set NEW=%request.Get("Q13")
 Set NEW=$Select(NEW="":"",1:"RAD")
 Quit:NEW=OLD
 ;
 Set $Piece(^MAGDICOM(2006.563,1,"TEXT GATEWAY SERVICE"),",",1)=NEW
 Quit
</csp:method>

<csp:method name=Question14 arguments="">
 Quit
</csp:method>

<csp:method name=Answer14 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"TEXT GATEWAY SERVICE"))
 Set NEW=%request.Get("Q14")
 Set NEW=$Select(NEW="":"",1:"CON")
 Quit:NEW=OLD
 ;
 Set $Piece(^MAGDICOM(2006.563,1,"TEXT GATEWAY SERVICE"),",",2)=NEW
 Quit
</csp:method>

<csp:method name=Question15 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"SEND PACS TEXT"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Send to Commercial PACS</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q15"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "settings will be enabled to use this system to send text "
 Write "messages to external systems such as "
 Write "a commercial PACS, Mitra Broker, et cetera.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that it will not be possible to send "
 Write "such messages.</p>"
 Quit
</csp:method>

<csp:method name=Answer15 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"SEND PACS TEXT"))
 Set NEW=%request.Get("Q15")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"ROUTING RULES")=NEW
 Quit
</csp:method>

<csp:method name=Question16 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>PACS sending Exam Complete Messages</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q16"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "settings will be enabled that allow this system to receive "
 Write "Exam Complete messages from a PACS to trigger image "
 Write "transfer.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that this system will not be "
 Write "prepared to receive such messages.</p>"
 Quit
</csp:method>

<csp:method name=Answer16 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE"))
 Set NEW=%request.Get("Q16")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE")=NEW
 Quit
</csp:method>

<csp:method name=Question17 arguments="">
 New T,TYPE,X
 Quit:$Get(^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE"))'="YES"
 Set X=$Get(^MAGDICOM(2006.563,1,"COMMERCIAL PACS"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>COMMERCIAL PACS</h3>",$Char(13,10)
 Write "<p><select name=""Q17"">"
 Set TYPE(1)="GE-DICOM;GE Medical Systems PACS with Mitra PACS Broker"
 Set TYPE(2)="GE-ACR/NEMA;GE Medical Systems PACS with ACR-NEMA Text Gateway"
 Set TYPE(3)="EMED;eMed Technology Corporation PACS "
 Set TYPE(4)="OTHER;Other commercial PACS"
 Set TYPE="" For  Set TYPE=$Order(TYPE(TYPE)) Quit:TYPE=""  Do
 . Set T=$Piece(TYPE(TYPE),";",1)
 . Write "<option value="""_T_"""" Write:T=X " selected"
 . Write ">",$Piece(TYPE(TYPE),";",2),"</option>",$Char(13,10)
 . Quit
 Write "</select><br>",$Char(13,10)
 Write "Select the kind of commercial PACS that is installed at "
 Write "the site.<br>",$Char(13,10)
 Write "If the PACS is from GE Medical Systems, make sure to specify "
 Write "whether it uses the (new) Mitra Broker, or the (old) ACR-NEMA "
 Write "protocol version of the Text Gateway.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer17 arguments="">
 New NEW,OLD
 Quit:$Get(^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE"))'="YES"
 Set OLD=$Get(^MAGDICOM(2006.563,1,"COMMERCIAL PACS"))
 Set NEW=%request.Get("Q17")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"COMMERCIAL PACS")=NEW
 Quit
</csp:method>

<csp:method name=Question18 arguments="">
 New X
 Quit:$Get(^MAGDICOM(2006.563,1,"TEXT GATEWAY"))'="YES"
 Set X=$Get(^MAGDICOM(2006.563,1,"MODALITY WORKLIST"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Modality WorkList Provider</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q18"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "settings will be enabled that allow this system to operate as "
 Write "a Modality Worklist Provider.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that this system will not be able to "
 Write "respond to Modality Worklist requests.</p>"
 Quit
</csp:method>

<csp:method name=Answer18 arguments="">
 New NEW,OLD
 Quit:$Get(^MAGDICOM(2006.563,1,"TEXT GATEWAY"))'="YES"
 Set OLD=$Get(^MAGDICOM(2006.563,1,"MODALITY WORKLIST"))
 Set NEW=%request.Get("Q18")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"MODALITY WORKLIST")=NEW
 Quit
</csp:method>

<csp:method name=Question19 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"SEND CPT MODIFIERS"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Send CPT Modifiers</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q19"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that when "
 Write "CPT codes are transmitted, modifiers will be included.<br>",$Char(13,10)
 Write "Leaving this box unchecked means that such modifiers will be "
 Write "omitted.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer19 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"SEND CPT MODIFIERS"))
 Set NEW=%request.Get("Q19")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"SEND CPT MODIFIERS")=NEW
 Quit
</csp:method>

<csp:method name=Question20 arguments="">
 New D,P,X
 Quit:$Get(^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE"))'="YES"
 Quit:$Get(^MAGDICOM(2006.563,1,"COMMERCIAL PACS"))'="EMED"
 Set X=$Get(^MAGDICOM(2006.563,1,"EMED_C_MOVE_DELAY")),D=""
 Set P=X#60,X=X\60 Set:P D=P_"sec"
 D:X
 . Set P=X#60,X=X\60 Q:'P
 . Set:D'="" D=" "_D
 . Set D=P_"min"_D
 . Quit
 D:X
 . Set:D'="" D=" "_D
 . Set D=X_"hrs"_D
 . Quit
 Write "<h3>Delay for C-Move on EMed</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q20"" size=50 "
 Write "value="""_D_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Enter a time-delay value (like 5m 30s for 5 minutes, 30 seconds) "
 Write "for the period that should elapse between the moment an "
 Write """Exam Complete"" message arrives, and the moment a C-MOVE request "
 Write "can be initiated.</p>",$Char(13,10)
 Quit:$Get(Err(20))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(20)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer20 arguments="">
 New D,E,I,NEW,OLD,OK,X
 Quit:$Get(^MAGDICOM(2006.563,1,"PACS EXAM COMPLETE"))'="YES"
 Quit:$Get(^MAGDICOM(2006.563,1,"COMMERCIAL PACS"))'="EMED"
 Set OLD=$Get(^MAGDICOM(2006.563,1,"EMED_C_MOVE_DELAY"))
 Set NEW=%request.Get("Q20")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set D="",X=NEW
 For I=1:1:$Length(X) Do
 . Set E=$Extract(X,I) Quit:E=" "
 . If "1234567890"[E Set D=D_E,$Extract(X,I)=" " Quit
 . If "Hh"[E Set X=..Remove(X,"hours",I),D=D_"hrs" Quit
 . If "Mm"[E Set X=..Remove(X,"minutes",I),D=D_"min" Quit
 . If "Ss"[E Set X=..Remove(X,"seconds",I),D=D_"sec" Quit
 . Quit
 Set OK=($Translate(X," ")'="")
 If 'OK Set Err(20)=NEW Quit
 ;
 S D=$Translate(D," "),X=0
 I D["hrs" Set X=$Piece(D,"hrs",1)*3600,D=$Piece(D,"hrs",2)
 I D["min" Set X=$Piece(D,"min",1)*60+X,D=$Piece(D,"min",2)
 I D["sec" Set X=$Piece(D,"sec",1)+X,D=$Piece(D,"sec",2)
 Set ^MAGDICOM(2006.563,1,"EMED_C_MOVE_DELAY")=X
 Quit
</csp:method>

<csp:method name=Question21 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"SSN DASHES FOR PACS"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Dashes in SSN</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q21"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will have the effect that "
 Write "when Social Security Numbers are transmitted to PACS, dashes "
 Write "will be included. (This is the default: NNN-NN-NNNN.)<br>",$Char(13,10)
 Write "Leaving this box unchecked means that this pair of dashes will "
 Write "be omitted.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer21 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"SSN DASHES FOR PACS"))
 Set NEW=%request.Get("Q21")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"SSN DASHES FOR PACS")=NEW
 Quit
</csp:method>

<csp:method name=Question22 arguments="">
 Write "<h3>IP Address VistA System</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q22"" size=50 "
 Write "value="""_$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER ADDR"))_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Please enter the network address for the main VistA HIS where "
 Write "the M-to-M Broker Listener is running. Enter it either in "
 Write """nnn.nnn.nnn.nnn"" format, or as an entry in the HOSTS file.<br>",$Char(13,10)
 Write "NOTE: The name specified may not be longer than 30 characters.</p>",$Char(13,10)
 Quit:$Get(Err(22))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(22)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer22 arguments="">
 New NEW,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER ADDR"))
 Set NEW=%request.Get("Q22")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set:$Length(NEW)>30 OK=0
 Set:NEW'?1AN.E OK=0
 If 'OK Set Err(22)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"M-to-M BROKER ADDR")=NEW
 Quit
</csp:method>

<csp:method name=Question23 arguments="">
 Write "<h3>Port for MUMPS-to-MUMPS Broker on VistA</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q23"" size=10 "
 Write "value="""_$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER PORT"))_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Enter the port number of the M-to-M Broker Listener "
 Write "on the main VistA HIS.<br>",$Char(13,10)
 Write "Note that the M-to-M Broker Listener must be running "
 Write "on the main VistA HIS in addition to the regular RPC Broker.<br>",$Char(13,10)
 Write "Be sure to enter the port number of the M-to-M Broker Listener "
 Write "and not that of the regular RPC Broker.</p>",$Char(13,10)
 Quit:$Get(Err(23))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(23)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer23 arguments="">
 New NEW,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER PORT"))
 Set NEW=%request.Get("Q23")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set:+NEW'=NEW OK=0
 Set:NEW<1 OK=0
 Set:NEW>65535 OK=0
 If 'OK Set Err(23)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"M-to-M BROKER PORT")=NEW
 Quit
</csp:method>

<csp:method name=Question24 arguments="">
 Write "<h3>Mailgroup for emergency messages</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q24"" size=50 "
 Write "value="""_$Get(^MAGDICOM(2006.563,1,"MAILGROUP"))_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "The answer to this question must be the name of a mailgroup.<br>",$Char(13,10)
 Write "Note that names of mailgroups may contain letters and digits "
 Write "and dashes, but no spaces.<br>",$Char(13,10)
 Write "The name of the mailgroup and the name of the server where this "
 Write "group resides are separated by one at-sign (@).<br>",$Char(13,10)
 Write "(These messages are sent by SMTP-mail, not by FORUM-mail!)<br>"
 Write "A valid name of a mailgroup would be:<br>",$Char(13,10)
 Write "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
 Write $$MAGDBB^MAGDMFBE(),"</p>"
 Quit:$Get(Err(24))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(24)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer24 arguments="">
 New NEW,OLD,OK,V
 Set OLD=$Get(^MAGDICOM(2006.563,1,"MAILGROUP"))
 Set NEW=%request.Get("Q24")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 Set OK=1
 Set V=".@-0123456789_"
 Set V=V_"abcdefghijklmnopqrstuvwxyz"
 Set V=V_"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
 Set:$TRanslate(NEW,V)'="" OK=0
 Set:$L(NEW,"@")'=2 OK=0
 Set:$Length(NEW)<3 OK=0
 If 'OK Set Err(24)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"MAILGROUP")=NEW
 Quit
</csp:method>

<csp:method name=Question25 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"SSN DASHES FOR PACS"))
 Set X=$Select(X="YES":" checked",1:"")
 Write "<h3>Show Patient ID Details</h3>",$Char(13,10)
 Write "<p><input type=checkbox name=""Q25"""_X_">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Checking this box will enable the normal image processing "
 Write "application to display the patient name and ID (SSN). While this may "
 Write "be needed for test purposes, it is recommended that "
 Write "it not be routinely "
 Write "used in order to protect patient privacy (HIPAA).<br>",$Char(13,10)
 Write "Leaving this box unchecked will disable the display of the "
 Write "patient identification.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer25 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"SHOW PATIENT NAME & ID"))
 Set NEW=%request.Get("Q25")
 Set NEW=$Select(NEW="":"NO",1:"YES")
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"SHOW PATIENT NAME & ID")=NEW
 Quit
</csp:method>

<csp:method name=Question26 arguments="">
 New code
 Set code=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND ACCESS"))
 Set:code'="" code=$$DECRYP^MAGM2VCU(code)
 Write "<h3>Access Code</h3>",$Char(13,10)
 Write "<p><input type=password name=""Q26a"" size=50 "
 Write "value="""_code_""">"
 Write "<br>",$Char(13,10),"Enter this value twice:<br>",$Char(13,10)
 Write "<input type=password name=""Q26b"" size=50 "
 Write "value="""_code_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Background tasks like ""Modality WorkList"" need valid "
 Write "Access and Verify codes as well as foreground tasks.<br>",$Char(13,10)
 Write "Enter the Access code that such background tasks will use.<br>",$Char(13,10)
 Write "(The validity of this Access code can be verified using menu "
 Write "option 4-2-10.)</p>",$Char(13,10)
 Quit:'$Get(Err(26))
 Write "<p><font color=#ff0000><b>The entered values were not identical.</b></font> "
 Quit
</csp:method>

<csp:method name=Answer26 arguments="">
 New NEW1,NEW2,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND ACCESS"))
 Set NEW1=%request.Get("Q26a")
 Set NEW2=%request.Get("Q26b")
 If NEW1'=NEW2 Set Err(26)=1
 Quit:NEW1=$$DECRYP^MAGM2VCU(OLD)
 ;
 Set ^MAGDICOM(2006.563,1,"M-to-M BROKER BGND ACCESS")=$$ENCRYPT^MAGM2VCU(NEW1)
 Quit
</csp:method>

<csp:method name=Question27 arguments="">
 New code
 Set code=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND VERIFY"))
 Set:code'="" code=$$DECRYP^MAGM2VCU(code)
 Write "<h3>Verify Code</h3>",$Char(13,10)
 Write "<p><input type=password name=""Q27a"" size=50 "
 Write "value="""_code_""">"
 Write "<br>",$Char(13,10),"Enter this value twice:<br>",$Char(13,10)
 Write "<input type=password name=""Q27b"" size=50 "
 Write "value="""_code_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Background tasks like ""Modality WorkList"" need valid "
 Write "Access and Verify codes as well as foreground tasks.<br>",$Char(13,10)
 Write "Enter the Verify code that such background tasks will use.<br>",$Char(13,10)
 Write "(The validity of this Access code can be verified using menu "
 Write "option 4-2-10).</p>",$Char(13,10)
 Quit:'$Get(Err(27))
 Write "<p><font color=#ff0000><b>The entered values were not identical.</b></font> "
 Quit
</csp:method>

<csp:method name=Answer27 arguments="">
 New NEW1,NEW2,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER BGND VERIFY"))
 Set NEW1=%request.Get("Q27a")
 Set NEW2=%request.Get("Q27b")
 If NEW1'=NEW2 Set Err(27)=1
 Quit:NEW1=$$DECRYP^MAGM2VCU(OLD)
 ;
 Set ^MAGDICOM(2006.563,1,"M-to-M BROKER BGND VERIFY")=$$ENCRYPT^MAGM2VCU(NEW1)
 Quit
</csp:method>

<csp:method name=Question28 arguments="">
 New d1,last,p
 Write "<h3>Modality WorkList Port Number(s)</h3>",$Char(13,10)
 Set last=0
 Set d1=0 For  Set d1=$Order(^MAGDICOM(2006.563,1,"WORKLIST PORT",d1)) Quit:'d1  Do
 . Set p=+$Get(^MAGDICOM(2006.563,1,"WORKLIST PORT",d1,0)) Quit:'p
 . Write:'last "<p>" Write:last "<br>",$Char(13,10)
 . Write "<input type=text name=""Q28_"_d1_""" size=10 value="""_p_""">"
 . Write "&nbsp;&nbsp;" Set last=d1+1
 . Quit
 Write:'last "<p>" Write:last "<br>",$Char(13,10)
 Write "<input type=text name=""Q28_"_last_""" size=10></p>"
 Write $Char(13,10),"<p>"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Fill in port numbers for all TCP/IP ports on which "
 Write "listeners should be active to respond to DICOM Modality "
 Write "WorkList Queries.<br>",$Char(13,10)
 Write "Listeners can be cancelled by erasing the corresponding port numbers "
 Write "from the boxes in this section.</p>",$Char(13,10)
 Write "<p>Valid values for TCP/IP ports are integer numbers between "
 Write "1 and 65,535 (inclusively).</p>",$Char(13,10)
 Quit:$Get(Err(28))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(28)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer28 arguments="">
 New d1,NEW,OLD,OK,p,same,seen
 Set same=1
 Set d1=0 For  Set d1=$Order(^MAGDICOM(2006.563,1,"WORKLIST PORT",d1)) Quit:'d1  Do
 . Set p=+$Get(^MAGDICOM(2006.563,1,"WORKLIST PORT",d1,0)) Quit:'p
 . Set OLD(d1)=p
 . If p'=%request.Get("Q28_"_d1) Set same=0
 . Quit
 Set name="Q28_" For  Set name=%request.Next(name) Quit:$Extract(name,1,4)'="Q28_"  Do
 . Set d1=$Piece(name,"_",2),p=%request.Get(name)
 . If p'=$Get(OLD(d1)) Set same=0
 . If p\1=p,p>0,p<65536 Set NEW(d1)=p Quit
 . Set Err(28)=$Get(Err(28)) Set:Err(28)'="" Err(28)=Err(28)_" and "
 . Set Err(28)=Err(28)_p
 . Quit
 Quit:same
 ;
 Kill ^MAGDICOM(2006.563,1,"WORKLIST PORT")
 Set seen(60010)=1,last=1
 Set ^MAGDICOM(2006.563,1,"WORKLIST PORT",1,0)=60010
 Set d1="" For  Set d1=$Order(NEW(d1)) Quit:d1=""  Do
 . Set p=NEW(d1) Quit:$Get(seen(p))
 . Set last=last+1,^MAGDICOM(2006.563,1,"WORKLIST PORT",last,0)=p,seen(p)=1
 . Quit
 Set ^MAGDICOM(2006.563,1,"WORKLIST PORT",0)="^2006.5635^"_last_"^"_last
 Quit
</csp:method>

<csp:method name=Question29 arguments="">
 New code,LocalIP,Office
 Set LocalIP=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER ADDR"))
 Set Office=$Get(^MAGDICOM(2006.563,1,"POST OFFICE"))
 Set code=5
 Set:Office=LocalIP code=0
 Set:Office="10.2.27.92" code=1
 Set:Office="10.3.27.92" code=2
 Set:Office="10.6.27.92" code=3
 Set:Office="10.2.29.131" code=4
 Set:Office="" code=5
 Write "<h3>Post Office for E-Mail</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q29i"" size=20 "
 Write "value="""_Office_""">"
 Write "&nbsp;&nbsp;"
 Write "<select name=""Q29s"">",$Char(13,10)
 Do:LocalIP'=""
 . Write "<option value=0" Write:code=0 " selected"
 . Write ">",LocalIP," (Local VistA)</option>",$Char(13,10)
 . Quit
 Write "<option value=1" Write:code=1 " selected"
 Write ">Silver Spring, MD</option>",$Char(13,10)
 Write "<option value=2" Write:code=2 " selected"
 Write ">Hines, IL</option>",$Char(13,10)
 Write "<option value=3" Write:code=3 " selected"
 Write ">San Francisco, CA</option>",$Char(13,10)
 Write "<option value=4" Write:code=4 " selected"
 Write ">VA-Forum</option>",$Char(13,10)
 Write "<option value=5" Write:code=5 " selected"
 Write ">Other</option></select>&nbsp;&nbsp;",$Char(13,10)
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "<p>The Department of Veterans Affairs has three virus-checking "
 Write "post-offices set up for nationwide e-mail.<br>",$Char(13,10)
 Write "Indicate which system is to be used as a post-office:<ul>"
 Do:LocalIP'=""
 . Write "<li>the local VistA system at "
 . Write LocalIP,"</li>",$Char(13,10)
 . Quit
 Write "<li>the Virus-Checking Office in "
 Write "Silver Spring, MD at 10.2.27.92</li>",$Char(13,10)
 Write "<li>the Virus-Checking Office in "
 Write "Hines, IL at 10.3.27.92</li>",$Char(13,10)
 Write "<li>the Virus-Checking Office in "
 Write "San Francisco, CA at 10.6.27.92</li>",$Char(13,10)
 Write "<li>VA-Forum at 10.2.29.131</li>",$Char(13,10)
 Write "<li>(or enter the TCP/IP address of the system to "
 Write "be used).</li></ul></p>",$Char(13,10)
 Quit:$Get(Err(29))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(29)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answer29 arguments="">
 New NEW1,NEW2,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"POST OFFICE"))
 Set NEW1=%request.Get("Q29i")
 Set NEW2=%request.Get("Q29s")
 Do:NEW1=OLD
 . Set:NEW2=0 NEW1=$Get(^MAGDICOM(2006.563,1,"M-to-M BROKER ADDR"))
 . Set:NEW2=1 NEW1="10.2.27.92"
 . Set:NEW2=2 NEW1="10.3.27.92"
 . Set:NEW2=3 NEW1="10.6.27.92"
 . Set:NEW2=4 NEW1="10.2.29.131"
 . Quit
 Quit:NEW1=""  Quit:NEW1=OLD
 Set OK=$TR(NEW1,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.0123456789")=""
 ;
 If 'OK Set Err(29)=NEW1 Quit
 Set ^MAGDICOM(2006.563,1,"POST OFFICE")=NEW1
 Quit
</csp:method>

<csp:method name=Answer30 arguments="">
 New NEW,OLD
 Set OLD=$Get(^MAGDICOM(2006.563,1,"VISTA_STORAGE"))
 Set NEW=%request.Get("Q30") Set:NEW="" NEW="VISTA_STORAGE"
 Quit:NEW=OLD
 ;
 Set ^MAGDICOM(2006.563,1,"VISTA_STORAGE")=NEW
 Quit
</csp:method>

<csp:method name=Question30 arguments="">
 New X
 Set X=$Get(^MAGDICOM(2006.563,1,"VISTA_STORAGE"))
 Set:X="" X="VISTA_STORAGE"
 Write "<h3>AE Title for VistA System</h3>",$Char(13,10)
 Write "<p><input type=text name=""Q22"" size=50 value="""_X_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "Some PACSs find the VistA system using "
 Write "its Application Entity Title.<br>"
 Write "An AE-title has up to 16 characters in it.<br>"
 Write "Enter the AE-title that is used to identify the VistA system.</p>",$Char(13,10)
 Quit
</csp:method>

<!--
<csp:method name=Questionxxx arguments="">
 Write "<h3>xxx</h3>",$Char(13,10)
 Write "<p><input type=text name=""Qxxx"" size=50 "
 Write "value="""_$Get(^MAGDICOM(2006.563,1,"xxx"))_""">"
 Write "&nbsp;&nbsp;"
 Write "<input type=submit value=""Update Settings""><br>",$Char(13,10)
 Write "xxx.</p>",$Char(13,10)
 Quit:$Get(Err(xxx))=""
 Write "<p><font color=#ff0000><b>",..HTML(Err(xxx)),"</b></font> "
 Write "is not a valid entry for this field.</p>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=Answerxxx arguments="">
 New NEW,OLD,OK
 Set OLD=$Get(^MAGDICOM(2006.563,1,"xxx"))
 Set NEW=%request.Get("Qxxx")
 Quit:NEW=""  Quit:NEW=OLD
 ;
 If 'OK Set Err(xxx)=NEW Quit
 Set ^MAGDICOM(2006.563,1,"xxx")=NEW
 Quit
</csp:method>
-->

<csp:method name=Drives arguments="name:%String,value:%String">
 New e,i,list
 If $Zversion[" 5.0 " Set i=$$drives^%Wpfiles(.list)
 If $Zversion[" 5.1 " Zn "%SYS" Set i=$$drives^Wpfiles(.list) Zn "DICOM"
 Set list=$Translate(list,$Char(58,22,35,1))
 Write "<select name="""_name_""">"
 For i=1:1:$Length(list) Do
 . Set e=$Extract(list,i)
 . Quit:e="A"  Quit:e="a"
 . Quit:e="B"  Quit:e="b"
 . Write "<option value="""_e_"""" Write:value=$Extract(list,i) " selected"
 . Write ">",e,":","</option>",$Char(13,10)
 . Quit
 Write "</select>",$Char(13,10)
 Quit
</csp:method>

<csp:method name=HTML arguments="in:%String" returntype=%String>
 New A,I,out
 Set out="" For I=1:1:$Length(in) D
 . Set A=$Ascii(in,I)
 . If $Char(A)="&" Set out=out_"&amp;" Quit
 . If $Char(A)="<" Set out=out_"&lt;" Quit
 . If $Char(A)=">" Set out=out_"&gt;" Quit
 . If A<31 Set out=out_"&#"_A_";" Quit
 . If A>126 Set out=out_"&#"_A_";" Quit
 . Set out=out_$Char(A)
 . Quit
 Quit out
</csp:method>

<csp:method name=Remove arguments="in:%String,del:%String,i:%String" returntype=%String>
 New A,B,out,n,p
 Set out=in,n=i
 For p=1:1:$Length(del) D
 . Set A=$Ascii(in,n) Set:A>96 A=A-32
 . Set B=$Ascii(del,p) Set:B>96 B=B-32
 . If A=B Set $Extract(out,n)=" ",n=n+1
 . Quit
 Quit out
</csp:method>

<csp:method name=LogInFrm arguments="app:%String,url:%String">
 ;Present Log In form
 ;
 ; app = name of application
 ; url = url to re-invoke application
 ;
 New any,var
 Write !,"<form action=""",url,""" method=""POST"">"
 Write !,"<input type=hidden name=""Application"" value=""",app,""">"
 ;
 Write !,"<h3>Access to this site is restricted."
 Write !,"If you wish to request access to this site,"
 Write !,"please send e-mail"
 Write !,"to <a href=""",$Get(^MAGDICOM(2006.563,1,"MAILGROUP")),""">our system manager</a>.</h3>"
 Write !,"<p>If you are a registered user, please login.</p>"
 ;
 Write !,"<table cellspacing=3 summary=""This table is for formatting purposes only."">"
 Write !,"<tr><td align=right><font size=+2>User Name:</font></td>"
 Write !,"<td align=left><input type=text name=""UserName""></td></tr>"
 Write !,"<tr><td align=right><font size=+2>Current Password:</font></td>"
 Write !,"<td align=left><input type=password name=""PassWord""></td></tr>"
 Write !,"<tr><td align=right><b>New Password:</b></td>"
 Write !,"<td align=left><input type=password name=""PassN1""></td></tr>"
 Write !,"<tr><td align=right><b>Verify New Password:</b></td>"
 Write !,"<td align=left><input type=password name=""PassN2""></td></tr>"
 Write !,"<tr><td>&nbsp;</td>"
 Write !,"<td><input type=submit value=""Login"" name=""LogIn""></td></tr>"
 Write !,"</table></form>"
 Quit
</csp:method>

<csp:method name=LogInVal arguments="App:%String,UserName:%String,PassWord:%String,New1:%String,New2:%String" returntype=%String>
 ; Authenticate username and password
 New d,id,lo,r1,r2,up
 ;
 Set r1="<h2><font color=#ff0000>",r2="</font></h2>"
 Set lo="abcdefghijklmnopqrstuvwxyz"
 Set up="ABCDEFGHIJKLMNOPQRSTUVWXYZ "
 Set UserName=$tr(UserName,up,lo)
 ;
 If UserName="",PassWord="" Do   Quit ""
 . Write !,r1,"Please enter a user name and/or a password.",r2
 . Quit
 ;
 If New1'=New2 Do   Quit ""
 . Write !,r1,"New Passwords do not match.",r2
 . Quit
 ;
 Set id="" Do  Quit:id="" ""
 . New ac,pp,ps,pv,pw,us,ve
 . Set ac=$Get(^MAGDICOM(2006.563,1,"LOGIN ACCESS"))
 . Set pv=$Get(^MAGDICOM(2006.563,1,"LOGIN PRINT/VIEW ONLY"))
 . Set pp=$Get(^MAGDICOM(2006.563,1,"LOGIN PROGRAMMER ACCESS"))
 . Set ps=$Get(^MAGDICOM(2006.563,1,"LOGIN SUPPORT"))
 . Set ve=$Get(^MAGDICOM(2006.563,1,"LOGIN VERIFY"))
 . Set pw=..Crypt(PassWord),us=..Crypt(UserName),New1=..Crypt(New1)
 . Do:pw=pp
 . . Set id="1_programmer"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN PROGRAMMER ACCESS")=New1
 . . Quit
 . Do:pw=ps
 . . Set id="2_support"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN SUPPORT")=New1
 . . Quit
 . Do:pw=pv
 . . Set id="3_viewonly"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN PRINZT/VIEW ONLY")=New1
 . . Quit
 . If us=ac,pw=ve Do
 . . Set id="4_fulluser"
 . . If New1'="" Set ^MAGDICOM(2006.563,1,"LOGIN VERIFY")=New1
 . . Quit
 . Quit
 ;
 Quit id_"|"_..Now()_"|"_$Random(10000000)
</csp:method>

<csp:method name=Now arguments="" returntype=%String>
 New h
 Set h=$Horolog
 Quit $Piece(h,",",1)*86400+$Piece(h,",",2)
</csp:method>

<csp:method name=Crypt arguments="in:%String" returntype=%String>
 ; return an encrypted value for a string
 New I,S,X
 Set S=$Translate(in,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
 If $Length(S)<6 Quit ""
 If S?.E1P.E Quit ""
 If '((S?.E1A.E)&(S?.E1N.E)) Quit ""
 ; compute a weighted sum of characters, return last 10 digits of sqrt
 Set X=0 For I=1:1:$Length(S) Set X=$Ascii(S,I)+(128*X)
 Set X=X**.5,X=$Extract(X,$Length(X)-9,999)
 Quit X
</csp:method>

</body></html>
