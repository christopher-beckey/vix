MAGDIW3B ;WOIFO/PMK/JSL/SAF - Coerce Patient and Study Information in Image Header ; 03 Mar 2008 11:50 AM
 ;;3.0;IMAGING;**11,30,51,50,54,123**;Mar 19, 2002;Build 60;Jul 16, 2012
 ;; Per VHA Directive 2004-038, this routine should not be modified.
 ;; +---------------------------------------------------------------+
 ;; | Property of the US Government.                                |
 ;; | No permission to copy or redistribute this software is given. |
 ;; | Use of unreleased versions of this software requires the user |
 ;; | to execute a written test agreement with the VistA Imaging    |
 ;; | Development Office of the Department of Veterans Affairs,     |
 ;; | telephone (301) 734-0100.                                     |
 ;; | The Food and Drug Administration classifies this software as  |
 ;; | a medical device.  As such, it may not be changed in any way. |
 ;; | Modifications to this software may result in an adulterated   |
 ;; | medical device under 21CFR820, the use of which is considered |
 ;; | to be a violation of US Federal Statutes.                     |
 ;; +---------------------------------------------------------------+
 ;;
 Q
 ; VistA stores the DICOM image header exactly as it was received from
 ; the modality.  The "about image text file" (*.TXT) contains the
 ; correct patient values in the DATA1 block.
 ;
 ; This routine gets the patient values in the DATA1 block and stuffs
 ; them into the image header.  The accession number is obtained from
 ; the report cross reference (^MAG(2005,,2), piece 6 & 7) in ^MAGDIW1,
 ; and stored in piece-3 of ^MAG(2006.574,STUDYIEN,0).
 ;
ENTRY() ; entry point from ^MAGDIWB2, called before ^MAGDIW3A
 N X
 S X=$$GETDATA1()
 I $L(X) Q X
 D COERCE
 Q $$SSNCHECK
 ;
SSNCHECK() ; check the SSN for the patient against that in the DATA1 block
 ; called from ^MAGDIWB2 for DICOM objects
 N DATA1SSN,ERRMSG,VISTASSN
 S DATA1SSN=$G(^TMP("MAG",$J,"DICOM","DATA1 BLOCK","PATIENTS_ID"))
 S VISTASSN=$P($G(VADM(2)),"^",2),ERRMSG=""
 I $TR(DATA1SSN,"-")'=$TR(VISTASSN,"-") D
 . S ERRMSG="-101 Patient SSN Mismatch Image IEN: "_IMAGE_"  for patient with DFN: "_DFN
 . Q
 Q ERRMSG
 ;
GETDATA1() ; get data from DATA1 block
 ; called from ^MAGDIWB2 for DICOM objects
 N DATAFLAG,IPTR,OLDSEQ,OLDTAG,RECORD,STATUS
 ;
 K ^TMP("MAG",$J,"DICOM","DATA1 BLOCK")
 S STATUS=$$OPEN^MAGOSFIL(FILETXT,"R")
 I STATUS<0 D  Q X
 . S X="-102 Could not open file """_FILETXT_""" for Read."
 . Q
 S DATAFLAG=0,IPTR=0,OLDTAG="",OLDSEQ=""
 F  D  Q:STATUS'=""
 . S STATUS=$$READ^MAGOSFIL(FILETXT,.RECORD)
 . I $$USEPRIN^MAGOSFIL(1)
 . I STATUS<0 W:+STATUS'=-2 !,STATUS Q
 . I RECORD="$$BEGIN DATA1" S DATAFLAG=1 Q
 . I RECORD="$$END DATA1" S STATUS="DONE" Q
 . I DATAFLAG D DATA1
 . Q
 S STATUS=$$CLOSE^MAGOSFIL(FILETXT)
 I 'DATAFLAG Q "-103 DATA1 text block not found in "_FILETXT
 Q ""
 ;
DATA1 ; process the records in the DATA1 block of the "about image text file"
 N ATTRIB,VALUE
 S ATTRIB=$P(RECORD,"=",1),VALUE=$P(RECORD,"=",2,999)
 S ^TMP("MAG",$J,"DICOM","DATA1 BLOCK",ATTRIB)=VALUE
 Q
 ;
COERCE ; modify the data in the DICOM image header to contain correct values
 N AGE ;------ patient age
 N DOB ;------ date of birth
 N PID ;------ patient identifier (i.e., social security number)
 N PNAME ;---- patient name in DICOM format
 N PROCDESC ;- radiology procedure description
 N RACE ;----- patient race (DICOM has a 16 character max.)
 N SEX ;------ patient sex
 N X,Y
 ;
 S PROCDESC=""
 I $L($G(ACCNUMB)) D  ; set in ^MAGDIWB1 and read by ^MAGDIWB2
 . D REPLACE^MAGDFCNS("0008,0050",ACCNUMB) ; accession number
 . D RADLKUP
 . Q
 ;
 ; get AGE from DATA1 block - most accurate value on day of study
 S AGE=$E(1000+$G(^TMP("MAG",$J,"DICOM","DATA1 BLOCK","PATIENTS_AGE")),2,4)_"Y"
 ;
 ; get the newest values from the VADM array
 S PNAME=VADM(1) ; patient name
 S PID=VA("PID") ; P123 - patient's ID
 S DOB=$P(VADM(3),"^",1) ; patient's birth data, in FM Date format
 S SEX=$P(VADM(5),"^",1) ; patient's sex
 S RACE=$P($G(VADM(12,1)),"^",2) D ETHNIC^MAGDFND4
 ;
 ; format the data
 I PNAME'["^" D  ; format name
 . N LASTNAME,FIRSTNAM,MIDNAME,Z
 . S LASTNAME=$P(PNAME,","),Z=$P(PNAME,",",2,999)
 . S FIRSTNAM=$P(Z," ",1),MIDNAME=$TR($P(Z," ",2,999),".")
 . S PNAME=LASTNAME_"^"_FIRSTNAM_"^"_MIDNAME ; patient name
 . Q
 S DOB=DOB+17000000 ; convert from FM date to DICOM date
 ;
 D KILL^MAGDFCNS("0008,1050") ; performing physician's name
 D REPLACE^MAGDFCNS("0010,0010",PNAME) ; patient's name
 D REPLACE^MAGDFCNS("0010,0020",PID) ; patient's ID
 D REPLACE^MAGDFCNS("0010,0030",DOB) ; patient's birth date
 D REPLACE^MAGDFCNS("0010,0040",SEX) ; patient's sex
 D REPLACE^MAGDFCNS("0010,1000",VAICN) ; other patient IDs (ICN)
 D REPLACE^MAGDFCNS("0010,1010",AGE) ; patient's age
 D KILL^MAGDFCNS("0010,1040") ; address
 D REPLACE^MAGDFCNS("0010,2000","See patient's chart.") ; medical alerts
 D REPLACE^MAGDFCNS("0010,2160",RACE) ; patient's race
 I $L(PROCDESC) D REPLACE^MAGDFCNS("0032,1060",PROCDESC) ; rad proc description
 ;
 Q
 ;
RADLKUP ;
 N ACNUMB,CASENUMB,CPTNAME,CPTCODE,DFN,INFO,MODALITY
 N PROCIEN,PREGSTAT,SCHSDYDT,SITE,STUDYID,STUDYUID
 S CASENUMB=ACCNUMB D RAD^MAGDFND4
 Q
 ;
GETSHIFT() ; entry point from ^MAGDIW3A
 ; determine the arithmetic shift from DCMTOTGA MODPARMS
 N ADD,MODPARMS,SUB
 I $D(^TMP("MAG",$J,"DICOM","DATA1 BLOCK","DCM_TO_TGA_PARAMETERS")) D
 . S MODPARMS=^TMP("MAG",$J,"DICOM","DATA1 BLOCK","DCM_TO_TGA_PARAMETERS")
 . Q
 E  D  ; look up the modality DCMTOTGA parameters
 . N LOCATION,MFGR,MODALITY,MODEL,MODIEN,STUDYDAT
 . S MFGR=$G(^TMP("MAG",$J,"DICOM","DATA1 BLOCK","MANUFACTURER"))
 . S MODEL=$G(^TMP("MAG",$J,"DICOM","DATA1 BLOCK","MANUFACTURERS_MODEL_NAME"))
 . S MODALITY=$G(^TMP("MAG",$J,"DICOM","DATA1 BLOCK","MODALITY"))
 . Q:MFGR=""  Q:MODEL=""  Q:MODALITY=""
 . S MFGR=$$UP^MAGDFCNS(MFGR)
 . S MODEL=$$UP^MAGDFCNS(MODEL)
 . S MODALITY=$$UP^MAGDFCNS(MODALITY)
 . ; assume that the same gateway processed image originally
 . S LOCATION=^MAGDICOM(2006.563,1,"LOCATION")
 . S STUDYDAT=$$GETDATA^MAGDFCNS("OUT","0008,0020") ; study date
 . ; look in historical CT MODPARMS file first
 . S MODPARMS=$$LOOKUP^MAGDMFB7(LOCATION,MFGR,MODEL,STUDYDAT)
 . I MODPARMS["<unknown>" K MODPARMS
 . Q
 ; check for an "R" in MODPARMS - if so, force secondary capture
 I $D(MODPARMS),MODPARMS["R",MODPARMS'["/" K MODPARMS
 Q:'$D(MODPARMS) "NO DATA"  ; no MODPARMS - can't determine shift
 S MODPARMS=$$UP^MAGDFCNS($P(MODPARMS,"^",1))
 I MODPARMS["/" S MODPARMS=$P(MODPARMS,"/",2) ; use *.BIG file value
 S ADD=+$P(MODPARMS,"A",$L(MODPARMS,"A"))
 S SUB=+$P(MODPARMS,"S",$L(MODPARMS,"S"))
 Q ADD-SUB ; this is always a numeric value, never null
 ;
