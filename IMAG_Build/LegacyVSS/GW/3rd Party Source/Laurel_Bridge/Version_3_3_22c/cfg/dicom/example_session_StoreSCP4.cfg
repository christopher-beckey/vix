#
# Custom DicomSessionSettings for a server
# that creates
#
# VerificationServer
# StoreServer
# MWLServer
# MPPSServer
# QRServer
# StoreCommitServer
# and a custom GPSPSServer
#
#===========================================
# Base DicomSessionSettings fields
# defaults are in proc cfg at:
# cs_lib/DCS/default_session_cfg
#===========================================
debug_flags = 0
max_read_pdu_size = 32768
max_write_pdu_size = 32768
ignore_max_length_negotiation = NO
favor_proposed_syntax_order = YES
decode_un_seqs_in_ile = YES
pdu_write_timeout_seconds = -1
send_dimse_timeout_seconds = 180
receive_dimse_timeout_seconds = 180
enable_streaming_mode = YES
stream_mode_buffer_size = 16384
enable_compression_pass_through_mode = NO
pdu_write_delay_seconds = 0
pdu_read_delay_seconds = 0
socket_write_delay_seconds = 0
max_bytes_per_socket_write = 0
read_unknown_vr_as_OB_or_SQ = YES
always_write_undef_length_seqs = YES
always_write_undef_length_seq_items = YES
always_write_seq_item_end_delims = NO
always_write_seq_end_delims = NO
association_idle_timeout_seconds = 600
pre_association_script = 
post_association_script = 
disable_multi_pdv_pdus = YES
input_filter_cfg_name = 
output_filter_cfg_name = 
remove_incoming_role_selection_items = NO
remove_outgoing_role_selection_items = NO
# if set, private tags in a dataset with VR UN that are in the data dictionary
# (via the extended data dictionary) with a different VR will be fixed to have
# the VR from the dictionary.  If not set, a warning will be logged if the VRs are not the same
fix_private_tags_with_vr_UN = NO
# if set, standard tags in a dataset with VR UN that are in the data dictionary
# (via the default data dictionary) with a different VR will be fixed to have
# the VR from the dictionary.  If not set, a warning will be logged if the VRs are not the same
fix_standard_tags_with_vr_UN = NO
[ input_filters ]
[ output_filters ]
[ supported_transfer_syntaxes ]
# explicit-little-endian
transfer_syntax = 1.2.840.10008.1.2.1
# implicit-little-endian
transfer_syntax = 1.2.840.10008.1.2
# explicit-big-endian
transfer_syntax = 1.2.840.10008.1.2.2
# JPEG lossless prediction selector = 1
transfer_syntax = 1.2.840.10008.1.2.4.70
# JPEG2000 lossless
transfer_syntax = 1.2.840.10008.1.2.4.90
# JPEG2000 lossy
transfer_syntax = 1.2.840.10008.1.2.4.91
# JPEG lossless
transfer_syntax = 1.2.840.10008.1.2.4.57
# JPEG lossy 8 bit 
transfer_syntax = 1.2.840.10008.1.2.4.50
# JPEG lossy 12 bit
transfer_syntax = 1.2.840.10008.1.2.4.51
[ DicomJPEGCodec ]
[ DicomJPEGCodec/jpeg_lossy ]
# lossy compression quality : 0 to 100
compression_quality = 75
# If true, then 12 bit operations will use the 16 bit IJG library
no_12bit_lib = true
# If true, then the photometric-interpretation attribute
# for RGB color data is changed as a data set is written.
# The new value is configurable.
change_photo_interp_on_encode = true
# If true, then the photometric-interpretation attribute
# for color data is changed to RGB as a data set is read.
change_photo_interp_on_decode = true
# If true, derived image elements are added to data sets
# as they are written. This includes changing Image-Type,
# and adding Source-Image-Sequence and Derivation-Code-Sequence.
# A new sop-instance-uid will be created for the output data set.
add_derived_image_fields = true
# If true, signed pixel data (pixel-representation = 1 ) will
# be allowed.
allow_signed_data = false
# Specify the new value for photometric interpretation if
# original data is RGB and change_photo_interp_on_encode
# is true.
change_photo_interp_rgb_to = YBR_FULL_422
[ DicomJPEGCodec/jpeg_lossless ]
# If true, then 12 bit operations will use the 16 bit IJG library
no_12bit_lib = true
# Set the jpeg predictor selection value for the .57 syntax.
# If the transfer syntax is 1.2.840.10008.1.2.4.70,
# this attribute is ignored and predictor selection value
# is set to 1.
jpeg_predictor_selection_value = 6
# If true, then the photometric-interpretation attribute
# for RGB color data is changed as a data set is written.
# The new value is configurable.
change_photo_interp_on_encode = true
# If true, then the photometric-interpretation attribute
# for color data is changed to RGB as a data set is read.
change_photo_interp_on_decode = true
# If true, then derived image fields are added for monochrome
# images. (Some implementations add derived fields, create
# a new sop-instance-uid, etc. even for lossless compressed
# images.)
add_derived_image_fields_for_mono = false
# If true, then derived image fields are added for color 
# images. (Some implementations add derived fields, create
# a new sop-instance-uid, etc. even for lossless compressed
# images.)
add_derived_image_fields_for_color = true
# If true, signed pixel data (pixel-representation = 1 ) will
# be allowed.
allow_signed_data = false
# If true, color pixel data will be allowed. Some implementations
# don't implement lossless jpeg for color, since the RGB to YBR
# color space conversion may result in some information loss.
allow_color = false
# Specify the new value for photometric interpretation if
# original data is RGB and change_photo_interp_on_encode
# is true.
change_photo_interp_rgb_to = YBR_FULL
[ DicomJPEGCodec/jpeg2000_lossy ]
# override all options by using this attribute
# use "\" to end lines for a multi-lined attribute value
jpeg2000_codec_options = 
# If true, then the photometric-interpretation attribute
# for RGB color data is changed as a data set is written.
# The new value is configurable.
change_photo_interp_on_encode = true
# If true, then the photometric-interpretation attribute
# for color data is changed to RGB as a data set is read.
change_photo_interp_on_decode = true
# Specify the compression ratio
compression_ratio = 2
# Specify the number of jpeg2000 compression levels
compression_levels = 6
# If true, derived image elements are added to data sets
# as they are written. This includes changing Image-Type,
# and adding Source-Image-Sequence and Derivation-Code-Sequence.
# A new sop-instance-uid will be created for the output data set.
add_derived_image_fields = true
# Perform the "Multi-Component-Transform" i.e. color space conversion
# on RGB data.
perform_mct = true
# Specify the new value for photometric interpretation if
# original data is RGB and change_photo_interp_on_encode
# is true.
change_photo_interp_rgb_to = YBR_ICT
[ DicomJPEGCodec/jpeg2000_lossless ]
# override all options by using this attribute
# use "\" to end lines for a multi-lined attribute value
jpeg2000_codec_options = 
# If true, then the photometric-interpretation attribute
# for RGB color data is changed as a data set is written.
# The new value is configurable.
change_photo_interp_on_encode = true
# If true, then the photometric-interpretation attribute
# for color data is changed to RGB as a data set is read.
change_photo_interp_on_decode = true
# If true, then derived image fields are added for monochrome
# images. (Some implementations add derived fields, create
# a new sop-instance-uid, etc. even for lossless compressed
# images.)
add_derived_image_fields_for_mono = false
# If true, then derived image fields are added for color 
# images. (Some implementations add derived fields, create
# a new sop-instance-uid, etc. even for lossless compressed
# images.)
add_derived_image_fields_for_color = false
# Perform the "Multi-Component-Transform" i.e. color space conversion
# on RGB data.
perform_mct = true
# Specify the new value for photometric interpretation if
# original data is RGB and change_photo_interp_on_encode
# is true.
change_photo_interp_rgb_to = YBR_RCT


#===========================================
# Verification (Echo) SCP fields
# defaults are in proc cfg at:
# cs_lib/DCS/VerifcationSCP/default_session_cfg
#===========================================
[VERIFICATIONSCP]
[VERIFICATIONSCP/supported_sop_classes]
sop_class = 1.2.840.10008.1.1

#===========================================
# Modality Worklist SCP fields
# defaults are in proc cfg at:
# cs_lib/DIS/MWLSCP/default_session_cfg
#===========================================
[ MWLSCP ]
filter_query_responses = yes

[ MWLSCP/supported_sop_classes ]
#SOPMODALITYWORKLIST_FIND 
sop_class = 1.2.840.10008.5.1.4.31
#SOPGPWORKLIST_FIND 
#sop_class = 1.2.840.10008.5.1.4.32.1

#===========================================
# Modality Performed Procedure Step SCP fields
# defaults are in proc cfg at:
# cs_lib/DIS/MPPSSCP/default_session_cfg
#===========================================
[ MPPSSCP ]
response_timeout_seconds = 30

[MPPSSCP/supported_sop_classes]
#SOPPERFORMEDPROCEDURESTEP 
#sop_class = 1.2.840.10008.3.1.2.3.3
#SOPGPPERFORMEDPROCEDURESTEP 
sop_class = 1.2.840.10008.5.1.4.32.3

#===========================================
# GPSPSSCP fields 
# This is currently a user provided SCP class
# that will access this data by calling
# CFGGroup gpsps_scp_cfg =
# session_settings_.getSessionCfgGroup("GPSPSSCP", "File:/xxx/DefaultArchiveCfg/GPSPSSCP" );
# * Note that the default location is in the second CFGGroup name arg.
# It could be null if we always expect to find it here.
#
#===========================================
[GPSPSSCP]
[GPSPSSCP/supported_sop_classes]
#SOPGPSCHEDULEDPROCEDURESTEP 
sop_class = 1.2.840.10008.5.1.4.32.2

#===========================================
# Store SCP fields
# defaults are in proc cfg at:
# cs_lib/DSS/StoreSCP/default_session_cfg
#===========================================
[STORESCP]
[STORESCP/supported_sop_classes]
# standard CT
sop_class = 1.2.840.10008.5.1.4.1.1.2
# standard MR
sop_class = 1.2.840.10008.5.1.4.1.1.4

#===========================================
# QR SCP fields
# defaults are in proc cfg at:
# cs_lib/DSS/QRSCP/default_session_cfg
#===========================================
[ QRSCP ]
enable_relational_retrieval = yes
filter_query_responses = yes
send_pending_move_get_status = yes
continue_after_subop_error = yes
c_store_subop_timeout_seconds = 10

[ QRSCP/supported_sop_classes ]
# UID_SOPPATIENTQUERY_FIND
sop_class = 1.2.840.10008.5.1.4.1.2.1.1
# UID_SOPSTUDYQUERY_FIND
sop_class = 1.2.840.10008.5.1.4.1.2.2.1
# UID_SOPSTUDYQUERY_MOVE
sop_class = 1.2.840.10008.5.1.4.1.2.2.2

[ QRSCP/supported_store_sop_classes ]
#SOPCLASSCOMPUTEDRADIOGRAPHY  
#sop_class = 1.2.840.10008.5.1.4.1.1.1

#===========================================
# Store Commit SCP fields
# defaults are in proc cfg at:
# cs_lib/DSS/StoreCommitSCP/default_session_cfg
#===========================================
[ StoreCommitSCP ]
#
#   UID's of the sop classes that will be supported by the SCP, in order of
#   preference.
#
[ StoreCommitSCP/supported_sop_classes ]
#UIDSOPCLASSSTORAGECOMMITMENTPUSHMODEL
sop_class = 1.2.840.10008.1.20.1

